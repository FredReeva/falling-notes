{"version":3,"sources":["components/Sound.js","libraries/melodygen/utils.js","components/GlobalStyles.js","components/MainMenu.js","components/MidiCreator.js","components/menu_chords/ChordsDnDSection.js","components/menu_chords/DropMenu.js","components/menu_chords/AddChordSection.js","components/shared_components/BlurredPage.js","components/shared_components/HeaderMenu.js","components/shared_components/ModalMenu.js","components/menu_chords/ChordsMenu.js","components/Background.js","Themes.js","libraries/melodygen/piece.prototype.js","libraries/melodygen/generators/Segmentation.js","libraries/melodygen/generators/Directionality.js","libraries/melodygen/generators/Pitch/pitch.constants.js","libraries/melodygen/generators/ChordScaleTonality.js","libraries/melodygen/generators/Transform/transform.repetition.js","libraries/melodygen/generators/Transform/transform.retrogradation.js","libraries/melodygen/generators/Pitch/pitch.filters.js","libraries/melodygen/generators/Pitch/Pitch.js","libraries/melodygen/generators/Transform/transform.pitchvariation.js","libraries/melodygen/generators/Transform/transform.temporalvariation.js","libraries/melodygen/generators/Transform/transform.contrast.js","libraries/melodygen/generators/Transform/Transform.js","libraries/melodygen/generators/OnsetTime.js","libraries/melodygen/main.js","components/firebase.js","components/shared_components/RadioButton.js","components/menu_styles/StyleMenu.js","components/shared_components/Form.js","components/menu_songs/SongTitleMenu.js","components/shared_components/Slider.js","components/menu_parameters/ParametersMenu.js","components/help page/HelpMenu.js","App.js","reportWebVitals.js","index.js"],"names":["baseVolume","songTempo","analyserBusLeft","Tone","analyserBusRight","split","connect","eq","set","high","highFrequency","mid","midFrequency","comp","attack","release","knee","limiter","connectEffectsChain","chain","i","length","melodyInstrument","melodyLoop","melodySequence","chordInstrument","chordLoop","chordSequence","loopDuration","piano","polySynthPiano","volume","oscillator","type","spread","Math","random","envelope","decay","sustain","start","synth","createSynthPiano","pad","polySynthPad","modulationFrequency","detune","vibrato","filt","lfo","frequency","createSynthPad","lead","portamento","humanize","createSynthLead","bell","bells","harmonicity","modulationIndex","modulation","modulationEnvelope","autoPanner","depth","createSynthBell","Sound","props","useEffect","parameters","tempo","forEach","loop","dispose","pop","chordOnSet","bassnote","chordSound","chords","chord","input","tonic","color","chordNotes","notes","push","time","duration","parseInt","instrument","triggerAttackRelease","createChordLoop","melody","note","transpose","melodySound","transposition","m","pitch","f","pow","onsetTime","createMelodyLoop","context","busLeft","busRight","pickState","floor","sum","randItem","array","convert","notesArray","converted","numbers","letters","0","1","2","3","4","5","6","7","8","9","10","11","octave","trunc","nearestNote","difference","currdiff","abs","music_chord","require","sharpmap","toString","GlobalStyles","createGlobalStyle","defaultTheme","createMuiTheme","theme","overrides","MuiTooltip","popper","marginTop","tooltip","fontSize","fontWeight","backgroundColor","borderStyle","arrow","StyledMainMenu","styled","div","panelColor","border","MenuButton","button","buttonColor","MainMenu","className","Tooltip","TransitionComponent","Fade","TransitionProps","timeout","placement","enterDelay","title","onClick","toggleMenu","stopContext","computeMelody","style","background","pointerEvents","songName","MidiWriter","melodyMidi","Track","chordsMidi","setTempo","pause","addEvent","NoteEvent","wait","event","index","sequential","notesInChord","convertChord","dur","track","Writer","link","document","createElement","download","href","dataUri","body","appendChild","click","removeChild","createMidi","startStopContext","isPlaying","ChordsTimeline","StyledChord","size","DeleteChord","IoRemoveCircle","ChordsDnDSection","onDragEnd","handleOnDragEnd","droppableId","direction","provided","droppableProps","ref","innerRef","map","draggableId","id","draggableProps","dragHandleProps","quality","onDelete","width","margin","placeholder","StyledDropMenu","keyboard","css","StyledElement","element","DropMenu","e","stopPropagation","elements","setElements","StyledAddChord","AddButton","IoAddCircle","Select","AddChord","useState","setTonic","setQuality","setDuration","showMenu","setShowMenu","newMenuState","changeMenu","onAdd","StyledBlurredPage","BlurredPage","children","StyledHeaderMenu","StyledCloseBtn","StyledTitleDiv","HeaderMenu","titleMenu","StyledModalMenu","ModalMenu","ChordsMenu","updateServer","result","destination","items","Array","from","splice","source","reorderedItem","updateChords","filter","AddChordSection","Date","now","newChord","StyledBackground","sleep","ms","Promise","resolve","setTimeout","mainColor","THREE","prevColor","getHSL","setHSL","h","clone","colorNeedsUpdate","scene","fog","triggerStarFall","generateStar","radius","timer","autoStart","geom","position","Float32Array","velocity","setAttribute","setUsage","computeBoundingBox","material","resetStar","star","geometry","attributes","targetX","targetY","targetZ","directionX","directionY","directionZ","updateStar","positions","progress","getElapsedTime","deathColor","lerp","sound","audioCtx","analyserLeft","createAnalyser","analyserRight","fftSize","smoothingTimeConstant","minDecibels","maxDecibels","bufferLength","frequencyBinCount","Background","mount","useRef","winWidth","current","clientWidth","winHeight","clientHeight","camera","target","lookAt","renderer","alpha","setSize","setPixelRatio","window","devicePixelRatio","mouseX","mouseY","windowHalfX","windowHalfY","addEventListener","clientX","clientY","worldDepth","world","numPoints","colors","k","j","x","z","intensity","r","g","b","vertexColors","transparent","generateWorld","scale","add","starField","num","pos","col","y","sqrt","hueOffset","offsetHSL","s","starFieldMaterial","generateStarField","starFallRadius","starFall1","star1","timer1","starFall2","star2","timer2","starFall3","star3","timer3","starFall4","star4","timer4","starFall5","star5","timer5","floorGeom","floorMat","side","rotateX","PI","domElement","aspect","updateProjectionMatrix","animate","resume","spectrumLeft","Uint8Array","spectrumRight","spectrum","getByteFrequencyData","reverse","data","updateWorld","updateSpectrum","a","startStarFall","remove","endStarFall","stop","field","updateStarField","rotation","needsUpdate","requestAnimationFrame","render","themes","dark","orange","pieceDuration","Number","segmentDuration","pausePresence","staticScaleAssociation","Boolean","segments","directionality","String","transform","method","Object","vars","diatonicScale","name","tonality","cromaticOffset","objects","piece","segment","object","Segmentation","this","calcPieceDuration","calcSegmentDuration","segmentQty","pieceProto","calcgcd","gcd","factors","rand","Directionality","queue","availableChoices","includes","choice","Utils","shift","colorToScale","colorToStaticScale","scaleNumber","ionian","dorian","phrygian","lydian","mixolydian","aeolian","locrian","scalePattern","cromaticToDiatonic","diatonicToCromaticNote","diatonicNote","offset","prototype","mod","n","ChordScaleTonality","segmentChordData","calcSegmentChordData","previousScale","scalesAssociated","firstCromaticNote","Const","cromaticNote","scaleIndex","previousTonality","scales","fifthCircle","previousTonalityIndex","cromaticTonality","minDistance","minScale","distance","min","calcDiatonicArray","segmentChords","chordSegs","diatonicScaleObj","calcDiatonicScale","chordObj","pattern","octaves","Repetition","segmentIndex","motif","previousSegment","generateTiming","generatePitch","Retrogradation","startingOctave","diatonicArray","output","specifiedNotes","melodicCountour","precNotes","avg","localRange","steps","globalRange","max","NaNclean","notesToKeep","NaN","Pitch","startingNote","debug","diatonicPitches","minPitch","maxPitch","localRangeDirection","filteredNotes","topFilteredNotes","diatonicChordNotes","Filters","secondFilteredNotes","melodicContour","NOTE","firstFilteredNotes","diatonicStartingPitch","diatonicStartingOctave","diatonicStartingNote","firstNote","lastnote","lastNotePosition","cleanedDiatonic","noteSet","probsProto","probs","sumprobs","isNaN","p","w","console","warn","log","PitchVariation","obj","generate","lastPitch","TemporalVariation","durations","temp","Contrast","cells","granularity","filledCells","c","freeCells","objDuration","adjust","objType","Transform","lastSegmentIndex","lastObjectIndex","lastObj","choices","OnsetTime","JSON","parse","stringify","MelodyGen","classicMode","pickTransformations","applyTransformations","export","out","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","StyledRadioButton","StyledButton","RadioButton","display","flexDirection","alignItems","buttons","buttonPressed","mode","hex","Container","StyledColorPicker","HuePicker","StyledPointer","StyleMenu","height","pointer","onChangeComplete","setColor","chordSounds","changeChordSound","melodySounds","changeMelodySound","StyledForm","form","SubmitButton","DeleteButton","Form","onSubmit","value","onChange","allSongs","indexOf","StyledSongSection","StyledSongName","SongTitleMenu","setValue","song","innerText","borderColor","StyledSliderSection","StyledSlider","Slider","step","onSlide","ParametersMenu","changeTempo","notePause","changeNotePause","complexityMode","complexityModes","changeComplexity","StyledHelperSection","HelpMenu","marginBottom","rel","App","updateSongName","updateAllSongs","updateMelody","setIsPlaying","hsl","l","updateParameters","getAllSongs","getSong","refSongs","firestore","collection","refParams","docName","doc","get","then","exists","loadSong","key","newAllSongs","catch","error","newChordState","delete","newParamsState","snapshot","updatedSongs","docs","bottom","right","zIndex","chordList","readChord","classic","balance","generatedMelody","top","cursor","preventDefault","text","submitSongName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":";oGAAA,mKAMIA,GAAc,EACdC,EAAY,IAGVC,EAAkB,IAAIC,IAAa,EAAG,GACtCC,EAAmB,IAAID,IAAa,EAAG,GACvCE,EAAQ,IAAIF,IAAW,GAC7BE,EAAMC,QAAQJ,EAAiB,GAC/BG,EAAMC,QAAQF,EAAkB,GAGhC,IAAMG,EAAK,IAAIJ,IAAS,EAAE,EAAE,GAC5BI,EAAGC,IAAI,CACHC,KAAM,GACNC,cAAe,IACfC,IAAK,EACLC,aAAc,MAElBL,EAAGD,QAAQD,GAGX,IAAMQ,EAAO,IAAIV,KAAgBH,EAAc,GAC/Ca,EAAKL,IAAI,CACLM,OAAQ,IACRC,QAAS,IACTC,KAAM,KAEV,IAAMC,EAAU,IAAId,IAAaH,GAKjC,SAASkB,EAAoBC,GACzB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAS,EAAGD,GAAK,EACvCD,EAAMC,GAAGd,QAAQa,EAAMC,EAAI,IAE/BD,EAAMA,EAAME,OAAS,GAAGf,QAAQC,GAChCY,EAAMA,EAAME,OAAS,GAAGf,QAAQO,GATpCA,EAAKP,QAAQW,GACbA,EAAQX,QAAQH,OAahB,IAAImB,EAAmB,GACnBC,EAAa,GACbC,EAAiB,GAEjBC,EAAkB,GAClBC,EAAY,GACZC,EAAgB,GAChBC,EAAe,EAoMnB,IAAIC,EAnJJ,WAEI,IAAIC,EAAiB,IAAI3B,IACzB2B,EAAetB,IAAI,CACfuB,OAAQ/B,EACRgC,WAAY,CACRC,KAAM,UACNC,OAAsB,GAAdC,KAAKC,UAEjBC,SAAU,CACNvB,OAAQ,KACRwB,MAAO,EACPC,QAAS,GACTxB,QAAS,MAIjB,IAAIR,EAAK,IAAIJ,KAAU,EAAG,EAAG,GAQ7B,OAFAe,EAFY,CAACY,EAHC,IAAI3B,IAAa,GAAI,IAAKqC,QAGFjC,EAFzB,IAAIJ,IAAY,GAAK,EAAG,IAAKqC,UAMnC,CACHC,MAAOX,GAyHHY,GACRC,EArHJ,WAEI,IAAIC,EAAe,IAAIzC,IACvByC,EAAapC,IAAI,CACbuB,QAAQ/B,GACRgC,WAAY,CACRC,KAAM,MACNY,oBAAqB,GACrBC,OAAsB,GAAdX,KAAKC,UAEjBC,SAAU,CACNvB,OAAQ,GACRwB,MAAO,EACPC,QAAS,GACTxB,QAAS,MAIjB,IAAIR,EAAK,IAAIJ,IAAS,EAAG,EAAG,GACxB4C,EAAU,IAAI5C,IAAa,GAAI,KAC/B6C,EAAO,IAAI7C,IAAY,KAAM,WAAY,IACzC8C,EAAM,IAAI9C,IAAS,GAAK,IAAK,MAQjC,OAPA8C,EAAI3C,QAAQ0C,EAAKE,WACjBD,EAAIT,QAIJtB,EAFY,CAAC0B,EAAcG,EAASC,EAAMzC,IAInC,CACHkC,MAAOG,GAuFLO,GACNC,EAnFJ,WACI,IAAIA,EAAO,IAAIjD,IAAW,CACtB4B,QAAQ/B,GACRqD,WAAY,IACZrB,WAAY,CACRC,KAAM,UAEVI,SAAU,CACNvB,OAAQ,GACRwB,MAAO,EACPC,QAAS,GACTxB,QAAS,GAGb+B,OAAQ,KAcZ,OAJA5B,EAFY,CAACkC,EALA,IAAIjD,IAAY,GAAK,GAAI,IACvB,IAAIA,IAAmB,EAAE,GAAG,IAAIF,GAAY,IAC7C,IAAIE,IAAgB,IAAIF,EAAP,EAAmB,IAAKuC,QAC1C,IAAIrC,IAAY,IAAK,cAQ3B,CACHsC,MAAOW,EACPE,SAJW,IAyDRC,GACPC,EAjDJ,WACI,IAAIC,EAAQ,IAAItD,IAChBsD,EAAMjD,IAAI,CACNkD,YAAa,EACbC,gBAAiB,EACjB3B,WAAY,CACRC,KAAM,QAEVI,SAAU,CACNvB,OAAQ,IACRwB,MAAO,EACPC,QAAS,EACTxB,QAAS,GAEb6C,WAAY,CACR3B,KAAM,YAEV4B,mBAAoB,CAChB/C,OAAQ,IACRwB,MAAO,GACPC,QAAS,EACTxB,QAAS,IAEbgB,QAAQ/B,KAGZ,IAAI8D,EAAa,IAAI3D,IAAsB,IAAIF,EAAV,KAarC,OAZA6D,EAAWtD,IAAI,CACXuD,MAAO,EACP9B,KAAM,cAEV6B,EAAWtB,QAKXtB,EADY,CAACuC,EAAOK,EAHV,IAAI3D,IAAmB,EAAE,GAAG,IAAIF,GAAY,KACxC,IAAIE,IAAY,IAAK,cAM5B,CACHsC,MAAOgB,EACPH,SAHW,IAWRU,GA2EIC,UAzED,SAACC,GAsEX,OApEAC,qBAAU,WAENlE,EAAYiE,EAAME,WAAWC,QAE9B,CAACH,EAAME,WAAWC,QAErBF,qBAAU,WAINzC,EAAU4C,SAAQ,SAACC,GACfA,EAAKC,UACL9C,EAAU+C,IAAIF,MAGlB5C,EAAgB,GAChBC,EAAe,EACf,IAAI8C,EAAa,EAGbC,EAAW,EACoB,SAA/BT,EAAME,WAAWQ,YACjBD,EAAW,EACXlD,EAAkBI,GACoB,OAA/BqC,EAAME,WAAWQ,aACxBD,EAAW,EACXlD,EAAkBkB,GAGtBuB,EAAMW,OAAOP,SAAQ,SAACQ,GAClB,IAAIC,EAAQ,CAAEC,MAAOF,EAAK,MAAYG,MAAOH,EAAK,SAC9CE,EAAQE,YAAWH,EAZd,EAY4BJ,GACjCQ,EAAQD,YAAWH,EAbd,GAcTI,EAAMC,KAAKJ,EAAM,IACjBrD,EAAcyD,KAAK,CAAEC,KAAMX,EAAYS,MAAOA,EAAOG,SAAUR,EAAK,WACpEJ,GAAca,SAAST,EAAK,UAC5BlD,EAAe8C,KAGnB,IAAIG,EA/OZ,SAAyBW,GACrB,GAAI7D,GAAiB,GAAI,CACrB,IAAI4C,EAAO,IAAIpE,KAAU,SAAUkF,GAE/B1D,EAAc2C,SAAQ,SAACQ,GACnBU,EAAU,MAAUC,qBAChBX,EAAMK,MACNI,SAAST,EAAMQ,WAAW,IAAIrF,GAC9BoF,EAAKP,EAAMO,MAAM,IAAIpF,GACrB,QAGT2B,GAAc,IAAI3B,IAErB,OADAsE,EAAK/B,QACE+B,GAiOMmB,CAAgBjE,GAC7BC,EAAU0D,KAAKP,GAIftD,EAAW+C,SAAQ,SAACC,GAChBA,EAAKC,UACLjD,EAAWkD,IAAIF,MAGnB/C,EAAiB,GACjB0C,EAAMyB,OAAOrB,SAAQ,SAACsB,GAClBpE,EAAe4D,KAAKQ,MAGxB,IAAIC,EAAY,EACoB,SAAhC3B,EAAME,WAAW0B,aACjBxE,EAAmB8B,EACnByC,EAAY,GAC2B,SAAhC3B,EAAME,WAAW0B,cACxBxE,EAAmBkC,EACnBqC,EAAY,GAGhB,IAAIF,EApPZ,SAA0BH,EAAYO,GAClC,GAAIvE,GAAkB,GAAI,CACtB,IAAI+C,EAAO,IAAIpE,KAAU,SAAUkF,GAE/B7D,EAAe8C,SAAQ,SAACsB,GACpB,GAAiB,QAAbA,EAAK3D,KAAgB,CACrB,IAAI+D,EAAIJ,EAAKK,MAETC,EAAkD,IAA9C/D,KAAKgE,IAAK,GAAIH,EAAE,GAAkB,GAAdD,GAAmB,IAC/CP,EAAU,MAAUC,qBAChBS,EACAN,EAAKN,UAAU,IAAIrF,GACnBoF,EAAKO,EAAKQ,WAAW,IAAInG,GACzB,SAIb2B,GAAc,IAAI3B,IAGrB,OAFAsE,EAAKjB,SAAWkC,EAAU,SAC1BjB,EAAK/B,QACE+B,GAgOM8B,CAAiB/E,EAAkBuE,GAChDtE,EAAW6D,KAAKO,KAEjB,CAACzB,EAAMyB,OAAQzB,EAAME,WAAW0B,YAAa5B,EAAME,WAAWQ,WAAYV,EAAME,WAAWC,QAEvF,8BAMJ,IAAIiC,EAAUnG,MACVoG,EAAUrG,EACVsG,EAAWpG,G,sDCzUf,SAASqG,EAAU1B,GAYtB,IANA,IAGI3C,EAASD,KAAKuE,MAAM,IAAAvE,KAAKC,SAHnB,GAKNuE,EAAM,EACFvF,EAAI,EAAGA,EAAE2D,EAAM1D,OAAQD,IAE3B,GAAGgB,IADHuE,GAAO5B,EAAM3D,GAAG,IACE,OAAO2D,EAAM3D,GAAG,GAMnC,SAASwF,EAASC,GAErB,OAAOA,EADM1E,KAAKuE,MAAOvE,KAAKC,SAAWyE,EAAMxF,SAK5C,SAASyF,EAAQC,GAYpB,IAVA,IAAIC,EAAY,GACZC,EAAU,CACV,EAAK,EAAG,KAAM,EAAG,EAAK,EAAG,KAAM,EAAI,EAAK,EAAG,EAAK,EAAG,KAAM,EAAG,EAAK,EAAG,KAAM,EAAG,EAAK,EAAG,KAAM,GAAI,EAAK,GACpG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAK,EAAG,GAAM,GACzC,MAAO,GAAI,MAAO,EAAG,MAAO,EAAG,MAAO,EAAG,MAAO,EAAG,MAAM,EAAG,MAAO,GAEnEC,EAAU,CACVC,EAAG,IAAKC,EAAG,KAAMC,EAAG,IAAKC,EAAG,KAAOC,EAAG,IAAKC,EAAG,IAAKC,EAAG,KAAMC,EAAG,IAAKC,EAAG,KAAMC,EAAG,IAAKC,GAAI,KAAKC,GAAI,KAG9F1G,EAAE,EAAGA,EAAE2F,EAAW1F,OAAQD,IAC9B,GAA6B,iBAAlB2F,EAAW3F,GAClB4F,EAAU5B,KAAK6B,EAAQF,EAAW3F,SACjC,CACD,IAAI2G,EAAS5F,KAAK6F,MAAMjB,EAAW3F,GAAK,IAAM,EAC9C4F,EAAU5B,KAAK8B,EAAQH,EAAW3F,GAAG,IAAM2G,GAInD,OAAOf,EAKJ,SAASiB,EAAYlB,EAAYnB,GAIpC,IAHA,IAAIsC,EAAa,KACbD,EAAc,KAEV7G,EAAE,EAAGA,EAAE2F,EAAW1F,OAAQD,IAAI,CAClC,IAAI+G,EAAWhG,KAAKiG,IAAIrB,EAAW3F,GAAKwE,IACtB,MAAfqC,GAIIE,EAAWD,KAHdD,EAAclB,EAAW3F,GACzB8G,EAAaC,GASrB,OAAOF,EAIJ,SAAS/C,EAAWJ,GAAoB,IAAbiD,EAAY,uDAAL,KAC/BM,EAAcC,EAAQ,KACxBC,EAAW,CAAC,MAAO,IAAK,MAAO,KAAM,MAAO,IAAK,MAAO,IAAK,MAAO,KAAM,MAAO,IAAK,MAAO,KAC7FpD,EAAQkD,EAAYvD,EAAMG,MAAOH,EAAME,OAE3C,GAAe,MAAZG,EAAM,GACL,KAAM,iCAAmCL,EAAME,MAAQF,EAAMG,MAAQ,mBAGrE,IAAI,IAAI7D,EAAE,EAAGA,EAAE+D,EAAM9D,OAAQD,IACtB+D,EAAM/D,KAAMmH,IACXpD,EAAM/D,GAAKmH,EAASpD,EAAM/D,KAEjB,MAAV2G,IACC5C,EAAM/D,IAAM2G,EAAOS,YAI3B,OAAOrD,EAhGf,2K,yMCEasD,EAAeC,YAAH,iiF,8ECmBnBC,EAAeC,cACfC,EAAQD,YAAe,CAC3BE,UAAW,CACTC,WAAY,CACRC,OAAQ,CACJC,UAAW,QAEfC,QAAS,CACLC,SAAU,QACVC,WAAY,OACZnE,MAAO,QACPoE,gBAAiB,4BACjBC,YAAa,QAEjBC,MAAO,CACHtE,MAAO,4BACPqE,YAAa,YAMnBE,EAAiBC,IAAOC,IAAV,uVAMF,SAACxF,GAAD,OAAWA,EAAM2E,MAAMc,cAO3B,SAACzF,GAAD,OAAWA,EAAM2E,MAAMe,UAM/BC,EAAaJ,IAAOK,OAAV,+VAIF,SAAC5F,GAAD,OAAWA,EAAM2E,MAAMe,UAGnB,SAAC1F,GAAD,OAAWA,EAAM2E,MAAMkB,eAsM1BC,EAzLE,SAAC9F,GAEd,OACI,cAAC,IAAD,CAAkB2E,MAAOF,EAAzB,SACI,eAACa,EAAD,CAAgBS,UAAW/F,EAAM+F,UAAjC,UACI,cAAC,IAAD,CAAkBpB,MAAOA,EAAzB,SACI,cAACqB,EAAA,EAAD,CACIC,oBAAqBC,IACrBC,gBAAiB,CAAEC,QAAS,KAC5BC,UAAU,SACVC,WAAY,IACZC,MAAM,iBACNlB,OAAK,EANT,SAQI,cAACM,EAAD,CACIa,QAAS,WACLxG,EAAMyG,WAAW,GACjBzG,EAAM0G,eAHd,SAMI,cAAC,IAAD,CAAQX,UAAU,eAK9B,cAAC,IAAD,CAAkBpB,MAAOA,EAAzB,SACI,cAACqB,EAAA,EAAD,CACIC,oBAAqBC,IACrBC,gBAAiB,CAAEC,QAAS,KAC5BC,UAAU,SACVC,WAAY,IACZC,MAAM,aACNlB,OAAK,EANT,SAQI,cAACM,EAAD,CACIa,QAAS,WACLxG,EAAMyG,WAAW,GACjBzG,EAAM0G,eAHd,SAMI,cAAC,IAAD,CAAgBX,UAAU,eAKtC,cAAC,IAAD,CAAkBpB,MAAOA,EAAzB,SACI,cAACqB,EAAA,EAAD,CACIC,oBAAqBC,IACrBC,gBAAiB,CAAEC,QAAS,KAC5BC,UAAU,SACVC,WAAY,IACZC,MAAM,wBACNlB,OAAK,EANT,SAQI,cAACM,EAAD,CACIa,QAAS,WACLxG,EAAM0G,cACN1G,EAAM2G,iBAEVC,MAAO,CACHC,WAC4B,IAAxB7G,EAAMW,OAAOxD,OAAe,mBAAqB,KACrD2J,cAAuC,IAAxB9G,EAAMW,OAAOxD,OAAe,OAAS,MAR5D,SAWI,cAAC,IAAD,CAAQ4I,UAAU,eAK9B,cAAC,IAAD,CAAkBpB,MAAOA,EAAzB,SACI,cAACqB,EAAA,EAAD,CACIC,oBAAqBC,IACrBC,gBAAiB,CAAEC,QAAS,KAC5BC,UAAU,SACVC,WAAY,IACZC,MAAM,YACNlB,OAAK,EANT,SAQI,cAACM,EAAD,CACIa,QAAS,WACLxG,EAAMyG,WAAW,IAFzB,SAKI,cAAC,IAAD,CAAgBV,UAAU,eAKtC,cAAC,IAAD,CAAkBpB,MAAOA,EAAzB,SACI,cAACqB,EAAA,EAAD,CACIC,oBAAqBC,IACrBC,gBAAiB,CAAEC,QAAS,KAC5BC,UAAU,SACVC,WAAY,IACZC,MAAM,iBACNlB,OAAK,EANT,SAQI,cAACM,EAAD,CACIa,QAAS,WACLxG,EAAMyG,WAAW,GACjBzG,EAAM0G,eAEVE,MAAO,CACHC,WAC4B,IAAxB7G,EAAMW,OAAOxD,OAAe,mBAAqB,KACrD2J,cAAuC,IAAxB9G,EAAMW,OAAOxD,OAAe,OAAS,MAR5D,SAWI,cAAC,IAAD,CAAY4I,UAAU,eAKlC,cAAC,IAAD,CAAkBpB,MAAOA,EAAzB,SACI,cAACqB,EAAA,EAAD,CACIC,oBAAqBC,IACrBC,gBAAiB,CAAEC,QAAS,KAC5BC,UAAU,SACVC,WAAY,IACZC,MAAM,gBACNlB,OAAK,EANT,SAQI,cAACM,EAAD,CACIa,QAAS,YC3MX,SAAC/E,EAAQd,EAAQR,EAAO4G,GAC9C,IAAIC,EAAa5C,EAAQ,KAErB6C,EAAa,IAAID,EAAWE,MAC5BC,EAAa,IAAIH,EAAWE,MAEhCD,EAAWG,SAASjH,GACpBgH,EAAWC,SAASjH,GAEpB,IAAIkH,EAAQ,EAMZ5F,EAAOrB,SAAQ,SAACsB,GACS,UAAjBA,EAAI,OACJ2F,GAAgB3F,EAAI,UAGH,SAAjBA,EAAI,OACJ2F,EATG,CAAC,IAAY,IAScA,GAE9BJ,EAAWK,SACP,CACI,IAAIN,EAAWO,UAAU,CACrBxF,MAAOL,EAAI,MACXN,SAAU,EAAIM,EAAI,SAClB8F,KAAMH,MAId,SAAUI,EAAOC,GACb,MAAO,CAAEC,YAAY,MAI7BN,EAAQ,MAIhB,IAAIO,EAAe,GACfC,EAAe,CAAE/G,MAAO,IAAKC,MAAO,SAExCJ,EAAOP,SAAQ,SAACQ,GACZgH,EAAe,GACfC,EAAa/G,MAAQF,EAAK,MAC1BiH,EAAa9G,MAAQH,EAAK,QAC1BgH,EAAe5G,YAAW6G,EAAc,GAExC,IAAIC,EAAM,EAAIlH,EAAK,SACfkH,IAAQ,EAAI,IAAGA,EAAM,MAGzBX,EAAWG,SACP,CACI,IAAIN,EAAWO,UAAU,CACrBxF,MAAO6F,EACPxG,SAAU0G,MAGlB,SAAUL,EAAOC,GACb,MAAO,CAAEC,YAAY,SAKjC,IAAII,EAAQ,IAAIf,EAAWgB,OAAO,CAACf,EAAYE,IAI3Cc,EAAOC,SAASC,cAAc,KAClCF,EAAKG,SAAWrB,EAChBkB,EAAKI,KAAON,EAAMO,UAClBJ,SAASK,KAAKC,YAAYP,GAC1BA,EAAKQ,QACLP,SAASK,KAAKG,YAAYT,GDgIEU,CACI3I,EAAMyB,OACNzB,EAAMW,OACNX,EAAMG,MACNH,EAAM+G,WAGdH,MAAO,CACHC,WAC4B,IAAxB7G,EAAMyB,OAAOtE,QAAwC,IAAxB6C,EAAMW,OAAOxD,OACpC,mBACA,KACV2J,cAC4B,IAAxB9G,EAAMyB,OAAOtE,QAAwC,IAAxB6C,EAAMW,OAAOxD,OACpC,OACA,MAjBlB,SAoBI,cAAC,IAAD,CAAmB4I,UAAU,eAMzC,cAAC,IAAD,CAAkBpB,MAAOA,EAAzB,SACI,cAACqB,EAAA,EAAD,CACIC,oBAAqBC,IACrBC,gBAAiB,CAAEC,QAAS,KAC5BC,UAAU,SACVC,WAAY,IACZC,MAAM,aACNlB,OAAK,EANT,SAQI,cAACM,EAAD,CACIa,QAASxG,EAAM4I,iBACfhC,MAAO,CACHC,WAC4B,IAAxB7G,EAAMyB,OAAOtE,QAAwC,IAAxB6C,EAAMW,OAAOxD,OACpC,mBACA,KACV2J,cAC4B,IAAxB9G,EAAMyB,OAAOtE,QAAwC,IAAxB6C,EAAMW,OAAOxD,OACpC,OACA,MAVlB,SAaM6C,EAAM6I,UAGJ,cAAC,IAAD,CAAc9C,UAAU,SAFxB,cAAC,IAAD,CAAcA,UAAU,qB,SEzPlD+C,GAAiBvD,IAAOC,IAAV,yPAYduD,GAAcxD,IAAOC,IAAV,yVAGC,SAACxF,GAAD,OAAWA,EAAM2E,MAAMkB,eAG3B,SAAC7F,GAAD,OAAWA,EAAM2E,MAAMe,UAKpB,SAAC1F,GACV,OAAoB,GAAbA,EAAMgJ,QAUfC,GAAc1D,YAAO2D,IAAP3D,CAAH,mQAuEF4D,GAzDU,SAACnJ,GACtB,OACI,cAAC,KAAD,CAAiBoJ,UAAWpJ,EAAMqJ,gBAAlC,SACI,cAAC,KAAD,CAAWC,YAAY,SAASC,UAAU,aAA1C,SACK,SAACC,GAAD,OACG,eAACV,GAAD,yBACI/C,UAAU,UACNyD,EAASC,gBAFjB,IAGIC,IAAKF,EAASG,SAHlB,UAKK3J,EAAMW,OAAOxD,OAAS,EACnB6C,EAAMW,OAAOiJ,KAAI,SAAChJ,EAAO8G,GAAR,OACb,cAAC,KAAD,CAEImC,YAAajJ,EAAMkJ,GACnBpC,MAAOA,EAHX,SAKK,SAAC8B,GAAD,OACG,eAACT,GAAD,qCACIC,KAAMpI,EAAMQ,SACZsI,IAAKF,EAASG,UACVH,EAASO,gBACTP,EAASQ,iBAJjB,cAMI,+BACKpJ,EAAME,MACNF,EAAMqJ,WAGX,cAAChB,GAAD,CACIzC,QAAS,WACLxG,EAAMkK,SAAStJ,EAAMkJ,aAlBhClJ,EAAMkJ,OA0BnB,mBACIlD,MAAO,CACHuD,MAAO,OACPC,OAAQ,QAHhB,mHAUHZ,EAASa,sBCnG5BC,GAAiB/E,IAAOC,IAAV,0XAUN,SAACxF,GAAD,OAAWA,EAAM2E,MAAMe,UAGnB,SAAC1F,GAAD,OAAWA,EAAM2E,MAAMc,cAMnC,SAACzF,GAAD,MACqB,WAAnBA,EAAMuK,UACNC,YADA,8FAOFC,GAAgBlF,IAAOK,OAAV,4UAML,SAAC5F,GAAD,OAAWA,EAAM2E,MAAMe,UAGnB,SAAC1F,GAAD,OAAWA,EAAM2E,MAAMkB,eAUnC,SAAC7F,GAAD,MACqB,WAAnBA,EAAMuK,UACNC,YADA,mSAGM,SAACxK,GAAD,MACoB,MAAlBA,EAAM0K,SACNF,YADA,gGAIF,SAACxK,GAAD,MACoB,MAAlBA,EAAM0K,SACNF,YADA,qGAIF,SAACxK,GAAD,MACoB,MAAlBA,EAAM0K,SACNF,YADA,sGAIF,SAACxK,GAAD,MACoB,MAAlBA,EAAM0K,SACNF,YADA,sGAIF,SAACxK,GAAD,MACoB,MAAlBA,EAAM0K,SACNF,YADA,sGAIF,SAACxK,GAAD,MACoB,MAAlBA,EAAM0K,SACNF,YADA,uGAKF,SAACxK,GAAD,MACoB,OAAlBA,EAAM0K,SACNF,YADA,oGAIF,SAACxK,GAAD,MACoB,OAAlBA,EAAM0K,SACNF,YADA,wGAIF,SAACxK,GAAD,MACoB,OAAlBA,EAAM0K,SACNF,YADA,uGAIF,SAACxK,GAAD,MACoB,OAAlBA,EAAM0K,SACNF,YADA,uGAIF,SAACxK,GAAD,MACoB,OAAlBA,EAAM0K,SACNF,YADA,uGAIF,SAACxK,GAAD,MACoB,MAAlBA,EAAM0K,SACNF,YADA,yGA6BDG,GAtBE,SAAC3K,GACd,OACI,cAACsK,GAAD,CACI9D,QAAS,SAACoE,GAAD,OAAOA,EAAEC,mBAClBN,SAAUvK,EAAMuK,SAFpB,SAIKvK,EAAM8K,SAASlB,KAAI,SAACc,EAAShD,GAAV,OAChB,cAAC+C,GAAD,CACIF,SAAUvK,EAAMuK,SAChBG,QAASA,EAETlE,QAAS,SAACoE,GACN5K,EAAM+K,YAAYL,IAL1B,SAQKA,GALIhD,SCvHnBsD,GAAiBzF,IAAOC,IAAV,oVAWN,SAACxF,GAAD,OAAWA,EAAM2E,MAAMe,UAEnB,SAAC1F,GAAD,OAAWA,EAAM2E,MAAMc,cAGnCwF,GAAY1F,YAAO2F,IAAP3F,CAAH,kOAeT4F,GAAS5F,IAAOC,IAAV,mbAQE,SAACxF,GAAD,OAAWA,EAAM2E,MAAMe,UAGnB,SAAC1F,GAAD,OAAWA,EAAM2E,MAAMkB,eA8H1BuF,I,kBAAAA,GAnHf,SAAkBpL,GAAQ,IAAD,EACKqL,mBAAS,IADd,mBACdvK,EADc,KACPwK,EADO,OAESD,mBAAS,IAFlB,mBAEdpB,EAFc,KAELsB,EAFK,OAGWF,mBAAS,IAHpB,mBAGdjK,EAHc,KAGJoK,EAHI,OAiCWH,mBAAS,EAAC,GAAO,GAAO,IAjCnC,mBAiCdI,EAjCc,KAiCJC,EAjCI,KAkCfjF,EAAa,SAACvJ,GAChB,IAAIyO,EAAe,EAAC,GAAO,GAAO,GAC9BC,GAAcH,EAASvO,GAC3ByO,EAAazO,GAAK0O,EAClBF,EAAYC,IAGhB,OACI,eAACX,GAAD,WACI,eAACG,GAAD,CACI3E,QAAS,kBAAMC,EAAW,IAC1BG,MAAO,CACHC,WAAY4E,EAAS,GAAK,2BAA6B,MAH/D,UAMK3K,GAAgB,QAChB2K,EAAS,GACN,cAAC,GAAD,CACIlB,SAAS,SACTO,SArCL,CACX,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KA0BgBC,YAAa,SAACH,GACVU,EAASV,GACTnE,OAGR,QAGR,eAAC0E,GAAD,CACI3E,QAAS,SAACoE,GACNnE,EAAW,IAEfG,MAAO,CACHC,WAAY4E,EAAS,GAAK,2BAA6B,MAL/D,UAQKxB,GAAoB,UACpBwB,EAAS,GACN,cAAC,GAAD,CACIX,SA3CF,CAAC,QAAS,QAAS,OAAQ,SAAU,IAAK,QA4CxCC,YAAa,SAACH,GACVW,EAAWX,GACXnE,OAGR,QAGR,eAAC0E,GAAD,CACI3E,QAAS,kBAAMC,EAAW,IAC1BG,MAAO,CACHC,WAAY4E,EAAS,GAAK,2BAA6B,MAH/D,UAMKrK,GAAsB,WACtBqK,EAAS,GACN,cAAC,GAAD,CACIX,SA5DF,CAAC,IAAK,IAAK,IAAK,KA6DdC,YAAa,SAACH,GACVY,EAAYZ,GACZnE,OAGR,QAGR,cAACwE,GAAD,CACIzE,QAhGK,SAACoE,GACT9J,GAAUmJ,GAAY7I,IAG3BpB,EAAM6L,MAAM,CAAE/K,QAAOmJ,UAAS7I,aAC9BkK,EAAS,IACTC,EAAW,IACXC,EAAY,IACZE,EAAY,EAAC,GAAO,GAAO,MAyFnB9E,MAAO,CACH7F,MACKD,GAAUmJ,GAAY7I,EAEjB,mBADA,qBAEV0F,cACKhG,GAAUmJ,GAAY7I,EAAoB,KAAT,cCtKpD0K,GAAoBvG,IAAOC,IAAV,8QAqBRuG,GARK,SAAC/L,GACjB,OACI,cAAC8L,GAAD,CAAmBtF,QAASxG,EAAMwG,QAAlC,SACKxG,EAAMgM,YCfbC,GAAmB1G,IAAOC,IAAV,iGAMhB0G,GAAiB3G,IAAOC,IAAV,2KAUd2G,GAAiB5G,IAAOC,IAAV,0GAwBL4G,GAlBI,SAACpM,GAChB,OACI,eAACiM,GAAD,WACI,cAACE,GAAD,UACI,6BAAKnM,EAAMqM,cAEf,cAACH,GAAD,UACI,cAAC,IAAD,CACInG,UAAU,WACVS,QAAS,WACLxG,EAAMyG,sBCjCxB6F,GAAkB/G,IAAOC,IAAV,4VAUH,SAACxF,GAAD,OAAWA,EAAM2E,MAAMc,cAI3B,SAACzF,GAAD,OAAWA,EAAM2E,MAAMe,UAYtB6G,GARG,SAACvM,GACf,OACI,cAACsM,GAAD,CAAiBvG,UAAW/F,EAAM+F,UAAlC,SACK/F,EAAMgM,YC2BJQ,GA5CI,SAACxM,GAsBhB,IAAMyG,EAAa,WACfzG,EAAMyG,WAAW,GACjBzG,EAAMyM,gBAGV,OAAOzM,EAAMyL,SACT,sBAAK1F,UAAU,YAAf,UACI,cAAC,GAAD,CAAaS,QAASC,IACtB,eAAC,GAAD,CAAWV,UAAU,aAArB,UACI,cAAC,GAAD,CAAYsG,UAAW,aAAc5F,WAAYA,IACjD,8FACA,cAAC,GAAD,CACI9F,OAAQX,EAAMW,OACd0I,gBArBhB,SAAyBqD,GACrB,GAAKA,EAAOC,YAAZ,CACA,IAAMC,EAAQC,MAAMC,KAAK9M,EAAMW,QAFF,EAGLiM,EAAMG,OAAOL,EAAOM,OAAOtF,MAAO,GAAnDuF,EAHsB,oBAI7BL,EAAMG,OAAOL,EAAOC,YAAYjF,MAAO,EAAGuF,GAC1CjN,EAAMkN,aAAaN,KAiBP1C,SAnCI,SAACJ,GAEjB9J,EAAMkN,aAAalN,EAAMW,OAAOwM,QAAO,SAACvM,GAAD,OAAWA,EAAMkJ,KAAOA,SAmCvD,cAACsD,GAAD,CAAiBvB,MAhCZ,SAACjL,GAEd,IAAMkJ,EAAKuD,KAAKC,MAAMhJ,WAChBiJ,EAAQ,aAAKzD,MAAOlJ,GAE1BZ,EAAMkN,aAAN,sBAAuBlN,EAAMW,QAA7B,CAAqC4M,cA8BrC,M,kBC3CJC,GAAmBjI,IAAOC,IAAV,8GAQpB,SAASiI,GAAMC,GACX,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MAKxD,IAAII,GAAY,IAAIC,KAAY9P,KAAKC,SAAUD,KAAKC,SAAUD,KAAKC,UAI/D8P,IAFJF,IADAA,GAAYA,GAAUG,OAAOH,KACPI,OAAOJ,GAAUK,EAAG,GAAK,KAErBC,QAC1BJ,GAAYA,GAAUC,OAAOD,IAE7B,IAAIK,GAAmB,EAInBC,GAAQ,IAAIP,KAIZO,GAAMC,IAAM,IAAIR,KAFJ,UACE,KAGlBO,GAAMzH,WAAa,IAAIkH,KAAY,WAEnC,IAAIS,GAAkB,EAuMtB,SAASC,GAAaC,GAClB,IAAIC,EAAQ,IAAIZ,KAAY,CAAEa,WAAW,IAErCC,EAAO,IAAId,KAEXe,EAAW,IAAIC,aAAa,GAC5BC,EAAW,IAAID,aAAa,GAIhCD,EAAS,GAAc,EAATJ,GAAczQ,KAAKC,SAAW,IAC5C4Q,EAAS,GAAKJ,EAASzQ,KAAKC,SAC5B4Q,EAAS,GAAc,EAATJ,GAAczQ,KAAKC,SAAW,IAE5C4Q,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAKA,EAAS,GAGvBE,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EAEdA,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EAEdH,EAAKI,aACD,WACA,IAAIlB,KAAsBe,EAAU,GAAGI,SAASnB,OAEpDc,EAAKI,aACD,WACA,IAAIlB,KAAsBiB,EAAU,GAAGE,SAASnB,OAEpDc,EAAKM,qBAEL,IAAIC,EAAW,IAAIrB,KAAwB,CAAEhN,MAAO+M,KAGpD,MAAO,CAAC,IAAIC,KAAWc,EAAMO,GAAWT,GAG5C,SAASU,GAAUC,EAAMX,EAAOD,GAC5B,IAAII,EAAWQ,EAAKC,SAASC,WAAWV,SAASnM,MAC7CqM,EAAWM,EAAKC,SAASC,WAAWR,SAASrM,MAIjDmM,EAAS,GAAc,EAATJ,GAAczQ,KAAKC,SAAW,IAC5C4Q,EAAS,GAAK,GAA6B,GAAvB7Q,KAAKC,SAAW,IACpC4Q,EAAS,IAAMJ,EAASzQ,KAAKC,SAE7B4Q,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAKA,EAAS,GAGvB,IAAIW,EAAkC,KAAvBxR,KAAKC,SAAW,IAC3BwR,EAAkC,IAAvBzR,KAAKC,SAAW,IAC3ByR,EAAkC,KAAvB1R,KAAKC,SAAW,IAE3B0R,EAAaH,EAAUX,EAAS,GAChCe,EAAaH,EAAUZ,EAAS,GAChCgB,EAAaH,EAAUb,EAAS,GAGpCE,EAAS,GAAkB,KAAbY,EACdZ,EAAS,GAAkB,KAAba,EACdb,EAAS,GAAkB,KAAbc,EAEdd,EAAS,GAAkB,IAAbY,EACdZ,EAAS,GAAkB,IAAba,EACdb,EAAS,GAAkB,IAAbc,EAEdR,EAAKF,SAASrO,MAAQ,IAAIgN,KAAYD,IAEtCa,EAAMrQ,QAGV,SAASyR,GAAWT,EAAMX,EAAOD,GAC7B,IAAIsB,EAAYV,EAAKC,SAASC,WAAWV,SAASnM,MAC9CqM,EAAWM,EAAKC,SAASC,WAAWR,SAASrM,MAI7CsN,EAFOtB,EAAMuB,iBACD,EAIZD,EAAW,MAEXD,EAAU,IAAMhB,EAAS,GACzBgB,EAAU,IAAMhB,EAAS,GACzBgB,EAAU,IAAMhB,EAAS,IAI7B,IAAIjO,EAAQ+M,GAAUM,QAClB+B,EAAarC,GAAUM,QAE3B+B,GADAA,EAAaA,EAAWlC,OAAOkC,IACPjC,OAAOiC,EAAWhC,EAAG,EAAG,GAChDpN,EAAQA,EAAMqP,KAAKD,EAAYF,GAC/BX,EAAKF,SAASrO,MAAQA,EAGtBiP,EAAU,IAAMhB,EAAS,GACzBgB,EAAU,IAAMhB,EAAS,GACzBgB,EAAU,IAAMhB,EAAS,GAGrBiB,EAAW,GACXZ,GAAUC,EAAMX,EAAOD,GAM/B,IAAI2B,GAAQjM,EAAQ,KAChBkM,GAAWD,GAAMjO,QAEjBmO,GAAeD,GAASE,iBACxBC,GAAgBH,GAASE,iBAE7BD,GAAaG,QAAU,IACvBH,GAAaI,sBAAwB,GACrCJ,GAAaK,aAAe,IAC5BL,GAAaM,aAAe,GAE5BJ,GAAcC,QAAU,IACxBD,GAAcE,sBAAwB,GACtCF,GAAcG,aAAe,IAC7BH,GAAcI,aAAe,GAE7B,IAAIC,GAAeP,GAAaQ,kBAEhC9U,KAAaoU,GAAMhO,QAASkO,IAC5BtU,KAAaoU,GAAM/N,SAAUmO,IAkB7B,IAiPeO,GAjPI,SAAChR,GAChB,IAAIiR,EAAQC,iBAAO,MA6OnB,OA1OAjR,qBAAU,WAGN,IAAIkR,EAAWF,EAAMG,QAAQC,YACzBC,EAAYL,EAAMG,QAAQG,aAE1BC,EAAS,IAAIzD,KACb,IACAoD,EAAWG,EACX,EACA,KAEJE,EAAO1C,SAASxS,IAAI,EAAG,GAAI,GAC3B,IAAImV,EAAS,IAAI1D,KAAc,EAAG,EAAG,IACrCyD,EAAOE,OAAOD,GAEd,IAAIE,EAAW,IAAI5D,KAAoB,CAAE6D,OAAO,IAChDD,EAASE,QAAQV,EAAUG,GAC3BK,EAASG,cAAcC,OAAOC,kBAE9B,IAUIC,EAAS,EACTC,EAAS,EAETC,EAAchB,EAAW,EACzBiB,EAAcd,EAAY,EAE9BpJ,SAASmK,iBAAiB,aAC1B,SAA6B5K,GACzBwK,GAAWxK,EAAM6K,QAAUH,GAAehB,EAAY,EACtDe,GAAWzK,EAAM8K,QAAUH,GAAed,EAAa,KAHC,GAQ5D,IACIkB,EAA4B,EAAf1B,GAEb2B,EAjZZ,SAAuB1R,EAAOoJ,EAAOtK,GAUjC,IARA,IAAI0P,EAAW,IAAIxB,KACf2E,EAAYvI,EAAQtK,EACpBmQ,EAAY,IAAIjB,aAAyB,EAAZ2D,GAC7BC,EAAS,IAAI5D,aAAyB,EAAZ2D,GAE1BE,EAAI,EAGC1V,EAAI,EAAGA,EAAIiN,EAAOjN,IACvB,IAAK,IAAI2V,EAAI,EAAGA,EAAIhT,EAAOgT,IAAK,CAC5B,IAGIC,EAFID,EAAIhT,EAEA,GACRkT,EAJI7V,EAAIiN,EAIA,GAGZ6F,EAAU,EAAI4C,GAAKE,EACnB9C,EAAU,EAAI4C,EAAI,GAHV,EAIR5C,EAAU,EAAI4C,EAAI,GAAKG,EAEvB,IAAIC,EAAY,IAChBL,EAAO,EAAIC,GAAK7R,EAAMkS,EAAID,EAC1BL,EAAO,EAAIC,EAAI,GAAK7R,EAAMmS,EAAIF,EAC9BL,EAAO,EAAIC,EAAI,GAAK7R,EAAMoS,EAAIH,EAE9BJ,IAIRrD,EAASN,aACL,WACA,IAAIlB,KAAsBiC,EAAW,GAAGd,SAASnB,OAErDwB,EAASN,aACL,QACA,IAAIlB,KAAsB4E,EAAQ,GAAGzD,SAASnB,OAElDwB,EAASJ,qBAET,IAAIC,EAAW,IAAIrB,KAAqB,CACpC/E,KAAM,IACNoK,cAAc,EACdC,aAAa,IAIjB,OAAO,IAAItF,KAAWwB,EAAUH,GAgWhBkE,CAAcxF,GAHT,GAGgC0E,GACjDC,EAAMc,MAAMjX,IAAI,IAAK,GAAI,KACzBmW,EAAM3D,SAASxS,IAAI,GAAI,GAAI,KAE3BgS,GAAMkF,IAAIf,GAIV,IAGIgB,EAnUZ,SAA2BC,EAAKhF,GAS5B,IARA,IAAIG,EAAO,IAAId,KAEX4F,EAAM,IAAI5E,aAAa,EAAI2E,GAC3BE,EAAM,IAAI7E,aAAa,EAAI2E,GAE3B3S,EAAQ+M,GAAUM,QAGblR,EAAI,EAAGA,EAAIwW,EAAKxW,IAAK,CAO1B,IANA,IAAI4V,EAAI,GAAK7U,KAAKC,SAAW,IAAOwQ,EAChCmF,EAAI,GAAK5V,KAAKC,SAAW,IAAOwQ,EAChCqE,EAAI,GAAK9U,KAAKC,SAAW,IAAOwQ,EAChCuE,EAAIhV,KAAK6V,KAAK7V,KAAKgE,IAAI6Q,EAAG,GAAK7U,KAAKgE,IAAI4R,EAAG,GAAK5V,KAAKgE,IAAI8Q,EAAG,IAGzDE,EAAa,GAATvE,GACPoE,EAAI,GAAK7U,KAAKC,SAAW,IAAOwQ,EAChCmF,EAAI,GAAK5V,KAAKC,SAAW,IAAOwQ,EAChCqE,EAAI,GAAK9U,KAAKC,SAAW,IAAOwQ,EAChCuE,EAAIhV,KAAK6V,KAAK7V,KAAKgE,IAAI6Q,EAAG,GAAK7U,KAAKgE,IAAI4R,EAAG,GAAK5V,KAAKgE,IAAI8Q,EAAG,IAGhEY,EAAI,EAAIzW,GAAK4V,EACba,EAAI,EAAIzW,EAAI,GAAK2W,EACjBF,EAAI,EAAIzW,EAAI,GAAK6V,EAGjBhS,EAAQA,EAAMkN,OAAOlN,GACrB,IAAIgT,EAAoC,KAAvB9V,KAAKC,SAAW,KAC7B6C,EAAMoN,EAAI4F,EAAY,GAEfhT,EAAMoN,EAAI4F,EAAY,KAD7BA,GAAaA,GAMjBhT,GADAA,GADAA,EAAQA,EAAMiT,UAAUD,EAAmC,IAAvB9V,KAAKC,SAAW,IAAY,IAClD+P,OAAOlN,IACPmN,OAAOnN,EAAMoN,EAAGpN,EAAMkT,EAAG,GAAsB,GAAhBhW,KAAKC,UAElD0V,EAAI,EAAI1W,GAAK6D,EAAMkS,EACnBW,EAAI,EAAI1W,EAAI,GAAK6D,EAAMmS,EACvBU,EAAI,EAAI1W,EAAI,GAAK6D,EAAMoS,EAG3BtE,EAAKI,aACD,WACA,IAAIlB,KAAsB4F,EAAK,GAAGzE,SAASnB,OAE/Cc,EAAKI,aACD,QACA,IAAIlB,KAAsB6F,EAAK,GAAG1E,SAASnB,OAE/Cc,EAAKM,qBAEL,IAAI+E,EAAoB,IAAInG,KAAqB,CAC7C/E,KAAM,GACNoK,cAAc,IAIlB,OAAO,IAAIrF,KAAac,EAAMqF,GAuQVC,CAHD,KACO,KAGtB7F,GAAMkF,IAAIC,GAIV,IAAIW,EAAiB,GAEjBC,EAAY5F,GAAa2F,GACzBE,EAAQD,EAAU,GAClBE,EAASF,EAAU,GAEnBG,EAAY/F,GAAa2F,GACzBK,EAAQD,EAAU,GAClBE,EAASF,EAAU,GAEnBG,EAAYlG,GAAa2F,GACzBQ,EAAQD,EAAU,GAClBE,EAASF,EAAU,GAEnBG,EAAYrG,GAAa2F,GACzBW,EAAQD,EAAU,GAClBE,EAASF,EAAU,GAEnBG,EAAYxG,GAAa2F,GACzBc,EAAQD,EAAU,GAClBE,EAASF,EAAU,GAInBG,EAAY,IAAIrH,KAA0B,IAAM,IAAM,EAAG,GACzDsH,EAAW,IAAItH,KAAwB,CAEvChN,MAAO,EACPuU,KAAMvH,OAENvL,EAAQ,IAAIuL,KAAWqH,EAAWC,GACtC7S,EAAM+S,SAAStX,KAAKuX,GAAK,GACzBhT,EAAMsM,SAASxS,IAAI,GAAI,EAAG,GAE1BgS,GAAMkF,IAAIhR,GAIVyO,EAAMG,QAAQ5I,YAAYmJ,EAAS8D,YACnC1D,OAAOM,iBAAiB,UAlFL,WACflB,EAAWF,EAAMG,QAAQC,YACzBC,EAAYL,EAAMG,QAAQG,aAC1BI,EAASE,QAAQV,EAAUG,GAC3BE,EAAOkE,OAASvE,EAAWG,EAC3BE,EAAOmE,4BA+EX,SAASC,IAOL,GANAtF,GAASuF,SACTrE,EAAOE,OAAOD,GA5H1B,SAAwBgB,EAAOtI,EAAOtK,GAClC,IAAIiW,EAAe,IAAIC,WAAWjF,IAC9BkF,EAAgB,IAAID,WAAWjF,IAC/BmF,EAAW,IAAIF,WAA0B,EAAfjF,IAE9BP,GAAa2F,qBAAqBJ,GAClCrF,GAAcyF,qBAAqBF,GAEnCC,EAAS3Z,IAAI0Z,EAAcG,WAC3BF,EAAS3Z,IAAIwZ,EAAcE,EAAc7Y,QArS7C,SAAqBsV,EAAO1R,EAAOoJ,EAAOtK,EAAOuW,GAQ7C,IAPA,IAAI1D,EAAYvI,EAAQtK,EACpBmQ,EAAYyC,EAAMlD,SAASC,WAAWV,SAASnM,MAC/CgQ,EAASF,EAAMlD,SAASC,WAAWzO,MAAM4B,MAEzCiQ,EAAIF,EAGCxV,EAAIiN,EAAOjN,EAAI,EAAGA,IACvB,IAAK,IAAI2V,EAAIhT,EAAOgT,EAAI,EAAGA,IAAK,CAC5B,IAAIgB,EAAI7D,EAAU,GAAK4C,EAAI/S,GAAS,GACpCmQ,EAAU,EAAI4C,EAAI,GAAKiB,EAEvB,IAAIb,EAA0B,GAAba,EAAI,MACrBlB,EAAO,EAAIC,GAAK7R,EAAMkS,EAAID,EAC1BL,EAAO,EAAIC,EAAI,GAAK7R,EAAMmS,EAAIF,EAC9BL,EAAO,EAAIC,EAAI,GAAK7R,EAAMoS,EAAIH,EAE9BJ,IAKR,IAAK,IAAI9Q,EAAI,EAAGA,EAAIjC,EAAOiC,IAAK,CAC5B,IAAI4R,EAAM0C,EAAKtU,GAAK,IAEpBkO,EAAU,EAAIlO,EAAI,GAAK4R,EAAM,IAC7B,IAEIV,EAA0B,GAFtBhD,EAAU,EAAIlO,EAAI,GAEL,MACrB6Q,EAAO,EAAI7Q,GAAKf,EAAMkS,EAAID,EAC1BL,EAAO,EAAI7Q,EAAI,GAAKf,EAAMmS,EAAIF,EAC9BL,EAAO,EAAI7Q,EAAI,GAAKf,EAAMoS,EAAIH,GAuQlCqD,CAAY5D,EAAO3E,GAAW3D,EAAOtK,EAAOoW,GAmHpCK,CAAe7D,EAhEF,GAgEqBD,GAGX,GAAnBhE,IAAsB,uCACtB,sBAAA+H,EAAA,6DACIhC,EAAOjW,QACPgQ,GAAMkF,IAAIc,GAFd,SAGU7G,GAAM,KAHhB,cAIIiH,EAAOpW,QACPgQ,GAAMkF,IAAIiB,GALd,SAMUhH,GAAM,KANhB,cAOIoH,EAAOvW,QACPgQ,GAAMkF,IAAIoB,GARd,UASUnH,GAAM,KAThB,eAUIuH,EAAO1W,QACPgQ,GAAMkF,IAAIuB,GAXd,UAYUtH,GAAM,KAZhB,QAaI0H,EAAO7W,QACPgQ,GAAMkF,IAAI0B,GAdd,4CADsB,qDAiBtBsB,GACAhI,GAAkB,OACf,IAAwB,GAApBA,GAAuB,yCAC9B,sBAAA+H,EAAA,sEACU9I,GAAM,MADhB,OAEIa,GAAMmI,OAAOnC,GACbhG,GAAMmI,OAAOhC,GACbnG,GAAMmI,OAAO7B,GACbtG,GAAMmI,OAAO1B,GACbzG,GAAMmI,OAAOvB,GACb7F,GAAUiF,EAAOC,EAAQH,GACzB/E,GAAUoF,EAAOC,EAAQN,GACzB/E,GAAUuF,EAAOC,EAAQT,GACzB/E,GAAU0F,EAAOC,EAAQZ,GACzB/E,GAAU6F,EAAOC,EAAQf,GAX7B,4CAD8B,qDAc9BsC,GAEAnC,EAAOoC,OACPjC,EAAOiC,OACP9B,EAAO8B,OACP3B,EAAO2B,OACPxB,EAAOwB,OACPnI,GAAkB,OAElBuB,GAAWuE,EAAOC,EAAQH,GAC1BrE,GAAW0E,EAAOC,EAAQN,GAC1BrE,GAAW6E,EAAOC,EAAQT,GAC1BrE,GAAWgF,EAAOC,EAAQZ,GAC1BrE,GAAWmF,EAAOC,EAAQf,GAIN,GAApB/F,MA3WhB,SAAyBqF,EAAKhF,EAAQkI,GAOlC,IANA,IAAIjD,EAAMiD,EAAMrH,SAASC,WAAWV,SAASnM,MACzCiR,EAAMgD,EAAMrH,SAASC,WAAWzO,MAAM4B,MAEtC5B,EAAQ+M,GAAUM,QAGblR,EAAI,EAAGA,EAAIwW,EAAKxW,IAAK,CAO1B,IANA,IAAI4V,GAAK7U,KAAKC,SAAW,IAAOwQ,EAC5BmF,GAAK5V,KAAKC,SAAW,IAAOwQ,EAC5BqE,GAAK9U,KAAKC,SAAW,IAAOwQ,EAC5BuE,EAAIhV,KAAK6V,KAAK7V,KAAKgE,IAAI6Q,EAAG,GAAK7U,KAAKgE,IAAI4R,EAAG,GAAK5V,KAAKgE,IAAI8Q,EAAG,IAGzDrE,EAASuE,EAAI,KAChBH,GAAK7U,KAAKC,SAAW,IAAOwQ,EAC5BmF,GAAK5V,KAAKC,SAAW,IAAOwQ,EAC5BqE,GAAK9U,KAAKC,SAAW,IAAOwQ,EAC5BuE,EAAIhV,KAAK6V,KAAK7V,KAAKgE,IAAI6Q,EAAG,GAAK7U,KAAKgE,IAAI4R,EAAG,GAAK5V,KAAKgE,IAAI8Q,EAAG,IAGhEY,EAAI,EAAIzW,GAAK4V,EACba,EAAI,EAAIzW,EAAI,GAAK2W,EACjBF,EAAI,EAAIzW,EAAI,GAAK6V,EAGjBhS,EAAQA,EAAMkN,OAAOlN,GACrB,IAAIgT,EAAoC,KAAvB9V,KAAKC,SAAW,KAC7B6C,EAAMoN,EAAI4F,EAAY,GAEfhT,EAAMoN,EAAI4F,EAAY,KAD7BA,GAAaA,GAMjBhT,GADAA,GADAA,EAAQA,EAAMiT,UAAUD,EAAmC,IAAvB9V,KAAKC,SAAW,IAAY,IAClD+P,OAAOlN,IACPmN,OAAOnN,EAAMoN,EAAGpN,EAAMkT,EAAG,GAAsB,GAAhBhW,KAAKC,UAElD0V,EAAI,EAAI1W,GAAK6D,EAAMkS,EACnBW,EAAI,EAAI1W,EAAI,GAAK6D,EAAMmS,EACvBU,EAAI,EAAI1W,EAAI,GAAK6D,EAAMoS,GAqUf0D,CA3GO,KACO,IA0G6BpD,GAC3CpF,GAAmB,GAKnBoF,EAAUqD,SAAShE,EADnBZ,EAAS,EAELuB,EAAUqD,SAAShE,EAAa,KAATZ,EAAkB,KAGzCuB,EAAUqD,SAAShE,EAAa,KAATZ,EAAkB,KAE7CD,EAAS,GACTwB,EAAUqD,SAASjD,EACfJ,EAAUqD,SAASjD,EAAa,KAAT5B,EAAkB,KAC7CwB,EAAUqD,SAAS/D,EACfU,EAAUqD,SAAS/D,EAAa,KAATd,EAAkB,OAE7CwB,EAAUqD,SAASjD,EACfJ,EAAUqD,SAASjD,EAAa,KAAT5B,EAAkB,KAC7CwB,EAAUqD,SAAS/D,EACfU,EAAUqD,SAAS/D,EAAa,KAATd,EAAkB,MAGjDQ,EAAMlD,SAASC,WAAWV,SAASiI,aAAc,EACjDtE,EAAMlD,SAASC,WAAWzO,MAAMgW,aAAc,EAE9CtD,EAAUlE,SAASC,WAAWV,SAASiI,aAAc,EACrDtD,EAAUlE,SAASC,WAAWzO,MAAMgW,aAAc,EAElDzC,EAAM/E,SAASC,WAAWV,SAASiI,aAAc,EACjDzC,EAAM/E,SAASC,WAAWR,SAAS+H,aAAc,EACjDzC,EAAMlF,SAASrO,MAAMgW,aAAc,EAEnCtC,EAAMlF,SAASC,WAAWV,SAASiI,aAAc,EACjDtC,EAAMlF,SAASC,WAAWR,SAAS+H,aAAc,EACjDtC,EAAMrF,SAASrO,MAAMgW,aAAc,EAEnCnC,EAAMrF,SAASC,WAAWV,SAASiI,aAAc,EACjDnC,EAAMrF,SAASC,WAAWR,SAAS+H,aAAc,EACjDnC,EAAMxF,SAASrO,MAAMgW,aAAc,EAEnChC,EAAMxF,SAASC,WAAWV,SAASiI,aAAc,EACjDhC,EAAMxF,SAASC,WAAWR,SAAS+H,aAAc,EACjDhC,EAAM3F,SAASrO,MAAMgW,aAAc,EAEnC7B,EAAM3F,SAASC,WAAWV,SAASiI,aAAc,EACjD7B,EAAM3F,SAASC,WAAWR,SAAS+H,aAAc,EACjD7B,EAAM9F,SAASrO,MAAMgW,aAAc,EAEnCC,sBAAsBpB,GACtBjE,EAASsF,OAAO3I,GAAOkD,GAE3BoE,KACD,IAGH3V,qBAAU,WAEN6N,IADAA,GAAYA,GAAUG,OAAOH,KACPI,QAAQlO,EAAMe,MAAQ,IAAO,IAAK,GAAK,IAC7DsN,GAAmB,IACpB,CAACrO,EAAMe,QAGVd,qBAAU,WACiB,GAAnBD,EAAM6I,UACN2F,IAAmB,EACO,GAAnBxO,EAAM6I,YACb2F,GAAkB,KAEvB,CAACxO,EAAM6I,YAEH,cAAC2E,GAAD,CAAkBzH,UAAW/F,EAAM+F,UAAW2D,IAAKuH,KCrmB/CiG,GAhBA,CACXC,KAAM,CACFtQ,WAAY,oBACZpB,WAAY,2BACZI,YAAa,2BACbH,OAAQ,sCAGZ0R,OAAQ,CACJvQ,WAAY,oBACZpB,WAAY,2BACZI,YAAa,2BACbH,OAAQ,uC,gBCZVkE,GAAM,WACR,MAAO,CACHyN,cAAeC,OACfC,gBAAiBD,OACjBE,cAAeF,OACfG,uBAAwBC,QACxBC,SAAU,CACN,CACIC,eAAgBC,OAChBC,UAAW,CACPC,OAAQC,OACRC,KAAMD,QAEVpX,MAAO,CACHE,MAAO+W,OACP9W,MAAO8W,OACP5W,MAAO4L,OAEXqL,cAAe,CACXC,KAAMN,OACNO,SAAUd,OACVe,eAAgBf,OAChBrW,MAAO4L,OAGXyL,QAAS,CACL,CACIva,KAAM8Z,OACN3V,UAAWoV,OACXlW,SAAUkW,OACVvV,MAAOuV,aAQxB,SAASiB,KACZ,IAAIA,EAAQ3O,KAEZ,OADA2O,EAAMZ,SAAW,GACVY,EAGJ,SAASC,KACZ,IAAIA,EAAU5O,KAAM+N,SAAS,GAE7B,OADAa,EAAQF,QAAU,GACXE,EAIJ,SAASC,KACZ,OAAO7O,KAAM+N,SAAS,GAAGW,QAAQ,GAG9B,SAAS1X,KACZ,IAAIA,EAAQgJ,KAAM+N,SAAS,GAAG/W,MAE9B,OADAA,EAAMK,MAAQ,GACPL,ECrDJ,IAAM8X,GAAb,WACI,WAAYH,EAAO5X,GAAS,qBACxBgY,KAAKhY,OAASA,EACdgY,KAAKJ,MAAQA,EAHrB,6CAQI,WACII,KAAKJ,MAAMlB,cAAgBsB,KAAKC,oBAChCD,KAAKJ,MAAMhB,gBAAkBoB,KAAKE,sBAIlC,IAFA,IAAIC,EAAaH,KAAKJ,MAAMlB,cAAgBsB,KAAKJ,MAAMhB,gBAE9Cra,EAAI,EAAGA,EAAI4b,EAAY5b,IAE5Byb,KAAKJ,MAAMZ,SAASzW,KAAK6X,MAG7B,OAAOJ,KAAKJ,QAnBpB,+BAuBI,WAEI,IADA,IAAI9V,EAAM,EACDvF,EAAI,EAAGA,EAAIyb,KAAKhY,OAAOxD,OAAQD,IACpCuF,GAAYkW,KAAKhY,OAAOzD,GAAGkE,SAE/B,OAAOqB,IA5Bf,iCAgCI,WACI,IAAIuW,EAAU,SAAVA,EAAoBzC,EAAGpD,GACvB,OAAKA,EACE6F,EAAQ7F,EAAGoD,EAAIpD,GADPoD,GAIf0C,EAAMN,KAAKhY,OAAO,GAAGS,SAEzB,GAAIuX,KAAKhY,OAAOxD,OAAS,EACrB,IAAK,IAAID,EAAI,EAAGA,EAAIyb,KAAKhY,OAAOxD,OAAQD,IACpC+b,EAAMD,EAAQC,EAAKN,KAAKhY,OAAOzD,GAAGkE,UAK1C,IADA,IAAI8X,EAAU,GACLhc,EAAI,EAAGA,GAAK+b,EAAK/b,IAClB+b,EAAM/b,IAAM,GACZgc,EAAQhY,KAAKhE,GAIrB,IAAIic,EAAOlb,KAAKC,SAAWgb,EAAQ/b,OAGnC,OAAO+b,EAFPC,EAAOlb,KAAKuE,MAAM2W,QAtD1B,KCEaC,GAAb,WACI,WAAYb,GAAQ,qBAChBI,KAAKJ,MAAQA,EAFrB,6CAMI,WAII,IAHA,IACIc,EAAQ,GAEHnc,EAAI,EAAGA,EAAIyb,KAAKJ,MAAMZ,SAASxa,OAAQD,IAAK,CAE7CA,EAAI,IAAM,IACVmc,EAAQ,IAUZ,IAPA,IAGIC,EAHa,CAAC,IAAK,IAAK,KAGMnM,QAAO,SAAC2F,GAAD,OAAQuG,EAAME,SAASzG,MAE5D0G,EAAS,MAELF,EAAiBC,SAASC,IAG1BA,EADM,IAANtc,EACSuc,IAAgB,CACrB,CAAC,IAAK,IACN,CAAC,IAAK,IACN,CAAC,IAAK,MAGDA,IAAgB,CACrB,CAAC,IAAM,EAAI,EAAK,KAChB,CAAC,IAAM,EAAI,EAAK,KAChB,CAAC,IAAM,EAAI,EAAK,OA5BlB,IAiCNJ,EAAMlc,QACNkc,EAAMK,QAGVL,EAAMnY,KAAKsY,GACXb,KAAKJ,MAAMZ,SAASza,GAAG0a,eAAiB4B,EAG5C,OAAOb,KAAKJ,UAhDpB,KCLaoB,GAAe,CACxB,MAAS,CAAC,SAAU,SAAU,cAC9B,MAAS,CAAC,SAAU,WAAY,WAChC,KAAQ,CAAC,SAAU,UACnB,OAAU,CAAC,SAAU,WAAY,WACjC,EAAK,CAAC,cACN,KAAQ,CAAC,YAGAC,GAAqB,CAC9B,MAAS,CAAC,UACV,MAAS,CAAC,WACV,KAAQ,CAAC,UACT,OAAU,CAAC,WACX,EAAK,CAAC,cACN,KAAQ,CAAC,YAIAC,GAAc,CACvBC,OAAY,EACZC,OAAY,EACZC,SAAY,EACZC,OAAY,EACZC,WAAY,EACZC,QAAY,EACZC,QAAY,GAGHC,GAAe,CACxBP,OAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,OAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,OAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,QAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,QAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGtBE,GAAqB,CAC9BrX,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,GAAI,GAgBK2W,GAAyB,SAASC,EAAcC,GAqBzD,MApBU,CACNvX,EAAE,CACED,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,IAEPJ,EAAE,CACEF,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GACHC,EAAG,KAGAkX,GAAQD,ICrFvBlD,OAAOoD,UAAUC,IAAM,SAAUC,GAC7B,OAASjC,KAAOiC,EAAKA,GAAKA,GAUvB,IAAMC,GAAb,WACI,WAAYtC,EAAO5X,GAAS,qBACxBgY,KAAKJ,MAAQA,EACbI,KAAKhY,OAASA,EAHtB,6CAMI,WAEI,IADA,IAAIma,EAAmBnC,KAAKoC,qBAAqBpC,KAAKJ,MAAMd,wBACnDva,EAAI,EAAGA,EAAIyb,KAAKJ,MAAMZ,SAASxa,OAAQD,IAC5Cyb,KAAKJ,MAAMZ,SAASza,GAAG0D,MAAQka,EAAiB5d,GAAG0D,MACnD+X,KAAKJ,MAAMZ,SAASza,GAAGgb,cACnB4C,EAAiB5d,GAAGgb,cAE5B,OAAOS,KAAKJ,QAbpB,+BAgBI,SAAkB3X,EAAOoa,EAAeC,GACpC,IAAI/C,EJ4BL,WACH,IAAI3E,EAAQ3J,KAAM+N,SAAS,GAAGO,cAE9B,OADA3E,EAAMtS,MAAQ,GACPsS,EI/BiBwF,GAIhBmC,EAFOzB,IAAcA,IAAiB7Y,IAAQ,GAEnB,GAC3B4Z,EAAeW,GAAyBD,GAM5C,GALAhD,EAAcG,eDiBkB,SAASmC,EAAcY,GAU3D,MATU,CACNnY,EAAG,CAACA,EAAG,EAAGC,EAAG,GACbA,EAAG,CAACC,EAAG,EAAGC,EAAG,GACbD,EAAG,CAACE,EAAG,GACPD,EAAG,CAACE,EAAE,EAAGC,EAAE,GACXF,EAAG,CAACG,EAAG,EAAGC,EAAG,GACbH,EAAG,CAACI,EAAG,EAAGC,GAAI,GACdJ,EAAG,CAACK,GAAI,IAED4W,GAAcY,GC3BUD,CAC3BX,EACAU,GAGiB,MAAjBF,EAAuB,CAEnBC,EAAiB1B,SAAS,UAC1BrB,EAAcC,KAAO,SAErBD,EAAcC,KAAOsB,IAAewB,GAIxC,IAAII,EAAaF,GAAkBjD,EAAcC,MACjDD,EAAcE,UAAYoC,EAAea,GAAYV,IAAI,OACtD,CAWH,IARA,IAAIW,EAAmBH,GACnBH,EAAc5C,SACd4C,EAAc3C,gBAGdkD,EAAS,GACTC,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAE7Cte,EAAI,EAAGA,EAAI+d,EAAiB9d,OAAQD,IAAK,CAE9C,IAAIme,EAAaF,GAAkBF,EAAiB/d,IACpDqe,EAAOra,KAAK,CACRiX,KAAM8C,EAAiB/d,GACvBkb,UAAWoC,EAAea,GAAYV,IAAI,GAC1CjT,MAAO,OAOf,IAHA,IAAI+T,EAAwB,KAGnBve,EAAI,EAAGA,EAAIse,EAAYre,OAAQD,IAAK,CACrCse,EAAYte,KAAOoe,IACnBG,EAAwBve,GAG5B,IAAK,IAAI2V,EAAI,EAAGA,EAAI0I,EAAOpe,OAAQ0V,IAAK,CACpC,IAAI6I,EAAmBP,GACnBI,EAAO1I,GAAGuF,SACVF,EAAcG,gBAEdmD,EAAYte,KAAOwe,IACnBH,EAAO1I,GAAGnL,MAAQxK,IAQ9B,IAFA,IAAIye,EAAc,KACdC,EAAW,KACN1e,EAAI,EAAGA,EAAIqe,EAAOpe,OAAQD,IAAK,CACpC,IAAI2e,EAAW5d,KAAK6d,KACfL,EAAwBF,EAAOre,GAAGwK,OAAOiT,IAAI,KAC7CY,EAAOre,GAAGwK,MAAQ+T,GAAuBd,IAAI,MAE/B,MAAfgB,GAAuBE,EAAWF,KAClCA,EAAcE,EACdD,EAAWL,EAAOre,IAI1Bgb,EAAcC,KAAOyD,EAASzD,KAC9BD,EAAcE,SAAWwD,EAASxD,SAStC,OANAF,EAAcjX,MAAQ0X,KAAKoD,kBACvBb,EACAC,GAAmBjD,EAAcC,MACjC,GAGGD,IAvGf,kCA2GI,WAEI,IAFkD,IAAjCT,EAAgC,wDAC7CuE,EAAgB,GACX9e,EAAI,EAAGA,EAAIyb,KAAKhY,OAAOxD,OAAQD,IAAK,CACzC,IAAI+e,EACAtD,KAAKhY,OAAOzD,GAAGkE,SAAWuX,KAAKJ,MAAMhB,gBACrCyD,EAAgB,KAChBgB,EAAc7e,OAAS,IACvB6d,EACIgB,EAAcA,EAAc7e,OAAS,GAAG+a,eAGhD,IAAIgE,EAAmB,KAKnBA,EAFDzE,EAEoBkB,KAAKwD,kBACpBxD,KAAKhY,OAAOzD,GACZ,KACAie,GAAyBxC,KAAKhY,OAAOzD,GAAG6D,QAIzB4X,KAAKwD,kBACpBxD,KAAKhY,OAAOzD,GACZ8d,EACAG,GAAmBxC,KAAKhY,OAAOzD,GAAG6D,QAM1C,IAAK,IAAI8R,EAAI,EAAGA,EAAIoJ,EAAWpJ,IAAK,CAChC,IAAIuJ,EAAWrD,KACfqD,EAAStb,MAAQ6X,KAAKhY,OAAOzD,GAAG4D,MAChCsb,EAASrb,MAAQ4X,KAAKhY,OAAOzD,GAAG6D,MAChCqb,EAASnb,MAAQwY,IACbA,IAAiBd,KAAKhY,OAAOzD,KAEjC8e,EAAc9a,KAAK,CACfN,MAAOwb,EACPlE,cAAegE,KAK3B,OAAOF,IAzJf,+BA4JI,SAAkBta,EAAM2a,GAEpB,IAF2C,IAAdC,EAAa,uDAAH,EACnC/I,EAAQ,CAAC7R,GACJmR,EAAI,EAAGA,EAAIyJ,EAASzJ,IACzB,IAAK,IAAI3V,EAAI,EAAGA,EAAImf,EAAQlf,OAAQD,IAChCwE,GAAQ2a,EAAQnf,GAChBqW,EAAMrS,KAAKQ,GAGnB,OAAO6R,MApKf,KCfqBgJ,G,WACjB,WAAYhE,EAAOiE,EAAcC,GAS7B,OAToC,qBACpC9D,KAAK8D,MAAQA,EACb9D,KAAKJ,MAAQA,EACbI,KAAKH,QAAUD,EAAMZ,SAAS6E,GAC9B7D,KAAK+D,gBAAmBF,EAAe,EAAKjE,EAAMZ,SAAS6E,EAAa,GAAK,KAC7E7D,KAAK6D,aAAeA,EAEpB7D,KAAKgE,iBACLhE,KAAKiE,gBACEjE,KAAKH,Q,mDAIhB,WAEI,IAAI,IAAItb,KAAKyb,KAAK8D,MAAMnE,QACpBK,KAAKH,QAAQF,QAAQpX,KACjByX,KAAK8D,MAAMnE,QAAQpb,M,2BAM/B,gB,KCxBiB2f,G,WACjB,WAAYtE,EAAOiE,EAAcC,GAS7B,OAToC,qBACpC9D,KAAKJ,MAAQA,EACbI,KAAK8D,MAAQA,EACb9D,KAAKH,QAAUD,EAAMZ,SAAS6E,GAC9B7D,KAAK+D,gBAAmBF,EAAe,EAAKjE,EAAMZ,SAAS6E,EAAa,GAAK,KAC7E7D,KAAK6D,aAAeA,EAEpB7D,KAAKgE,iBACLhE,KAAKiE,gBACEjE,KAAKH,Q,mDAIhB,WACI,IAAI,IAAItb,EAAE,EAAGA,EAAEyb,KAAK8D,MAAMnE,QAAQnb,OAAQD,IACtCyb,KAAKH,QAAQF,QAAQpX,KACjByX,KAAK8D,MAAMnE,QAASK,KAAK8D,MAAMnE,QAAQnb,OAAO,EAAKD,M,2BAM/D,gB,KCjBG,SAAS4f,GAAeC,GAG3B,IAFA,IAAIC,EAAS,GAEJ9f,EAAI,EAAGA,EAAI6f,EAAc5f,OAAQD,IAClC6f,EAAc7f,IAAM,IAAM6f,EAAc7f,GAAK,IAC7C8f,EAAO9b,KAAK6b,EAAc7f,IAIlC,OAAO8f,EAIJ,SAASC,GAAeF,EAAeE,GAG1C,IAFA,IAAID,EAAS,GAEJ9f,EAAI,EAAGA,EAAI6f,EAAc5f,OAAQD,IACtC,IAAK,IAAI0d,EAAI,EAAGA,EAAIqC,EAAe9f,OAAQyd,IAAK,CAK5C,GAJYqC,EAAerC,GAAK,KACpBmC,EAAc7f,GAAK,GAGV,CACjB8f,EAAO9b,KAAK6b,EAAc7f,IAC1B,OAKZ,OAAO8f,EAIJ,SAASE,GAAgBH,EAAeI,EAAW5T,GAEtD,IADA,IAAI9G,EAAM,EACDvF,EAAI,EAAGA,EAAIigB,EAAUhgB,OAAQD,IAClCuF,GAAO0a,EAAUjgB,GAErB,IAAIkgB,EAAM3a,EAAM0a,EAAUhgB,OAEtB6f,EAAS,GAETjZ,EAAc0V,IACdsD,EACAI,EAAUA,EAAUhgB,OAAS,IAGjC,GAAkB,MAAdoM,EAEA,IAAK,IAAIrM,EAAI,EAAGA,EAAI6f,EAAc5f,OAAQD,IAClC6f,EAAc7f,KAAO6G,IACjB7G,EAAI,GAAK,IACT8f,EAAO9b,KAAK6b,EAAc7f,EAAI,IAC9B8f,EAAO9b,KAAK6b,EAAc7f,EAAI,KAGlC8f,EAAO9b,KAAK6b,EAAc7f,IAEtBA,EAAI,EAAI6f,EAAc5f,SACtB6f,EAAO9b,KAAK6b,EAAc7f,EAAI,IAC9B8f,EAAO9b,KAAK6b,EAAc7f,EAAI,WAK1C,IAAK,IAAIA,EAAI,EAAGA,EAAI6f,EAAc5f,OAAQD,IACpB,MAAdqM,GACIwT,EAAc7f,IAAMkgB,GAAKJ,EAAO9b,KAAK6b,EAAc7f,IACzC,MAAdqM,GACIwT,EAAc7f,IAAMkgB,GAAKJ,EAAO9b,KAAK6b,EAAc7f,IAInE,OAAO8f,EAIJ,SAASK,GAAWN,EAAerb,EAAM6H,GAI5C,IAHA,IAAIyT,EAAS,GAGJ9f,EAAI,EAAGA,EAAI6f,EAAc5f,OAAQD,IAAK,CAC3C,GAAkB,MAAdqM,GAAqBwT,EAAc7f,KAAOwE,EAAM,CAChD,IAAK,IAAImR,EAAI,EAAGA,EAAIyK,EAAWzK,IACvB3V,EAAI2V,EAAIkK,EAAc5f,QACtB6f,EAAO9b,KAAK6b,EAAc7f,EAAI2V,IAGtC,MAGJ,GAAkB,MAAdtJ,GAAqBwT,EAAc7f,KAAOwE,EAAM,CAChD,IAAK,IAAIM,EAAI9E,EAbT,EAaoB8E,GAAK9E,EAAG8E,IACxBA,GAAK,GACLgb,EAAO9b,KAAK6b,EAAc/a,IAGlC,OAIR,OAAsB,IAAlBgb,EAAO7f,OACA,CAACsc,IAAkBsD,EAAerb,IAElCsb,EAKR,SAASO,GAAYR,EAAejB,EAAK0B,GAE5C,IAF+D,IAAd/C,EAAa,uDAAJ,GACtDuC,EAAS,GACJ9f,EAAI,EAAGA,EAAI6f,EAAc5f,OAAQD,IAElC6f,EAAc7f,IAAM4e,EAAMrB,GAC1BsC,EAAc7f,IAAMsgB,EAAM/C,GAE1BuC,EAAO9b,KAAK6b,EAAc7f,IAGlC,OAAO8f,EAIJ,SAASS,GAASV,EAAeW,GAGpC,IAFA,IAAIV,EAAS,GAEJ9f,EAAI,EAAGA,EAAI6f,EAAc5f,OAAQD,IAClCwgB,EAAYnE,SAASwD,EAAc7f,IACnC8f,EAAO9b,KAAK6b,EAAc7f,IAE1B8f,EAAO9b,KAAKyc,KAIpB,OAAOX,ECpIJ,IAAMY,GAAb,WACI,WAAYpF,GAAU,qBAClBG,KAAKH,QAAUA,EAFvB,6CAII,WAA+B,IAAtBqF,EAAqB,uDAAN,KAChBC,EAAQ,GACRC,EAAkB,GAClBC,EAAW,KACXC,EAAW,KACXC,EAAsB,KAE1B,IAAK,IAAIhhB,KAAKyb,KAAKH,QAAQF,QACvB,GAAqC,UAAjCK,KAAKH,QAAQF,QAAQpb,GAAGa,KAA5B,CAMA,IADA,IAAIogB,EAAgB,GACXtL,EAAI,EAAGA,EAAI8F,KAAKH,QAAQN,cAAcjX,MAAM9D,OAAQ0V,IACzDsL,EAAcjd,KAAKyX,KAAKH,QAAQN,cAAcjX,MAAM4R,IAIxD,GAAI3V,EAAI,IAAM,EAAG,CACkB,IAA3B6gB,EAAgB5gB,SAChB2gB,EAAMM,iBAAmBD,EACzBL,EAAM9c,WAAa2X,KAAKH,QAAQ5X,MAAMK,OAK1C,IADA,IAAIod,EAAqB,GAChBzD,EAAI,EAAGA,EAAIjC,KAAKH,QAAQ5X,MAAMK,MAAM9D,OAAQyd,IAAK,CACtD,IAAIlZ,EAAOiX,KAAKH,QAAQ5X,MAAMK,MAAM2Z,GACpCyD,EAAmBnd,KAAKia,GAAyBzZ,IAGrDyc,EAAgBG,GACZH,EACAE,GAG2B,IAA3BN,EAAgB5gB,SAChB2gB,EAAMS,oBAAsBF,GAKhCN,EAAgB5gB,OAAS,IACzBghB,EAAgBG,GACZH,EACAJ,EACApF,KAAKH,QAAQZ,gBAGjBkG,EAAMU,eAAiBF,GACnB3F,KAAKH,QAAQN,cAAcjX,MAC3Bkd,IAKJJ,EAAgB5gB,OAAS,IAMrB+gB,EAH2B,IAA3BH,EAAgB5gB,QACgB,MAAhCwb,KAAKH,QAAQZ,eAESe,KAAKH,QAAQZ,eAEb6B,IAAe,CAAC,IAAK,MAG/CqE,EAAMI,oBAAsBA,EAE5BC,EAAgBG,GACZH,EACAJ,EAAgBA,EAAgB5gB,OAAS,GACzC+gB,GAGJJ,EAAMT,WAAaiB,GACf3F,KAAKH,QAAQN,cAAcjX,MAC3Bkd,IAKJJ,EAAgB5gB,OAAS,IACzBghB,EAAgBG,GACZH,EACAH,EACAC,GAGJH,EAAMP,YAAce,GAChB3F,KAAKH,QAAQN,cAAcjX,MAC3Bkd,IAIR,IAAIM,EAAO,KAEX,GAA+B,IAA3BV,EAAgB5gB,OAAc,CAG9B,GAFA2gB,EAAMY,mBAAqBP,EAEP,MAAhBN,EACAM,EAAgBG,GAAuBH,OACpC,CACH,IAAIQ,EAAwBd,EAAe,GACvCe,EACgC,EAAhC3gB,KAAKuE,MAAMqb,EAAe,IAC1BgB,EACAF,EAAwBC,EAAyB,GAErDT,EAAgB,CACZ1E,IAAkB0E,EAAeU,IAKzCb,EADAS,EAAOhF,IAAe0E,GAEtBF,EAAWQ,EACXX,EAAMgB,UAAYL,OACf,GAA6B,IAAzBN,EAAchhB,QACrBshB,EAAON,EAAc,IACVH,IAAUA,EAAWS,GAC5BA,EAAOR,IAAUA,EAAWQ,OAC7B,CAOH,IANA,IAAIM,EAAWhB,EAAgBA,EAAgB5gB,OAAS,GACpD6hB,EAAmB,KACnBC,EAAkBX,GAClB3F,KAAKH,QAAQN,cAAcjX,MAC3Bkd,GAEKvD,EAAI,EAAGA,EAAIqE,EAAgB9hB,OAAQyd,IACxC,GAAIqE,EAAgBrE,KAAOmE,EAAU,CACjCC,EAAmBpE,EACnB,MAKR,IAAIsE,EAAU,GACd,GAA4B,MAAxBhB,EACA,IAAK,IAAIjL,EAAI,EAAGA,EAAI,EAAGA,IACnBiM,EAAQhe,KAAK+d,EAAgBD,EAAmB/L,SAEjD,GAA4B,MAAxBiL,EACP,IAAK,IAAIrL,EAAI,EAAGA,EAAI,EAAGA,IACnBqM,EAAQhe,KAAK+d,EAAgBD,EAAmBnM,IAiBxD,IAZA,IAAIsM,EAAa,CACb,CAACD,EAAQ,GAAI,IACb,CAACA,EAAQ,GAAI,IACb,CAACA,EAAQ,GAAI,IACb,CAACA,EAAQ,GAAI,IACb,CAACA,EAAQ,GAAI,IAGbE,EAAQ,GACRC,EAAW,EAGNzE,EAAI,EAAGA,EAAIuE,EAAWhiB,OAAQyd,IAC9BtD,OAAOgI,MAAMH,EAAWvE,GAAG,KACJ,MAApBuE,EAAWvE,GAAG,KACdwE,EAAMle,KAAKie,EAAWvE,IACtByE,GAAYF,EAAWvE,GAAG,IAMtC,IAAK,IAAI2E,EAAI,EAAGA,EAAIH,EAAMjiB,OAAQoiB,IAC9BH,EAAMG,GAAG,GAAMH,EAAMG,GAAG,GAAKF,EAAY,IAG7CvB,EAAMsB,MAAQA,GAEdX,EAAOhF,IAAgB2F,IAEZpB,IAAUA,EAAWS,GAC5BA,EAAOR,IAAUA,EAAWQ,GAGpCV,EAAgB7c,KAAKud,GACrBX,EAAMC,gBAAkBA,EAExBpF,KAAKH,QAAQF,QAAQpb,GAAG6E,MAAQ0c,cAlLrB9F,KAAKH,QAAQF,QAAQpb,GAAG6E,MAsLvC,IAAK,IAAIyd,EAAI,EAAGA,EAAI7G,KAAKH,QAAQF,QAAQnb,OAAQqiB,IACR,UAAjC7G,KAAKH,QAAQF,QAAQkH,GAAGzhB,OAExBuZ,OAAOgI,MAAM3G,KAAKH,QAAQF,QAAQkH,GAAGzd,SACrC0d,QAAQC,KAAK,oBACN/G,KAAKH,QAAQF,QAAQkH,GAAGzd,MAC/B4W,KAAKH,QAAQF,QAAQkH,GAAGzhB,KAAO,SAGE,MAAjC4a,KAAKH,QAAQF,QAAQkH,GAAGzd,QACxB0d,QAAQE,IAAIhH,KAAKH,QAAQF,QAAQkH,IACjCC,QAAQC,KAAK,qBACN/G,KAAKH,QAAQF,QAAQkH,GAAGzd,MAC/B4W,KAAKH,QAAQF,QAAQkH,GAAGzhB,KAAO,UAIvC,OAAO4a,KAAKH,YApNpB,KCLqBoH,G,WACjB,WAAYrH,EAAOiE,EAAcC,GAU7B,OAVqC,qBACrC9D,KAAKJ,MAAQA,EACbI,KAAK8D,MAAQA,EACb9D,KAAKH,QAAUD,EAAMZ,SAAS6E,GAC9B7D,KAAK+D,gBACDF,EAAe,EAAIjE,EAAMZ,SAAS6E,EAAe,GAAK,KAC1D7D,KAAK6D,aAAeA,EAEpB7D,KAAKgE,iBACLhE,KAAKiE,gBACEjE,KAAKH,Q,mDAIhB,WACI,IAAK,IAAItb,EAAI,EAAGA,EAAIyb,KAAK8D,MAAMnE,QAAQnb,OAAQD,IAAK,CAChD,IAAI2iB,EAAM9G,KACV8G,EAAI9hB,KAAO4a,KAAK8D,MAAMnE,QAAQpb,GAAGa,KACjC8hB,EAAIze,SAAWuX,KAAK8D,MAAMnE,QAAQpb,GAAGkE,SACrCuX,KAAKH,QAAQF,QAAQpX,KAAK2e,M,2BAKlC,WACI,GAA4B,MAAxBlH,KAAK+D,gBACL/D,KAAKH,QAAU,IAAIoF,GAAMjF,KAAKH,SAASsH,eACpC,CAEH,IADA,IAAIC,EAAY,KACP7iB,EAAI,EAAGA,EAAIyb,KAAK+D,gBAAgBpE,QAASpb,IACD,UAAzCyb,KAAK+D,gBAAgBpE,QAAQpb,GAAGa,OACpCgiB,EAAYpH,KAAK+D,gBAAgBpE,QAAQpb,GAAG6E,OAEhD4W,KAAKH,QAAU,IAAIoF,GAAMjF,KAAKH,SAASsH,SAASC,Q,KCnCvCC,G,WACjB,WAAYzH,EAAOiE,EAAcC,GAU7B,OAVqC,qBACrC9D,KAAKJ,MAAQA,EACbI,KAAK8D,MAAQA,EACb9D,KAAKH,QAAUD,EAAMZ,SAAS6E,GAC9B7D,KAAK+D,gBACDF,EAAe,EAAIjE,EAAMZ,SAAS6E,EAAe,GAAK,KAC1D7D,KAAK6D,aAAeA,EAEpB7D,KAAKgE,iBACLhE,KAAKiE,gBACEjE,KAAKH,Q,mDAIhB,WAGI,IAFA,IAAIyH,EAAY,GAEP/iB,EAAI,EAAGA,EAAIyb,KAAK8D,MAAMnE,QAAQnb,OAAQD,IAC3C+iB,EAAU/e,KAAKyX,KAAK8D,MAAMnE,QAAQpb,GAAGkE,UAIzC,IAAK,IAAIlE,EAAI+iB,EAAU9iB,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC3C,IAAI2V,EAAI5U,KAAKuE,MAAMvE,KAAKC,UAAYhB,EAAI,IACpCgjB,EAAOD,EAAU/iB,GACrB+iB,EAAU/iB,GAAK+iB,EAAUpN,GACzBoN,EAAUpN,GAAKqN,EAGnB,IAAK,IAAIhjB,EAAI,EAAGA,EAAIyb,KAAK8D,MAAMnE,QAAQnb,OAAQD,IAAK,CAChD,IAAI2iB,EAAM9G,KACV8G,EAAI9hB,KAAO4a,KAAK8D,MAAMnE,QAAQpb,GAAGa,KACjC8hB,EAAIze,SAAW6e,EAAU/iB,GACzByb,KAAKH,QAAQF,QAAQpX,KAAK2e,M,2BAKlC,WACI,IAAK,IAAI3iB,EAAI,EAAGA,EAAIyb,KAAK8D,MAAMnE,QAAQnb,OAAQD,IACN,UAAjCyb,KAAKH,QAAQF,QAAQpb,GAAGa,YACjB4a,KAAKH,QAAQF,QAAQpb,GAAG6E,MAE/B4W,KAAKH,QAAQF,QAAQpb,GAAG6E,MAAQ4W,KAAK8D,MAAMnE,QAAQpb,GAAG6E,U,KCxCjDoe,G,WACjB,WAAY5H,EAAOiE,GAQf,OAR8B,qBAC9B7D,KAAKJ,MAAQA,EACbI,KAAKH,QAAUD,EAAMZ,SAAS6E,GAC9B7D,KAAK+D,gBACDF,EAAe,EAAIjE,EAAMZ,SAAS6E,EAAe,GAAK,KAC1D7D,KAAK6D,aAAeA,EACpB7D,KAAKgE,iBACLhE,KAAKiE,gBACEjE,KAAKH,Q,mDAIhB,WACI,IAAM4H,EAAqC,EAA7BzH,KAAKJ,MAAMhB,gBACnB8I,EAAc,KAGhBjB,EAAQ,GACRzG,KAAKJ,MAAMhB,iBAAmB,IAAG6H,EAAQ,CAAC,GAAI,GAAI,GAAI,KACvB,IAA/BzG,KAAKJ,MAAMhB,kBAAuB6H,EAAQ,CAAC,GAAI,GAAI,GAAI,KACxB,IAA/BzG,KAAKJ,MAAMhB,kBAAuB6H,EAAQ,CAAC,EAAG,GAAI,GAAI,KAK1D,IAHA,IAAIkB,EAAc,EAGTC,EAAI,EAAGA,EAAIH,EAAOG,IAAK,CAC5B,IAAIC,EAAYJ,EAAQE,EAExB,KAAIC,EAAID,GAAR,CAEA,IAAIG,EAAc,EAElB,GAAID,GAAa,EAObF,IANAG,EAAchH,IAAgB,CAC1B,CAAC4G,EAAiBjB,EAAM,IACxB,CAACiB,GAAiBjB,EAAM,IACxB,CAACiB,IAAiBjB,EAAM,IACxB,CAACiB,EAAajB,EAAM,OAEKiB,OAC1B,GAAIG,GAAa,EAAG,CACvB,IAAIE,EAAStB,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAOzCkB,IALAG,EAAchH,IAAgB,CAC1B,CAAC4G,GAAkBjB,EAAM,GAAKsB,EAAU,KACxC,CAACL,IAAkBjB,EAAM,GAAKsB,EAAU,KACxC,CAACL,EAAcjB,EAAM,GAAKsB,EAAU,QAEXL,OAC1B,GAAIG,GAAa,EAAG,CACvB,IAAIE,EAAStB,EAAM,GAAKA,EAAM,GAO9BkB,IALAG,EAAchH,IAAgB,CAC1B,CAAC4G,IAAkBjB,EAAM,GAAKsB,EAAU,KACxC,CAACL,EAAcjB,EAAM,GAAKsB,EAAU,QAGXL,OAER,IAAdG,IAEPF,IADAG,EAAcJ,GACeA,GAGjC,IAAIM,EAAUlH,IAAgB,CAC1B,CAAC,OAAQ,IAAkC,IAA3Bd,KAAKJ,MAAMf,eAC3B,CAAC,QAAoC,IAA3BmB,KAAKJ,MAAMf,iBAGrBqI,EAAM9G,KACV8G,EAAI9hB,KAAO4iB,EACXd,EAAIze,SAAWqf,EAEf9H,KAAKH,QAAQF,QAAQpX,KAAK2e,O,2BAKlC,WACI,GAA4B,MAAxBlH,KAAK+D,gBACL/D,KAAKH,QAAU,IAAIoF,GAAMjF,KAAKH,SAASsH,eACpC,CAEH,IADA,IAAIC,EAAY,KACP7iB,EAAI,EAAGA,EAAIyb,KAAK+D,gBAAgBpE,QAAQnb,OAAQD,IACR,UAAzCyb,KAAK+D,gBAAgBpE,QAAQpb,GAAGa,OACpCgiB,EAAYpH,KAAK+D,gBAAgBpE,QAAQpb,GAAG6E,OAGhD4W,KAAKH,QAAU,IAAIoF,GAAMjF,KAAKH,SAASsH,SAASC,Q,KCrF/Ca,GAAb,WACI,WAAYrI,GAAQ,qBAChBI,KAAKJ,MAAQA,EAFrB,yDAKI,WAEI,IADA,IAAIkE,EAAQ,KACHvf,EAAI,EAAGA,EAAIyb,KAAKJ,MAAMZ,SAASxa,OAAQD,IAAK,CACjD,GAAU,IAANA,EACAyb,KAAKJ,MAAMZ,SAASza,GAAK,IAAIyb,KAAKJ,MAAMZ,SACpCza,GACF4a,UAAUC,OAAOY,KAAKJ,MAAOrb,GAC/Buf,EAAQ9D,KAAKJ,MAAMZ,SAASza,QAE5Byb,KAAKJ,MAAMZ,SAASza,GAAK,IAAIyb,KAAKJ,MAAMZ,SACpCza,GACF4a,UAAUC,OAAOY,KAAKJ,MAAOrb,EAAGuf,GAG9B9D,KAAKJ,MAAMZ,SAASza,EAAI,GAAG0D,MAAME,MACjC6X,KAAKJ,MAAMZ,SAASza,EAAI,GAAG0D,MAAMG,QAEjC4X,KAAKJ,MAAMZ,SAASza,GAAG0D,MAAME,MAC7B6X,KAAKJ,MAAMZ,SAASza,GAAG0D,MAAMG,QAE7B0b,EAAQ9D,KAAKJ,MAAMZ,SAASza,IAOxC,OAAOyb,KAAKJ,QAhCpB,4BAmCI,WAKI,IAHA,IAAIsI,EAAmBlI,KAAKJ,MAAMZ,SAASxa,OAAS,EAChD2jB,EAAkB,KAGd5jB,EAAI,EACRA,EAAIyb,KAAKJ,MAAMZ,SAASkJ,GAAkBvI,QAAQnb,OAClDD,IACF,CAEmB,SADPyb,KAAKJ,MAAMZ,SAASkJ,GAAkBvI,QAAQpb,GAChDa,OACJ+iB,EAAkB5jB,GAQ1B,IAHA,IAAI8D,EAAa2X,KAAKJ,MAAMZ,SAASkJ,GAAkBjgB,MAAMK,MAEzDod,EAAqB,GAChBzD,EAAI,EAAGA,EAAI5Z,EAAW7D,OAAQyd,IAAK,CACxC,IAAIlZ,EAAOV,EAAW4Z,GACtByD,EAAmBnd,KAAKQ,GAG5B,IACIyc,EAAgBG,GADR3F,KAAKJ,MAAMZ,SAASkJ,GAAkB3I,cAAcjX,MACdD,GAC9C+f,EACApI,KAAKJ,MAAMZ,SAASkJ,GAAkBvI,QAAQwI,GAC7CC,EAKLpI,KAAKJ,MAAMZ,SAASkJ,GAAkBvI,QAAQwI,GAAiB/e,MAC3D0X,IAAkB0E,EAAe4C,EAAQhf,OALzC0d,QAAQC,KAAK,uBAjEzB,iCA0EI,WAEI,IADA,IAAIjD,EAAQ,KACHvf,EAAI,EAAGA,EAAIyb,KAAKJ,MAAMZ,SAASxa,OAAQD,IAE5C,GAAU,IAANA,EAOJ,GACIyb,KAAKJ,MAAMZ,SAASza,EAAI,GAAG0D,MAAME,MAC7B6X,KAAKJ,MAAMZ,SAASza,EAAI,GAAG0D,MAAMG,QACrC4X,KAAKJ,MAAMZ,SAASza,GAAG0D,MAAME,MACzB6X,KAAKJ,MAAMZ,SAASza,GAAG0D,MAAMG,MAJrC,CAcA,IAAIigB,EAAU,GAIVrI,KAAKJ,MAAMZ,SAASza,GAAG0a,iBACnB6E,EAAM7E,gBACVe,KAAKJ,MAAMZ,SAASza,GAAG0D,MAAME,MACzB6X,KAAKJ,MAAMZ,SAASza,GAAG0D,MAAMG,QAC7B0b,EAAM7b,MAAME,MAAQ2b,EAAM7b,MAAMG,OACpC4X,KAAKJ,MAAMZ,SAASza,EAAI,GAAG4a,UAAUC,SAAWwE,IAGhDyE,EAAQ9f,KAAKqb,IAIZ,CAAC,IAAKE,EAAM7E,gBAAgB2B,SACzBZ,KAAKJ,MAAMZ,SAASza,GAAG0a,iBAG3BoJ,EAAQ9f,KAAK2b,IAGb,CAAC,IAAK,IAAK,KAAKtD,SAASZ,KAAKJ,MAAMZ,SAASza,GAAG0a,iBAChDoJ,EAAQ9f,KAAK0e,IAIb,CAACnD,EAAM7E,gBAAgB2B,SACnBZ,KAAKJ,MAAMZ,SAASza,GAAG0a,iBAG3BoJ,EAAQ9f,KAAK8e,IAGb,CAAC,IAAK,IAAK,KAAKzG,SAASZ,KAAKJ,MAAMZ,SAASza,GAAG0a,iBAChDoJ,EAAQ9f,KAAKif,IAEjBxH,KAAKJ,MAAMZ,SAASza,GAAG4a,UAAUC,OAAS0B,IAAeuH,GACrDrI,KAAKJ,MAAMZ,SAASza,GAAG4a,UAAUC,SAAWoI,KAC5C1D,EAAQ9D,KAAKJ,MAAMZ,SAASza,SAhD5Byb,KAAKJ,MAAMZ,SAASza,GAAG4a,UAAUC,OAAS0B,IAAe,CACrD0G,GACAP,KAEJnD,EAAQ9D,KAAKJ,MAAMZ,SAASza,QAhB5Byb,KAAKJ,MAAMZ,SAASza,GAAG4a,UAAUC,OAASoI,GAC1C1D,EAAQ9D,KAAKJ,MAAMZ,SAASza,GA8DpC,OAAOyb,KAAKJ,UA9IpB,KCTa0I,GAAb,WACI,WAAY1I,GAAQ,qBAChBI,KAAKJ,MAAQ2I,KAAKC,MAAMD,KAAKE,UAAU7I,IAF/C,6CAMI,WAGI,IAFA,IAAIrW,EAAY,EAEPhF,EAAI,EAAGA,EAAIyb,KAAKJ,MAAMZ,SAASxa,OAAQD,IAC5C,IAAI,IAAI2V,EAAE,EAAGA,EAAE8F,KAAKJ,MAAMZ,SAASza,GAAGob,QAAQnb,OAAQ0V,IAClD8F,KAAKJ,MAAMZ,SAASza,GAAGob,QAAQzF,GAAG3Q,UAAYA,EAC9CA,GAAayW,KAAKJ,MAAMZ,SAASza,GAAGob,QAAQzF,GAAGzR,SAIvD,OAAOuX,KAAKJ,UAhBpB,KCMa8I,GAAb,0FAII,SAAS1gB,GAAkD,IAA1C6W,EAAyC,uDAAzB,GAAK8J,EAAoB,wDAelD/I,EAAQQ,KAiBZ,OAfAR,EAAMf,cAAgBA,EACtBe,EAAMd,uBAAyB6J,EAG/B/I,EAAQ,IAAIG,GAAaH,EAAO5X,GAAQmf,WACxCvH,EAAQ,IAAIa,GAAeb,GAAOuH,WAClCvH,EAAQ,IAAIsC,GAAmBtC,EAAO5X,GAAQmf,WAC9CvH,EAAQ,IAAIqI,GAAUrI,GAAOgJ,sBAC7BhJ,EAAQ,IAAIqI,GAAUrI,GAAOiJ,uBAC7BjJ,EAAQ,IAAI0I,GAAU1I,GAAOuH,WAG7BL,QAAQE,IAAIpH,GAGLI,KAAK8I,OAAOlJ,KApC3B,oBAyCI,SAAOA,GAEH,IADA,IAAImJ,EAAM,GACFxkB,EAAE,EAAGA,EAAEqb,EAAMZ,SAASxa,OAAQD,IAClC,IAAI,IAAI2V,EAAE,EAAGA,EAAE0F,EAAMZ,SAASza,GAAGob,QAAQnb,OAAQ0V,IAAI,CACjD,IAAIgN,EAAMtH,EAAMZ,SAASza,GAAGob,QAAQzF,GACpC6O,EAAIxgB,KAAK2e,GAGjB,OAAO6B,MAjDf,K,iBCcAC,KAASC,cAlBc,CASnBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKJR,I,mDAAAA,MAAf,E,UCrBMS,GAAoB7c,IAAOC,IAAV,4WAOL,SAACxF,GAAD,OAAWA,EAAM2E,MAAMc,cAK3B,SAACzF,GAAD,OAAWA,EAAM2E,MAAMe,UAI/B2c,GAAe9c,IAAOK,OAAV,iaAOJ,SAAC5F,GAAD,OAAWA,EAAM2E,MAAMe,UAGnB,SAAC1F,GAAD,OAAWA,EAAM2E,MAAMkB,eAyC1Byc,GA9BK,SAACtiB,GACjB,OACI,eAACoiB,GAAD,CAAmBrc,UAAW/F,EAAM+F,UAApC,UACK/F,EAAMuG,MACP,qBACIK,MAAO,CACH2b,QAAS,OACTC,cAAe,SACfC,WAAY,UAJpB,SAOKziB,EAAM0iB,QAAQ9Y,KAAI,SAAChE,EAAQkE,GAAT,OACf,cAACuY,GAAD,CAEI7b,QAAS,WACLxG,EAAM2iB,cAAc/c,IAExBgB,MAAO,CACHC,WACI7G,EAAM4iB,OAAShd,EAAS5F,EAAMe,MAAM8hB,IAAM,MAPtD,SAUKjd,GATIkE,YC7CvBgZ,GAAYvd,IAAOC,IAAV,6HAOTud,GAAoBxd,YAAOyd,KAAPzd,CAAH,wHASjB0d,GAAgB1d,IAAOC,IAAV,yJAKD,SAACxF,GAAD,OAAWA,EAAM2E,MAAMkB,eAgE1Bqd,GA7DG,SAACljB,GACf,IAAMyG,EAAa,WACfzG,EAAMyG,WAAW,GACjBzG,EAAMyM,gBAGV,OAAOzM,EAAMyL,SACT,sBAAK1F,UAAU,YAAf,UACI,cAAC,GAAD,CAAaS,QAASC,IACtB,eAAC,GAAD,CAAWV,UAAU,YAArB,UACI,cAAC,GAAD,CAAYsG,UAAW,YAAa5F,WAAYA,IAChD,wFACA,cAACqc,GAAD,UACI,cAACC,GAAD,CACII,OAAQ,GACRC,QAASH,GACTliB,MAAOf,EAAMe,MACbsiB,iBAAkB,SAACtiB,GACff,EAAMsjB,SAASviB,QAI3B,iHAKA,cAAC+hB,GAAD,UACI,sBACIlc,MAAO,CACH2b,QAAS,OACTC,cAAe,SACfC,WAAY,UAJpB,UAOI,cAAC,GAAD,CACIlc,MAAO,SACPxF,MAAOf,EAAMe,MACb6hB,KAAM5iB,EAAME,WAAWQ,WACvBgiB,QAAS1iB,EAAMujB,YACfZ,cAAe,SAAC/c,GACZ5F,EAAMwjB,iBAAiB5d,MAI/B,cAAC,GAAD,CACIW,MAAO,SACPxF,MAAOf,EAAMe,MACb6hB,KAAM5iB,EAAME,WAAW0B,YACvB8gB,QAAS1iB,EAAMyjB,aACfd,cAAe,SAAC/c,GACZ5F,EAAM0jB,kBAAkB9d,iBAOhD,MCvFF+d,GAAape,IAAOqe,KAAV,kNAYVC,GAAete,IAAOK,OAAV,ocAOJ,SAAC5F,GAAD,OAAWA,EAAM2E,MAAMe,UAGS,SAAC1F,GAAD,OACtCA,EAAM2E,MAAMkB,eAcdie,GAAeve,IAAOK,OAAV,iWAOJ,SAAC5F,GAAD,OAAWA,EAAM2E,MAAMe,UAGnB,SAAC1F,GAAD,OAAWA,EAAM2E,MAAMkB,eA8C1Bke,GAnCF,SAAC/jB,GACV,OACI,eAAC2jB,GAAD,CAAY7Z,GAAG,OAAOka,SAAUhkB,EAAMgkB,SAAtC,UACI,uBACI7L,KAAK,OACLpa,KAAK,OACLsM,YAAY,gBACZ4Z,MAAOjkB,EAAMikB,MACbC,SAAUlkB,EAAMkkB,WAGpB,cAACL,GAAD,CAAc9lB,KAAK,SAAnB,oBACA,cAAC+lB,GAAD,CACI/lB,KAAK,SACLimB,SAAUhkB,EAAMgkB,SAChBxd,QAASxG,EAAMkK,SACftD,MAAO,CACH7F,MACIf,EAAMmkB,SAASC,QAAQpkB,EAAMikB,OAAS,EAChC,qBACA,eACVpd,WACI7G,EAAMmkB,SAASC,QAAQpkB,EAAMikB,OAAS,EAChC,qBACA,0BACVnd,cACI9G,EAAMmkB,SAASC,QAAQpkB,EAAMikB,OAAS,EAAI,OAAS,MAd/D,wBClENnB,GAAYvd,IAAOC,IAAV,+HAOT6e,GAAoB9e,IAAOC,IAAV,6KASjB8e,GAAiB/e,IAAOC,IAAV,2XAMF,SAACxF,GAAD,OAAWA,EAAM2E,MAAMkB,eAI3B,SAAC7F,GAAD,OAAWA,EAAM2E,MAAMe,UA2FtB6e,GA/EO,SAACvkB,GAAW,IAAD,EACHqL,mBAAS,IADN,mBACtB4Y,EADsB,KACfO,EADe,KAEvB/d,EAAa,WACfzG,EAAMyG,WAAW,GACjB+d,EAAS,KAGb,OAAOxkB,EAAMyL,SACT,sBAAK1F,UAAU,YAAf,UACI,cAAC,GAAD,CAAaS,QAASC,IACtB,eAAC,GAAD,CAAWV,UAAU,gBAArB,UACI,cAAC,GAAD,CACIsG,UAAW,iBACX5F,WAAYA,IAEhB,qHAIA,cAAC,GAAD,UACI,qBACIG,MAAO,CACH2b,QAAS,OACTC,cAAe,SACfC,WAAY,UAJpB,SAOI,cAAC,GAAD,CACIuB,SAAUhkB,EAAMgkB,SAChBE,SAAU,SAACtZ,GAAD,OAAO4Z,EAAS5Z,EAAE6G,OAAOwS,QACnCA,MAAOA,EACPE,SAAUnkB,EAAMmkB,SAChBja,SAAU,WACNlK,EAAMkK,SAAS+Z,GACfO,EAAS,WAKzB,6EACA,cAAC,GAAD,UACI,qBACI5d,MAAO,CACH2b,QAAS,OACTC,cAAe,SACfC,WAAY,UAJpB,SAOI,cAAC4B,GAAD,UACKrkB,EAAMmkB,SACFhX,QAAO,SAACsX,GAAD,MAAmB,YAATA,KACjB7a,KAAI,SAAC6a,EAAM/c,GAAP,OACD,cAAC4c,GAAD,CAEI9d,QAAS,SAACoE,GACN4Z,EAAS5Z,EAAE6G,OAAOiT,YAEtB9d,MAAO,CACHC,WACI7G,EAAM+G,WAAa0d,EACbzkB,EAAMe,MAAM8hB,IACZ,KACV8B,YACIV,IAAUQ,EACJzkB,EAAMe,MAAM8hB,IACZ,MAblB,SAgBK4B,GAfI/c,kBAuBrC,MCtHFkd,GAAsBrf,IAAOC,IAAV,0VAOP,SAACxF,GAAD,OAAWA,EAAM2E,MAAMc,cAK3B,SAACzF,GAAD,OAAWA,EAAM2E,MAAMe,UAI/Bmf,GAAetf,IAAO1E,MAAV,gdAKA,SAACb,GAAD,OAAWA,EAAM2E,MAAMc,cAC3B,SAACzF,GAAD,OAAWA,EAAM2E,MAAMe,UAgDtBof,GAhCA,SAAC9kB,GACZ,OACI,eAAC4kB,GAAD,CAAqB7e,UAAW/F,EAAM+F,UAAtC,UACI,4BAAI/F,EAAMuG,QACV,cAACse,GAAD,CACI9mB,KAAK,QACL+d,IAAK9b,EAAM8b,IACX0B,IAAKxd,EAAMwd,IACXuH,KAAM/kB,EAAM+kB,KACZd,MAAOjkB,EAAMikB,MACbC,SAAU,SAACtZ,GACP5K,EAAMglB,QAAQpa,EAAE6G,OAAOwS,UAG/B,4BAAIjkB,EAAMikB,YC/ChBnB,GAAYvd,IAAOC,IAAV,+HA0FAyf,IAnFA1f,IAAOC,IAAV,kaAOE,SAACxF,GAAD,OAAWA,EAAM2E,MAAMe,UAGnB,SAAC1F,GAAD,OAAWA,EAAM2E,MAAMkB,eAWlB,SAAC7F,GACpB,IAAMyG,EAAa,WACfzG,EAAMyG,WAAW,GACjBzG,EAAMyM,gBAIV,OAAOzM,EAAMyL,SACT,sBAAK1F,UAAU,YAAf,UACI,cAAC,GAAD,CAAaS,QAASC,IACtB,eAAC,GAAD,CAAWV,UAAU,aAArB,UACI,cAAC,GAAD,CACIsG,UAAW,iBACX5F,WAAYA,IAEhB,8EACA,cAAC,GAAD,UACI,cAAC,GAAD,CACI1F,MAAOf,EAAMe,MACbwF,MAAO,MACPuV,IAAK,GACL0B,IAAK,IACLyG,MAAOjkB,EAAME,WAAWC,MACxB6kB,QAAS,SAACf,GACNjkB,EAAMklB,YAAYjB,QAI9B,yFAGA,cAAC,GAAD,UACI,cAAC,GAAD,CACIljB,MAAOf,EAAMe,MACbwF,MAAO,sBACPuV,IAAK,EACL0B,IAAK,EACLuH,KAAM,IACNd,MAAOjkB,EAAME,WAAWilB,UACxBH,QAAS,SAACf,GACNjkB,EAAMolB,gBAAgBnB,QAIlC,4EAGA,cAAC,GAAD,UACI,cAAC,GAAD,CACIljB,MAAOf,EAAMe,MACb6hB,KAAM5iB,EAAME,WAAWmlB,eACvB3C,QAAS1iB,EAAMslB,gBACf3C,cAAe,SAAC/c,GACZ5F,EAAMulB,iBAAiB3f,cAM3C,OC5FF4f,GAAsBjgB,IAAOC,IAAV,wEA+EVigB,IA1EUlgB,IAAOC,IAAV,+JAWL,SAACxF,GAKd,OAAOA,EAAMyL,SACT,qBAAK1F,UAAU,YAAYS,QALZ,WACfxG,EAAMyG,WAAW,IAIjB,SACI,eAAC+e,GAAD,WACI,oBAAI5e,MAAO,CAAE8e,aAAc,QAA3B,qEAGA,yCACA,+CACA,0HAEqC,OAErC,yGAIA,wJAIA,mFACA,yCACA,gDACA,4HAIA,8IAIA,yCACA,2CACA,yHAIA,yCACA,wCACA,8EAEI,mBACI9e,MAAO,CAAE7F,MAAO,WAChBsH,KAAK,6CACLoJ,OAAO,SACPkU,IAAI,aAJR,+BAFJ,OAYA,yCACA,mBAAG5f,UAAU,UAAb,gDAGR,O,UCuTO6f,OApXf,WAAe,MAEqBva,mBAAS,EACrC,GACA,GACA,GACA,GACA,IAPO,mBAEJI,EAFI,KAEMC,EAFN,OASwBL,mBAAS,WATjC,mBASJtE,EATI,KASM8e,EATN,OAUwBxa,mBAAS,IAVjC,mBAUJ8Y,EAVI,KAUM2B,EAVN,OAWoBza,mBAAS,IAX7B,mBAWJ1K,EAXI,KAWIuM,EAXJ,OAYoB7B,mBAAS,IAZ7B,mBAYJ5J,EAZI,KAYIskB,EAZJ,OAauB1a,oBAAS,GAbhC,mBAaJxC,EAbI,KAaOmd,EAbP,KAcLV,EAAkB,CAAC,YAAa,YAChC7B,EAAe,CAAC,QAAS,SACzBF,EAAc,CAAC,MAAO,SAhBjB,EAiB4BlY,mBAAS,CAC5ClL,MAAO,IACPglB,UAAW,GACXE,eAAgBC,EAAgB,GAChC1jB,YAAa6hB,EAAa,GAC1B/iB,WAAY6iB,EAAY,GACxBxiB,MAAO,CACHklB,IAAK,CACD9X,EAAG,EACH8F,EAAG,EACHiS,EAAG,GACH3P,EAAG,GAEPsM,IAAK,aA9BF,mBAiBJ3iB,EAjBI,KAiBQimB,EAjBR,KAmCXlmB,qBAAU,WACNmmB,IACAC,EAAQ,aAET,IAKH,IAAM5f,EAAa,SAACvJ,GAChB,IAAIyO,EAAe,EAAC,GAAO,GAAO,GAAO,GAAO,GAC5CC,GAAcH,EAASvO,GAC3ByO,EAAazO,GAAK0O,EAClBF,EAAYC,IAQV2a,EAAW3E,GAAS4E,YAAYC,WAAW,SAC3CC,EAAY9E,GAAS4E,YAAYC,WAAW,cAG5CH,EAAU,SAACK,GACAjH,QAAQE,IAAI,yBAGzB2G,EACKK,IAAID,GACJE,MACAC,MAAK,SAACF,GACH,GAAIA,EAAIG,OAAQ,CACZ,IAAMla,EAAQ+Z,EAAIvQ,OAClB,GAAIxJ,EAAO,CACP,IAAIma,EAAW,GACf,IAAK,IAAMC,KAAOpa,EACdma,EAAQ,sBAAOA,GAAP,CAAiBna,EAAMoa,KAEnC9Z,EAAa6Z,GACbhB,EAAa,SAEd,CAEH7Y,EAAa,IACb6Y,EAAa,IACbtZ,EAAaia,GACb,IAAMO,EAAW,sBAAO9C,GAAP,CAAiBuC,IAClCZ,EAAemB,OAGtBC,OAAM,SAACC,GACJ1H,QAAQE,IAAI,0BAA2BwH,MAI/CV,EACKE,IAAID,GACJE,MACAC,MAAK,SAACF,GACH,GAAIA,EAAIG,OAAQ,CACZ,IAAMla,EAAQ+Z,EAAIvQ,OACdxJ,GAEAuZ,EAAiB,CACbhmB,MAAOyM,EAAMzM,MACbglB,UAAWvY,EAAMuY,UACjBE,eAAgBzY,EAAMyY,eACtBzjB,YAAagL,EAAMhL,YACnBlB,WAAYkM,EAAMlM,WAClBK,MAAO6L,EAAM7L,aAMrBolB,EAAiB,CACbhmB,MAAO,IACPglB,UAAW,GACXE,eAAgBC,EAAgB,GAChC1jB,YAAa6hB,EAAa,GAC1B/iB,WAAY6iB,EAAY,GACxBxiB,MAAO,CACHklB,IAAK,CACD9X,EAAG,EACH8F,EAAG,EACHiS,EAAG,GACH3P,EAAG,GAEPsM,IAAK,aAGbpW,EAAaia,MAGpBQ,OAAM,SAACC,GACJ1H,QAAQE,IAAI,0BAA2BwH,OAK7C1a,EAAe,WAAyB,IAAxBia,EAAuB,uDAAb3f,EACf0Y,QAAQE,IAAI,uBACzB,IAAMyH,EAAa,eAAQzmB,GAC3B2lB,EAASK,IAAID,GAASW,SACtBf,EAASK,IAAID,GAASpqB,IAAI8qB,GAE1B,IAAME,EAAc,eAAQpnB,GAE5BumB,EAAUE,IAAID,GAASW,SACvBZ,EAAUE,IAAID,GAASpqB,IAAIgrB,IAezBlB,EAAW,uCAAG,8BAAA7P,EAAA,6DACHkJ,QAAQE,IAAI,wBADT,SAEOgC,GAAS4E,YAAYC,WAAW,SAASI,MAFhD,OAEVW,EAFU,OAGVC,EAAeD,EAASE,KAAK7d,KAAI,SAAC+c,GAAD,OAASA,EAAI7c,MAEpDgc,EAAe0B,GALC,2CAAH,qDAwBX5e,EAAgB,uCAAG,sBAAA2N,EAAA,sEACfta,OADe,WAGjB4M,EAHiB,uBAMjBmd,GAAa,GANI,SAOX/pB,KAAe0a,OAPJ,+CAYrB8I,QAAQE,IAAI,WACZqG,GAAa,GAbQ,UAcf/pB,KAAeqC,QAdA,4CAAH,qDAkBhBoI,EAAW,uCAAG,sBAAA6P,EAAA,0DACZ1N,EADY,uBAIZmd,GAAa,GAJD,SAKN/pB,KAAe0a,OALT,mFAAH,qDA8CjB,OACI,qBAAK5Q,UAAU,MAAf,SACI,eAAC,IAAD,CAAepB,MAAOuS,GAAOC,KAA7B,UACI,cAAC5S,EAAD,IACA,cAACxE,GAAA,QAAD,CACIY,OAAQA,EACRc,OAAQA,EACRoH,UAAWA,EACX3I,WAAYA,IAGhB,cAAC,GAAD,CACIuB,OAAQA,EACRd,OAAQA,EACRI,MAAOb,EAAWa,MAAMklB,IAAI9X,EAC5BtF,UAAWA,IAGf,oBACI9C,UAAU,OACVa,MAAO,CACH7F,MAAO,QACP+N,SAAU,QACV4Y,OAAQ,OACRC,MAAO,OACPC,OAAQ,OAPhB,mBAUW7gB,KAGX,cAAC,EAAD,CACIN,WAAYA,EACZhF,OAAQA,EACRd,OAAQA,EACRR,MAAOD,EAAWC,MAClB4G,SAAUA,EACV8B,UAAWA,EACXD,iBAAkBA,EAClBlC,YAAaA,EACbC,cAtEM,WAElB,IAAIkhB,EAAY,GAChBlnB,EAAOP,SAAQ,SAACsK,GACZ,IAGIod,EAAY,CAAEhnB,MAHJ4J,EAAO,MAGI3J,MAFX2J,EAAO,QAEWtJ,SADfC,SAASqJ,EAAO,WAGjCmd,EAAS,sBAAOA,GAAP,CAAkBC,OAE/B,IAAIC,GAAU,EACVC,EAAU/pB,KAAKiG,IAAI,EAAIhE,EAAWilB,WAKtC,GAHkC,cAA9BjlB,EAAWmlB,iBAAgC0C,GAAU,GAGrDF,EAAU1qB,OAAS,EAAG,CACtB,IACI8qB,GADY,IAAI5G,IACYvB,SAC5B+H,EACAG,EACAD,GAEJhC,EAAakC,OAgDT,cAAC,GAAD,CAAUxhB,WAAYA,EAAYgF,SAAUA,EAAS,KACrD,cAAC,IAAD,CACI7E,MAAO,CACH7F,MAAO,QACPkE,SAAU,QACV6J,SAAU,QACVoZ,IAAK,OACLP,MAAO,OACPQ,OAAQ,WAEZ3hB,QAAS,kBAAMC,EAAW,MAE9B,cAAC,GAAD,CACIM,SAAUA,EACVhG,MAAOb,EAAWa,MAClB0K,SAAUA,EAAS,GACnBhF,WAAYA,EACZud,SAAU,SAACpZ,IA1IJ,SAACnD,GAEpBA,EAAM2gB,iBACN,IAAIC,EACqC,KAArC5gB,EAAMgK,OAAO3G,SAAS2Z,KAAKR,MACrBxc,EAAMgK,OAAO3G,SAAS2Z,KAAKR,MAC3B,UACV4B,EAAewC,GAEfhC,EAAQgC,GAkIQC,CAAe1d,IAGnBV,SAlKG,SAACwc,GACHjH,QAAQE,IAAI,uBAEzB,IAAMsH,EAAc9C,EAAShX,QAAO,SAACsX,GAAD,OAAUA,IAASiC,KACvDZ,EAAemB,GAEfX,EAASK,IAAID,GAASW,SACtBZ,EAAUE,IAAID,GAASW,UA4JXlD,SAAUA,EACVzd,YAAaA,IAEjB,cAAC,GAAD,CACI+E,SAAUA,EAAS,GACnBhF,WAAYA,EACZ9F,OAAQA,EACRuM,aAAcA,EACdT,aAAcA,EACd/F,YAAaA,IAEjB,cAAC,GAAD,CACI+E,SAAUA,EAAS,GACnBhF,WAAYA,EACZ1F,MAAOb,EAAWa,MAClBuiB,SAAU,SAAC1Y,GACPub,EAAiB,2BACVjmB,GADS,IAEZa,MAAO,CACHklB,IAAKrb,EAAEqb,IACPpD,IAAKjY,EAAEiY,SAInB3iB,WAAYA,EACZsjB,iBAAkB,SAAC5Y,GAAD,OACdub,EAAiB,2BAAKjmB,GAAN,IAAkBQ,WAAYkK,MAElD8Y,kBAAmB,SAAC9Y,GAAD,OACfub,EAAiB,2BAAKjmB,GAAN,IAAkB0B,YAAagJ,MAEnD6Y,aAAcA,EACdF,YAAaA,EACb9W,aAAcA,EACd/F,YAAaA,IAEjB,cAAC,GAAD,CACI+E,SAAUA,EAAS,GACnBhF,WAAYA,EACZvG,WAAYA,EACZa,MAAOb,EAAWa,MAClBmkB,YAAa,SAACta,GAAD,OACTub,EAAiB,2BAAKjmB,GAAN,IAAkBC,MAAOyK,MAE7Cwa,gBAAiB,SAACxa,GAAD,OACbub,EAAiB,2BAAKjmB,GAAN,IAAkBilB,UAAWva,MAEjD2a,iBAAkB,SAAC3a,GAAD,OACdub,EAAiB,2BAAKjmB,GAAN,IAAkBmlB,eAAgBza,MAEtD0a,gBAAiBA,EACjB7Y,aAAcA,EACd/F,YAAaA,UCnXlB6hB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS9R,OACL,cAAC,IAAM+R,WAAP,UACI,cAAC,GAAD,MAEJ9gB,SAAS+gB,eAAe,SAM5BV,O","file":"static/js/main.5ca72f1a.chunk.js","sourcesContent":["import * as Tone from 'tone';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { convert, chordNotes } from '../libraries/melodygen/utils.js';\r\n\r\n// INIT\r\n\r\nlet baseVolume = -3.0;\r\nlet songTempo = 120;\r\n\r\n// connect the premaster signal to two bus for analyzing the signal\r\nconst analyserBusLeft = new Tone.Channel(0, 0);\r\nconst analyserBusRight = new Tone.Channel(0, 0);\r\nconst split = new Tone.Split(2);\r\nsplit.connect(analyserBusLeft, 0);\r\nsplit.connect(analyserBusRight, 1);\r\n\r\n// enhance hi freq component for analyzer\r\nconst eq = new Tone.EQ3(0,0,0);\r\neq.set({\r\n    high: 18,\r\n    highFrequency: 800,\r\n    mid: 3,\r\n    midFrequency: 300\r\n})\r\neq.connect(split);\r\n\r\n// master fxs for loudness\r\nconst comp = new Tone.Compressor(baseVolume-6, 3);\r\ncomp.set({\r\n    attack: 0.01,\r\n    release: 0.05,\r\n    knee: 40,\r\n})\r\nconst limiter = new Tone.Limiter(baseVolume);\r\ncomp.connect(limiter);\r\nlimiter.connect(Tone.getDestination());\r\n\r\n// function for chaining the instruments to the master bus and the analyzer busses\r\nfunction connectEffectsChain(chain) {\r\n    for (let i = 0; i < chain.length - 1; i += 1) {\r\n        chain[i].connect(chain[i + 1]);\r\n    }\r\n    chain[chain.length - 1].connect(eq);\r\n    chain[chain.length - 1].connect(comp);\r\n}\r\n\r\n// melody and chords sequence init\r\n\r\nlet melodyInstrument = [];\r\nlet melodyLoop = [];\r\nlet melodySequence = [];\r\n\r\nlet chordInstrument = [];\r\nlet chordLoop = [];\r\nlet chordSequence = [];\r\nlet loopDuration = 0;\r\n\r\n// function to create the chord loop\r\nfunction createChordLoop(instrument) {\r\n    if (chordSequence != []) {\r\n        let loop = new Tone.Loop(function (time) {\r\n            \r\n            chordSequence.forEach((chord) => {\r\n                instrument['synth'].triggerAttackRelease(\r\n                    chord.notes,\r\n                    parseInt(chord.duration)*(120/songTempo),\r\n                    time+chord.time*(120/songTempo),\r\n                    1\r\n                );\r\n            });\r\n        }, loopDuration*(120/songTempo));\r\n        loop.start();\r\n        return loop\r\n    }\r\n}\r\n\r\n// function to create the melody loop\r\nfunction createMelodyLoop(instrument, transposition) {\r\n    if (melodySequence != []) {\r\n        let loop = new Tone.Loop(function (time) {\r\n            // for each element, if it's a note, trigger it\r\n            melodySequence.forEach((note) => {\r\n                if (note.type == 'note') {\r\n                    let m = note.pitch;\r\n                    // midi to freq conversion + transposition\r\n                    let f = Math.pow( 2, (m-69+(transposition*12))/12 ) * 440;\r\n                    instrument['synth'].triggerAttackRelease(\r\n                        f,\r\n                        note.duration*(120/songTempo),\r\n                        time+note.onsetTime*(120/songTempo),\r\n                        1\r\n                    );\r\n                } \r\n            });\r\n        }, loopDuration*(120/songTempo));\r\n        loop.humanize = instrument['humanize'];\r\n        loop.start();\r\n        return loop\r\n    }\r\n}\r\n\r\n// INSTRUMENTS\r\n\r\n// electric piano type of synth, made with a distorted sine wave, tremolo and chorus\r\nfunction createSynthPiano() {\r\n\r\n    let polySynthPiano = new Tone.PolySynth();\r\n    polySynthPiano.set({\r\n        volume: baseVolume + 3.0,\r\n        oscillator: {\r\n            type: \"fatsine\",\r\n            spread: Math.random()*20\r\n        },\r\n        envelope: {\r\n            attack: 0.075,\r\n            decay: 6,\r\n            sustain: 0.1,\r\n            release: 0.1,\r\n        }\r\n    });\r\n\r\n    let eq = new Tone.EQ3(-3, 0, 0);\r\n    let tremolo = new Tone.Tremolo(10, 0.5).start();\r\n    let chorus = new Tone.Chorus(0.1, 7, 0.3).start();\r\n\r\n    let chain = [polySynthPiano, tremolo, eq, chorus];\r\n\r\n    connectEffectsChain(chain);\r\n\r\n    return {\r\n        synth: polySynthPiano,\r\n    };\r\n}\r\n\r\n// pad type of synth, made with pwm oscillator and a LFO controlled filter\r\nfunction createSynthPad() {\r\n\r\n    let polySynthPad = new Tone.PolySynth();\r\n    polySynthPad.set({\r\n        volume: baseVolume - 25.0,\r\n        oscillator: {\r\n            type: \"pwm\",\r\n            modulationFrequency: 0.2,\r\n            detune: Math.random()*14\r\n        },\r\n        envelope: {\r\n            attack: 0.7,\r\n            decay: 2,\r\n            sustain: 0.7,\r\n            release: 0.9,\r\n        }\r\n    });\r\n\r\n    let eq = new Tone.EQ3(6, 0, 0);\r\n    let vibrato = new Tone.Vibrato(20, 0.07);\r\n    let filt = new Tone.Filter(1200, \"lowpass\", -24);\r\n    let lfo = new Tone.LFO(0.2, 600, 1200);\r\n    lfo.connect(filt.frequency);\r\n    lfo.start();\r\n\r\n    let chain = [polySynthPad, vibrato, filt, eq];\r\n\r\n    connectEffectsChain(chain);\r\n\r\n    return {\r\n        synth: polySynthPad,\r\n    };\r\n}\r\n\r\n// lead synth, with chorus and ping pong delay to exploit spatialization, broadband\r\nfunction createSynthLead() {\r\n    let lead = new Tone.Synth({\r\n        volume: baseVolume - 25.0,\r\n        portamento: 0.01,\r\n        oscillator: {\r\n            type: 'amsine',\r\n        },\r\n        envelope: {\r\n            attack: 0.3,\r\n            decay: 2,\r\n            sustain: 0.2,\r\n            release: 2,\r\n        },\r\n\r\n        detune: 0.5,\r\n    });\r\n\r\n    let chorus = new Tone.Chorus(0.5, 10, 0.3);\r\n    let pingPong = new Tone.PingPongDelay(1/8*(120/songTempo), 0.4);\r\n    let tremolo = new Tone.Tremolo(2*(120/songTempo), 0.4).start();\r\n    let filter = new Tone.Filter(300, \"highpass\")\r\n\r\n    let chain = [lead, chorus, pingPong, tremolo, filter];\r\n\r\n    connectEffectsChain(chain);\r\n\r\n    let humanize = 0.2;\r\n\r\n    return {\r\n        synth: lead,\r\n        humanize: humanize,\r\n    };\r\n}\r\n\r\n// percussive synth, with autopanner and delay to exploit spatialization, narrowband\r\nfunction createSynthBell() {\r\n    let bells = new Tone.Synth();\r\n    bells.set({\r\n        harmonicity: 8,\r\n        modulationIndex: 2,\r\n        oscillator: {\r\n            type: 'sine',\r\n        },\r\n        envelope: {\r\n            attack: 0.01,\r\n            decay: 2,\r\n            sustain: 0,\r\n            release: 2,\r\n        },\r\n        modulation: {\r\n            type: 'triangle',\r\n        },\r\n        modulationEnvelope: {\r\n            attack: 0.05,\r\n            decay: 0.2,\r\n            sustain: 0,\r\n            release: 0.5,\r\n        },\r\n        volume: baseVolume - 16.0,\r\n    });\r\n\r\n    let autoPanner = new Tone.AutoPanner(0.25*(120/songTempo));\r\n    autoPanner.set({\r\n        depth: 1,\r\n        type: \"sawtooth1\"\r\n    })\r\n    autoPanner.start();\r\n    let dly = new Tone.FeedbackDelay(1/3*(120/songTempo), 0.25);\r\n    let filter2 = new Tone.Filter(400, \"highpass\");\r\n\r\n    let chain = [bells, autoPanner, dly, filter2];\r\n    connectEffectsChain(chain);\r\n\r\n    let humanize = 0.5;\r\n    return {\r\n        synth: bells,\r\n        humanize: humanize,\r\n    };\r\n}\r\n\r\n// instantiate the synths\r\nvar piano = createSynthPiano();\r\nvar pad = createSynthPad();\r\nvar lead = createSynthLead();\r\nvar bell = createSynthBell();\r\n\r\nconst Sound = (props) => {\r\n\r\n    useEffect(() => {\r\n\r\n        songTempo = props.parameters.tempo;\r\n\r\n    }, [props.parameters.tempo]); // update when tempo changes\r\n\r\n    useEffect(() => {\r\n\r\n        // CHORDS\r\n        // delete previous chords sequence(s)\r\n        chordLoop.forEach((loop) => {\r\n            loop.dispose();\r\n            chordLoop.pop(loop);\r\n        });\r\n        // init sequence\r\n        chordSequence = [];\r\n        loopDuration = 0;\r\n        let chordOnSet = 0;\r\n        // change instrument\r\n        let octave = 4;\r\n        let bassnote = 1;\r\n        if (props.parameters.chordSound == 'Piano') {\r\n            bassnote = 1;\r\n            chordInstrument = piano;\r\n        } else if (props.parameters.chordSound == 'Pad') {\r\n            bassnote = 2;\r\n            chordInstrument = pad;\r\n        }\r\n        // determine chord notes\r\n        props.chords.forEach((chord) => {\r\n            let input = { tonic: chord['tonic'] , color: chord['quality'] };\r\n            let tonic = chordNotes(input, octave-bassnote);\r\n            let notes = chordNotes(input, octave);\r\n            notes.push(tonic[0]);\r\n            chordSequence.push({ time: chordOnSet, notes: notes, duration: chord['duration'] });\r\n            chordOnSet += parseInt(chord['duration']);\r\n            loopDuration = chordOnSet;\r\n        });\r\n        // create chord loop(s) and handle to delete it\r\n        let chords = createChordLoop(chordInstrument);\r\n        chordLoop.push(chords);\r\n\r\n        // MELODY\r\n        // delete previous melody sequence(s)\r\n        melodyLoop.forEach((loop) => {\r\n            loop.dispose();\r\n            melodyLoop.pop(loop);\r\n        });\r\n        // init sequence\r\n        melodySequence = [];\r\n        props.melody.forEach((note) => {\r\n            melodySequence.push(note);\r\n        });\r\n        // change instrument\r\n        let transpose = 0;\r\n        if (props.parameters.melodySound == 'Synth') {\r\n            melodyInstrument = lead;\r\n            transpose = 0;\r\n        } else if (props.parameters.melodySound == 'Bells') {\r\n            melodyInstrument = bell;\r\n            transpose = 2;\r\n        }\r\n        // create melody loop(s) and handle to delete it\r\n        let melody = createMelodyLoop(melodyInstrument, transpose);\r\n        melodyLoop.push(melody);\r\n        \r\n    }, [props.melody, props.parameters.melodySound, props.parameters.chordSound, props.parameters.tempo]); // update when melody or parameters change\r\n    \r\n    return <></>;\r\n};\r\n\r\nexport default Sound;\r\n\r\n// exports to make the visualizer work\r\nexport var context = Tone.getContext();\r\nexport var busLeft = analyserBusLeft;\r\nexport var busRight = analyserBusRight;","/*\r\nThese funcitons are used as utilities by all the classes\r\n*/\r\n\r\n//Pick one component of array starting from its associated probabilities\r\nexport function pickState(input){\r\n    /* [\r\n        [choice, probability<0...100>],\r\n        [choice, probability<0...100>],\r\n        ...\r\n    ] */\r\n    let min = 0\r\n    let max = 100 + 1\r\n\r\n    let random = Math.floor(Math.random()*(max-min)+min);\r\n\r\n    let sum = 0\r\n    for(let i = 0; i<input.length; i++){\r\n        sum += input[i][1]\r\n        if(random <= sum) return input[i][0]\r\n    }\r\n\r\n}\r\n\r\n//Return random element of array\r\nexport function randItem(array){\r\n    let random = Math.floor((Math.random() * array.length))\r\n    return array[random]\r\n}\r\n\r\n//Converts an array of note names (string) to MIDI numbers (int) or vice versa\r\nexport function convert(notesArray){\r\n\r\n    let converted = []\r\n    let numbers = {\r\n        'C': 0, 'C#': 1, 'D': 2, 'D#': 3,  'E': 4, 'F': 5, 'F#': 6, 'G': 7, 'G#': 8, 'A': 9, 'A#': 10, 'B': 11,\r\n        'Db': 1, 'Eb': 3, 'Gb': 6, 'Ab':8, 'Bb': 10,\r\n        'A##': 11, 'B##': 1, 'C##': 2, 'D##': 4, 'E##': 6, 'F##':7, 'G##': 9\r\n    }\r\n    let letters = {\r\n        0: 'C', 1: 'C#', 2: 'D', 3: 'D#',  4: 'E', 5: 'F', 6: 'F#', 7: 'G', 8: 'G#', 9: 'A', 10: 'A#',11: 'B'\r\n    }\r\n    \r\n    for(let i=0; i<notesArray.length; i++){\r\n        if((typeof notesArray[i]) == 'string'){\r\n            converted.push(numbers[notesArray[i]])\r\n        }else{\r\n            let octave = Math.trunc(notesArray[i] / 12) + 1\r\n            converted.push(letters[notesArray[i]%12] + octave)\r\n        }\r\n    }\r\n    \r\n    return converted\r\n}\r\n\r\n\r\n//Return nearest element of an array\r\nexport function nearestNote(notesArray, note){\r\n    let difference = null\r\n    let nearestNote = null\r\n\r\n    for(let i=0; i<notesArray.length; i++){\r\n        let currdiff = Math.abs(notesArray[i] - note)\r\n        if(nearestNote == null){\r\n            nearestNote = notesArray[i]\r\n            difference = currdiff\r\n        }else{\r\n            if(currdiff < difference){\r\n                nearestNote = notesArray[i]\r\n                difference = currdiff\r\n            }\r\n        }\r\n    }\r\n\r\n    return nearestNote\r\n}\r\n\r\n//Return notes of a chord\r\nexport function chordNotes(chord, octave=null){\r\n    const music_chord = require('music-chord')\r\n    let sharpmap = {'A##': 'B', 'B##': 'C#', 'C##': 'D', 'D##': 'E', 'E##': 'F#', 'F##': 'G', 'G##': 'A'}\r\n    let notes = music_chord(chord.color, chord.tonic)\r\n    //Error: chord not recognized\r\n    if(notes[0] == null){\r\n        throw 'MelodyGen@Pitch Error: Chord [' + chord.tonic + chord.color + \"] not recognized\";\r\n    }else{\r\n\r\n        for(let i=0; i<notes.length; i++){\r\n            if(notes[i] in sharpmap){\r\n                notes[i] = sharpmap[notes[i]]\r\n            }\r\n            if(octave != null){\r\n                notes[i] += octave.toString()\r\n            }\r\n        }\r\n        \r\n        return notes\r\n        \r\n    }\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    \r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\r\n        'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\r\n        'Helvetica Neue', sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    \r\n    user-select: none;\r\n    border: none;\r\n    outline: none;\r\n\r\n  }\r\n\r\n  .Icon{\r\n    \r\n    margin-top:5px;\r\n    font-size: 200%;\r\n\r\n  }\r\n\r\n  .CloseBtn{\r\n    transition: 0.3s;  \r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 200%;\r\n    \r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    color: rgba(255,0,0, 0.55);\r\n\r\n    &:hover {\r\n        transition: 0.5s;  \r\n        color: rgba(255,0,0, 0.9);\r\n    }\r\n  }\r\n\r\n  .pulsate {\r\n    animation: pulsate 4s ease-out;\r\n    -webkit-animation: pulsate 4s ease-out;\r\n    animation-iteration-count: infinite;\r\n    -webkit-animation-iteration-count: infinite; \r\n    \r\n}\r\n@-webkit-keyframes pulsate {\r\n    0% { \r\n        opacity: 0.3;\r\n    }\r\n    50% { \r\n        opacity: 1.0;\r\n    }\r\n    100% { \r\n        opacity: 0.3;\r\n    }\r\n}\r\n\r\n  h1 {\r\n      \r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n\r\n    font-size: 2em;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    font-weight: bold;\r\n    \r\n  }\r\n\r\n  h2 {\r\n    \r\n    display: block;\r\n    font-size: 1.4em;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    font-weight: bold;\r\n    \r\n  }\r\n\r\n  h3 {\r\n    margin: 0;\r\n    position: absolute;\r\n    display: block;\r\n    font-size: 1em;\r\n    font-weight: bold;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n  }\r\n\r\n  h4{\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    font-size: 1.1em;\r\n  }\r\n\r\ninput{\r\n  justify-content: center;\r\n  align-items: center;\r\n  //font-size: 1em;\r\n  height: 30px;\r\n  width: fit-content;\r\n  min-width: 50px;\r\n  border-radius: 10px;\r\n  margin-right: 5px;\r\n  margin-top: 7px;\r\n  padding: 7px;\r\n}\r\n\r\nform{\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\np{\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  font-size: 1.1em;\r\n}\r\n\r\n.Container{\r\n  position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.ColorButton{\r\n  text-shadow: -1px 0 white, 0 1px white, 1px 0 white, 0 -1px white;\r\n}\r\n\r\n  `;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {\r\n    createMuiTheme,\r\n    MuiThemeProvider,\r\n  } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n    IoMusicalNotes,\r\n    IoColorPalette,\r\n    IoPlayCircle,\r\n    IoStopCircle,\r\n    IoDownloadOutline,\r\n    IoDice,\r\n    IoText,\r\n} from 'react-icons/io5';\r\nimport {BsGearFill} from \"react-icons/bs\";\r\nimport { createMidi } from './MidiCreator.js';\r\n\r\nconst defaultTheme = createMuiTheme();\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiTooltip: {\r\n        popper: {\r\n            marginTop: \"15px\",\r\n        },\r\n        tooltip: {\r\n            fontSize: \"0.8em\",\r\n            fontWeight: 'bold',\r\n            color: \"black\",\r\n            backgroundColor: 'rgba(255, 255, 255, 0.85)',\r\n            borderStyle: 'none'\r\n        },\r\n        arrow: {\r\n            color: 'rgba(255, 255, 255, 0.85)',\r\n            borderStyle: 'none'\r\n        }\r\n    }\r\n  }\r\n});\r\n\r\nconst StyledMainMenu = styled.div`\r\n    display: flex;\r\n\r\n    align-items: center;\r\n    width: fit-content;\r\n\r\n    background: ${(props) => props.theme.panelColor};\r\n    box-shadow: 0 8px 32px 0 rgba(75, 75, 75, 0.4);\r\n\r\n    backdrop-filter: blur(8.5px);\r\n    -webkit-backdrop-filter: blur(8.5px);\r\n\r\n    border-radius: 15px;\r\n    border: ${(props) => props.theme.border};\r\n\r\n    margin: 1%;\r\n    padding: 0.2%;\r\n`;\r\n\r\nconst MenuButton = styled.button`\r\n    transition: 0.5s;\r\n    width: 50px;\r\n    height: 50px;\r\n    border: ${(props) => props.theme.border};\r\n    border-radius: 25%;\r\n\r\n    background: ${(props) => props.theme.buttonColor};\r\n\r\n    margin: 5px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transition: 1s;\r\n        width: 60px;\r\n        height: 60px;\r\n        box-shadow: 0 8px 32px -5px rgba(75, 75, 75, 0.4);\r\n    }\r\n`;\r\n\r\nconst MainMenu = (props) => {\r\n\r\n    return (\r\n        <MuiThemeProvider theme={defaultTheme}>\r\n            <StyledMainMenu className={props.className}>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Tooltip \r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                        placement=\"bottom\"\r\n                        enterDelay={200}\r\n                        title=\"Song Selection\"\r\n                        arrow\r\n                    >\r\n                        <MenuButton\r\n                            onClick={() => {\r\n                                props.toggleMenu(0);\r\n                                props.stopContext();\r\n                            }}\r\n                        >\r\n                            <IoText className=\"Icon\" />\r\n                        </MenuButton>\r\n                    </Tooltip>\r\n                </MuiThemeProvider>\r\n\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Tooltip \r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                        placement=\"bottom\"\r\n                        enterDelay={200}\r\n                        title=\"Chords Lab\"\r\n                        arrow\r\n                    >\r\n                        <MenuButton\r\n                            onClick={() => {\r\n                                props.toggleMenu(1);\r\n                                props.stopContext();\r\n                            }}\r\n                        >\r\n                            <IoMusicalNotes className=\"Icon\" />\r\n                        </MenuButton>\r\n                    </Tooltip>\r\n                </MuiThemeProvider>\r\n\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Tooltip \r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                        placement=\"bottom\"\r\n                        enterDelay={200}\r\n                        title=\"Compute random melody\"\r\n                        arrow\r\n                    >\r\n                        <MenuButton\r\n                            onClick={() => {\r\n                                props.stopContext();\r\n                                props.computeMelody();\r\n                            }}\r\n                            style={{\r\n                                background:\r\n                                    props.chords.length === 0 ? 'rgb(130,130,130)' : null,\r\n                                pointerEvents: props.chords.length === 0 ? 'none' : null,\r\n                            }}\r\n                        >\r\n                            <IoDice className=\"Icon\" />\r\n                        </MenuButton>\r\n                    </Tooltip>\r\n                </MuiThemeProvider>\r\n\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Tooltip \r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                        placement=\"bottom\"\r\n                        enterDelay={200}\r\n                        title=\"Style Lab\"\r\n                        arrow\r\n                    >\r\n                        <MenuButton\r\n                            onClick={() => {\r\n                                props.toggleMenu(2);\r\n                            }}\r\n                        >\r\n                            <IoColorPalette className=\"Icon\" />\r\n                        </MenuButton>\r\n                    </Tooltip>\r\n                </MuiThemeProvider>\r\n\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Tooltip \r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                        placement=\"bottom\"\r\n                        enterDelay={200}\r\n                        title=\"Parameters Lab\"\r\n                        arrow\r\n                    >\r\n                        <MenuButton\r\n                            onClick={() => {\r\n                                props.toggleMenu(3);\r\n                                props.stopContext();\r\n                            }}\r\n                            style={{\r\n                                background:\r\n                                    props.chords.length === 0 ? 'rgb(130,130,130)' : null,\r\n                                pointerEvents: props.chords.length === 0 ? 'none' : null,\r\n                            }}\r\n                        >\r\n                            <BsGearFill className=\"Icon\" />\r\n                        </MenuButton>\r\n                    </Tooltip>\r\n                </MuiThemeProvider>\r\n\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Tooltip \r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                        placement=\"bottom\"\r\n                        enterDelay={200}\r\n                        title=\"Download MIDI\"\r\n                        arrow\r\n                    >\r\n                        <MenuButton\r\n                            onClick={() => {\r\n                                createMidi(\r\n                                    props.melody,\r\n                                    props.chords,\r\n                                    props.tempo,\r\n                                    props.songName\r\n                                );\r\n                            }}\r\n                            style={{\r\n                                background:\r\n                                    props.melody.length === 0 || props.chords.length === 0\r\n                                        ? 'rgb(130,130,130)'\r\n                                        : null,\r\n                                pointerEvents:\r\n                                    props.melody.length === 0 || props.chords.length === 0\r\n                                        ? 'none'\r\n                                        : null,\r\n                            }}\r\n                        >\r\n                            <IoDownloadOutline className=\"Icon\" />\r\n                        </MenuButton>\r\n                    </Tooltip>\r\n                </MuiThemeProvider>\r\n\r\n\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Tooltip \r\n                        TransitionComponent={Fade}\r\n                        TransitionProps={{ timeout: 600 }}\r\n                        placement=\"bottom\"\r\n                        enterDelay={200}\r\n                        title=\"Start/Stop\"\r\n                        arrow\r\n                    >\r\n                        <MenuButton\r\n                            onClick={props.startStopContext}\r\n                            style={{\r\n                                background:\r\n                                    props.melody.length === 0 || props.chords.length === 0\r\n                                        ? 'rgb(130,130,130)'\r\n                                        : null,\r\n                                pointerEvents:\r\n                                    props.melody.length === 0 || props.chords.length === 0\r\n                                        ? 'none'\r\n                                        : null,\r\n                            }}\r\n                        >\r\n                            {!props.isPlaying ? (\r\n                                <IoPlayCircle className=\"Icon\" />\r\n                            ) : (\r\n                                <IoStopCircle className=\"Icon\" />\r\n                            )}\r\n                        </MenuButton>\r\n                    </Tooltip>\r\n                </MuiThemeProvider>\r\n            </StyledMainMenu>\r\n        </MuiThemeProvider>\r\n        \r\n    );\r\n};\r\n\r\nexport default MainMenu;\r\n","import { convert, chordNotes } from '../libraries/melodygen/utils.js';\r\nimport { MidiWriter } from 'midi-writer-js';\r\n\r\nexport const createMidi = (melody, chords, tempo, songName) => {\r\n    var MidiWriter = require('midi-writer-js');\r\n\r\n    var melodyMidi = new MidiWriter.Track();\r\n    var chordsMidi = new MidiWriter.Track();\r\n\r\n    melodyMidi.setTempo(tempo);\r\n    chordsMidi.setTempo(tempo);\r\n\r\n    var pause = 0;\r\n\r\n    const convertDurationValues = (dur) => {\r\n        return ['T' + dur * 128];\r\n    };\r\n\r\n    melody.forEach((note) => {\r\n        if (note['type'] === 'pause') {\r\n            pause = pause + note['duration'];\r\n        }\r\n\r\n        if (note['type'] === 'note') {\r\n            pause = convertDurationValues(pause);\r\n\r\n            melodyMidi.addEvent(\r\n                [\r\n                    new MidiWriter.NoteEvent({\r\n                        pitch: note['pitch'],\r\n                        duration: 4 / note['duration'],\r\n                        wait: pause,\r\n                    }),\r\n                ],\r\n\r\n                function (event, index) {\r\n                    return { sequential: true };\r\n                }\r\n            );\r\n\r\n            pause = 0;\r\n        }\r\n    });\r\n\r\n    var notesInChord = [];\r\n    var convertChord = { tonic: 'C', color: 'Major' };\r\n\r\n    chords.forEach((chord) => {\r\n        notesInChord = [];\r\n        convertChord.tonic = chord['tonic'];\r\n        convertChord.color = chord['quality'];\r\n        notesInChord = chordNotes(convertChord, 3);\r\n\r\n        var dur = 4 / chord['duration'];\r\n        if (dur === 4 / 3) dur = 'd2';\r\n\r\n        // add array of notes, non sequentially!\r\n        chordsMidi.addEvent(\r\n            [\r\n                new MidiWriter.NoteEvent({\r\n                    pitch: notesInChord,\r\n                    duration: dur,\r\n                }),\r\n            ],\r\n            function (event, index) {\r\n                return { sequential: false };\r\n            }\r\n        );\r\n    });\r\n\r\n    var track = new MidiWriter.Writer([melodyMidi, chordsMidi]);\r\n\r\n    //console.log(write.dataUri());\r\n\r\n    var link = document.createElement('a');\r\n    link.download = songName;\r\n    link.href = track.dataUri();\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n};\r\n","import React from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport { IoRemoveCircle } from 'react-icons/io5';\r\n\r\nconst ChordsTimeline = styled.div`\r\n    position: relative;\r\n    height: 100px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 10px;\r\n    /* flex-wrap: wrap; */\r\n    justify-content: flex-start;\r\n    align-items: left;\r\n    overflow: auto;\r\n`;\r\n\r\nconst StyledChord = styled.div`\r\n    width: fit-content;\r\n\r\n    background: ${(props) => props.theme.buttonColor};\r\n\r\n    border-radius: 15px;\r\n    border: ${(props) => props.theme.border};\r\n\r\n    margin: 5px;\r\n    position: relative;\r\n    height: 75px;\r\n    min-width: ${(props) => {\r\n        return props.size * 75;\r\n    }}px;\r\n    box-shadow: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: visible;\r\n    padding: 10px;\r\n    cursor: grab;\r\n`;\r\n\r\nconst DeleteChord = styled(IoRemoveCircle)`\r\n    transition: 0.2s;\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n    color: rgba(150, 150, 150, 0.7);\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transition: 0.5s;\r\n        color: rgba(100, 100, 100, 1);\r\n    }\r\n`;\r\n\r\nconst ChordsDnDSection = (props) => {\r\n    return (\r\n        <DragDropContext onDragEnd={props.handleOnDragEnd}>\r\n            <Droppable droppableId=\"chords\" direction=\"horizontal\">\r\n                {(provided) => (\r\n                    <ChordsTimeline\r\n                        className=\"chords\"\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                    >\r\n                        {props.chords.length > 0 ? (\r\n                            props.chords.map((chord, index) => (\r\n                                <Draggable\r\n                                    key={chord.id}\r\n                                    draggableId={chord.id}\r\n                                    index={index}\r\n                                >\r\n                                    {(provided) => (\r\n                                        <StyledChord\r\n                                            size={chord.duration}\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                        >\r\n                                            <h3>\r\n                                                {chord.tonic}\r\n                                                {chord.quality}\r\n                                            </h3>\r\n\r\n                                            <DeleteChord\r\n                                                onClick={() => {\r\n                                                    props.onDelete(chord.id);\r\n                                                }}\r\n                                            />\r\n                                        </StyledChord>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))\r\n                        ) : (\r\n                            <p\r\n                                style={{\r\n                                    width: 'auto',\r\n                                    margin: 'auto',\r\n                                }}\r\n                            >\r\n                                Oops! Seems like you haven't added any chord\r\n                                yet... Please add a chord 👉🏼➕\r\n                            </p>\r\n                        )}\r\n                        {provided.placeholder}\r\n                    </ChordsTimeline>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n};\r\n\r\nexport default ChordsDnDSection;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst StyledDropMenu = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    /* flex-wrap: wrap; */\r\n\r\n    justify-content: space-evenly;\r\n\r\n    position: absolute;\r\n    top: 115px;\r\n\r\n    border: ${(props) => props.theme.border};\r\n    border-radius: 15px;\r\n\r\n    background: ${(props) => props.theme.panelColor};\r\n    box-shadow: 0 8px 32px 0 rgba(75, 75, 75, 0.37);\r\n\r\n    margin: 5px;\r\n    padding: 5px;\r\n    cursor: initial;\r\n    ${(props) =>\r\n        props.keyboard === 'circle' &&\r\n        css`\r\n            width: 165px;\r\n            height: 165px;\r\n        `}\r\n`;\r\n\r\nconst StyledElement = styled.button`\r\n    transition: 0.2s;\r\n    height: 25px;\r\n    min-width: 25px;\r\n    padding: 2px;\r\n\r\n    border: ${(props) => props.theme.border};\r\n    border-radius: 25px;\r\n\r\n    background: ${(props) => props.theme.buttonColor};\r\n\r\n    margin: 5px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transition: 0.5s;\r\n        background: rgba(255, 255, 255, 0.8);\r\n    }\r\n\r\n    ${(props) =>\r\n        props.keyboard === 'circle' &&\r\n        css`\r\n            position: absolute;\r\n            ${(props) =>\r\n                props.element === 'C' &&\r\n                css`\r\n                    transform: translate(0, 0);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'G' &&\r\n                css`\r\n                    transform: translate(30px, 8px);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'D' &&\r\n                css`\r\n                    transform: translate(52px, 30px);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'A' &&\r\n                css`\r\n                    transform: translate(60px, 60px);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'E' &&\r\n                css`\r\n                    transform: translate(52px, 90px);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'B' &&\r\n                css`\r\n                    transform: translate(30px, 112px);\r\n                `}\r\n                \r\n            ${(props) =>\r\n                props.element === 'F#' &&\r\n                css`\r\n                    transform: translate(0, 120px);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'C#' &&\r\n                css`\r\n                    transform: translate(-30px, 112px);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'G#' &&\r\n                css`\r\n                    transform: translate(-52px, 90px);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'D#' &&\r\n                css`\r\n                    transform: translate(-60px, 60px);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'A#' &&\r\n                css`\r\n                    transform: translate(-52px, 30px);\r\n                `}\r\n            ${(props) =>\r\n                props.element === 'F' &&\r\n                css`\r\n                    transform: translate(-30px, 8px);\r\n                `}\r\n        `}\r\n`;\r\n\r\nconst DropMenu = (props) => {\r\n    return (\r\n        <StyledDropMenu\r\n            onClick={(e) => e.stopPropagation()}\r\n            keyboard={props.keyboard}\r\n        >\r\n            {props.elements.map((element, index) => (\r\n                <StyledElement\r\n                    keyboard={props.keyboard}\r\n                    element={element}\r\n                    key={index}\r\n                    onClick={(e) => {\r\n                        props.setElements(element);\r\n                    }}\r\n                >\r\n                    {element}\r\n                </StyledElement>\r\n            ))}\r\n        </StyledDropMenu>\r\n    );\r\n};\r\n\r\nexport default DropMenu;\r\n","import React, { useState } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { IoAddCircle } from 'react-icons/io5';\r\n\r\nimport DropMenu from './DropMenu';\r\n\r\nconst StyledAddChord = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    min-width: 400px;\r\n    /* width: 75%; */\r\n    align-self: center;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    border-radius: 15px;\r\n    border: ${(props) => props.theme.border};\r\n    height: 75px;\r\n    background: ${(props) => props.theme.panelColor};\r\n`;\r\n\r\nconst AddButton = styled(IoAddCircle)`\r\n    display: flex;\r\n    transition: 0.2s;\r\n    font-size: 400%;\r\n    opacity: 0.5;\r\n\r\n    margin: 5px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transition: 0.5s;\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst Select = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: 0.2s;\r\n    min-width: 70px;\r\n    width: 20%;\r\n    height: 55px;\r\n    border: ${(props) => props.theme.border};\r\n    border-radius: 15px;\r\n    font-size: 1em;\r\n    background: ${(props) => props.theme.buttonColor};\r\n\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    transition: 0.5s;\r\n    &:hover {\r\n        background: rgba(255, 255, 255, 0.9);\r\n    }\r\n`;\r\n\r\nfunction AddChord(props) {\r\n    const [tonic, setTonic] = useState('');\r\n    const [quality, setQuality] = useState('');\r\n    const [duration, setDuration] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        if (!tonic || !quality || !duration) {\r\n            return;\r\n        }\r\n        props.onAdd({ tonic, quality, duration });\r\n        setTonic('');\r\n        setQuality('');\r\n        setDuration('');\r\n        setShowMenu([false, false, false]);\r\n    };\r\n\r\n    const tonics = [\r\n        'C',\r\n        'C#',\r\n        'D',\r\n        'D#',\r\n        'E',\r\n        'F',\r\n        'F#',\r\n        'G',\r\n        'G#',\r\n        'A',\r\n        'A#',\r\n        'B',\r\n    ];\r\n    const qualities = ['Major', 'minor', 'Maj7', 'minor7', '7', 'm7b5'];\r\n    const durations = ['1', '2', '3', '4'];\r\n\r\n    const [showMenu, setShowMenu] = useState([false, false, false]);\r\n    const toggleMenu = (i) => {\r\n        let newMenuState = [false, false, false];\r\n        let changeMenu = !showMenu[i];\r\n        newMenuState[i] = changeMenu;\r\n        setShowMenu(newMenuState);\r\n    };\r\n\r\n    return (\r\n        <StyledAddChord>\r\n            <Select\r\n                onClick={() => toggleMenu(0)}\r\n                style={{\r\n                    background: showMenu[0] ? 'rgba(255, 255, 255, 0.9)' : null,\r\n                }}\r\n            >\r\n                {tonic ? tonic : 'Tonic'}\r\n                {showMenu[0] ? (\r\n                    <DropMenu\r\n                        keyboard=\"circle\"\r\n                        elements={tonics}\r\n                        setElements={(e) => {\r\n                            setTonic(e);\r\n                            toggleMenu();\r\n                        }}\r\n                    />\r\n                ) : null}\r\n            </Select>\r\n\r\n            <Select\r\n                onClick={(e) => {\r\n                    toggleMenu(1);\r\n                }}\r\n                style={{\r\n                    background: showMenu[1] ? 'rgba(255, 255, 255, 0.9)' : null,\r\n                }}\r\n            >\r\n                {quality ? quality : 'Quality'}\r\n                {showMenu[1] ? (\r\n                    <DropMenu\r\n                        elements={qualities}\r\n                        setElements={(e) => {\r\n                            setQuality(e);\r\n                            toggleMenu();\r\n                        }}\r\n                    />\r\n                ) : null}\r\n            </Select>\r\n\r\n            <Select\r\n                onClick={() => toggleMenu(3)}\r\n                style={{\r\n                    background: showMenu[3] ? 'rgba(255, 255, 255, 0.9)' : null,\r\n                }}\r\n            >\r\n                {duration ? duration : 'Duration'}\r\n                {showMenu[3] ? (\r\n                    <DropMenu\r\n                        elements={durations}\r\n                        setElements={(e) => {\r\n                            setDuration(e);\r\n                            toggleMenu();\r\n                        }}\r\n                    />\r\n                ) : null}\r\n            </Select>\r\n\r\n            <AddButton\r\n                onClick={onSubmit}\r\n                style={{\r\n                    color:\r\n                        !tonic || !quality || !duration\r\n                            ? 'rgb(210, 210, 210)'\r\n                            : 'rgb(255, 180, 0)',\r\n                    pointerEvents:\r\n                        !tonic || !quality || !duration ? 'none' : null,\r\n                }}\r\n            />\r\n        </StyledAddChord>\r\n    );\r\n}\r\n\r\nexport default AddChord;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledBlurredPage = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    backdrop-filter: blur(8.5px);\r\n    -webkit-backdrop-filter: blur(8.5px);\r\n`;\r\n\r\nconst BlurredPage = (props) => {\r\n    return (\r\n        <StyledBlurredPage onClick={props.onClick}>\r\n            {props.children}\r\n        </StyledBlurredPage>\r\n    );\r\n};\r\n\r\nexport default BlurredPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\n\r\nconst StyledHeaderMenu = styled.div`\r\n    position: relative;\r\n    top: -3px;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledCloseBtn = styled.div`\r\n    position: relative;\r\n    top: -60px;\r\n    right: -20px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n\r\n`;\r\n\r\nconst StyledTitleDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n`;\r\n\r\nconst HeaderMenu = (props) => {\r\n    return (\r\n        <StyledHeaderMenu >\r\n            <StyledTitleDiv>\r\n                <h1>{props.titleMenu}</h1>\r\n            </StyledTitleDiv>\r\n            <StyledCloseBtn>\r\n                <IoCloseCircle\r\n                    className=\"CloseBtn\"\r\n                    onClick={() => {\r\n                        props.toggleMenu();\r\n                    }}\r\n                />\r\n            </StyledCloseBtn>\r\n        </StyledHeaderMenu>\r\n    );\r\n};\r\n\r\nexport default HeaderMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledModalMenu = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    position: relative;\r\n    min-width: 50vw;\r\n    max-width: 80vw;\r\n\r\n    overflow: visible;\r\n\r\n    background: ${(props) => props.theme.panelColor};\r\n    box-shadow: 0 8px 32px 0 rgba(75, 75, 75, 0.37);\r\n\r\n    border-radius: 15px;\r\n    border: ${(props) => props.theme.border};\r\n    padding: 25px;\r\n`;\r\n\r\nconst ModalMenu = (props) => {\r\n    return (\r\n        <StyledModalMenu className={props.className}>\r\n            {props.children}\r\n        </StyledModalMenu>\r\n    );\r\n};\r\n\r\nexport default ModalMenu;\r\n","import React from 'react';\r\nimport ChordsDnDSection from './ChordsDnDSection';\r\nimport AddChordSection from './AddChordSection';\r\nimport BlurredPage from '../shared_components/BlurredPage';\r\nimport HeaderMenu from '../shared_components/HeaderMenu';\r\nimport ModalMenu from '../shared_components/ModalMenu';\r\n\r\nconst ChordsMenu = (props) => {\r\n    const deleteChord = (id) => {\r\n        // console.log('delete', id);\r\n        props.updateChords(props.chords.filter((chord) => chord.id !== id));\r\n    };\r\n\r\n    const addChord = (chord) => {\r\n        // generate id based on time (guaranteed to be unique for our application)\r\n        const id = Date.now().toString();\r\n        const newChord = { id, ...chord };\r\n\r\n        props.updateChords([...props.chords, newChord]);\r\n    };\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n        const items = Array.from(props.chords);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        props.updateChords(items);\r\n    }\r\n\r\n    const toggleMenu = () => {\r\n        props.toggleMenu(1);\r\n        props.updateServer();\r\n    };\r\n\r\n    return props.showMenu ? (\r\n        <div className=\"Container\">\r\n            <BlurredPage onClick={toggleMenu} />\r\n            <ModalMenu className=\"ChordsMenu\">\r\n                <HeaderMenu titleMenu={'Chords Lab'} toggleMenu={toggleMenu} />\r\n                <p>🎶 Insert, modify and delete the chords of the song</p>\r\n                <ChordsDnDSection\r\n                    chords={props.chords}\r\n                    handleOnDragEnd={handleOnDragEnd}\r\n                    onDelete={deleteChord}\r\n                />\r\n                <AddChordSection onAdd={addChord} />\r\n            </ModalMenu>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default ChordsMenu;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Tone from 'tone';\r\nimport * as THREE from 'three';\r\n\r\nlet StyledBackground = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n`;\r\n\r\nfunction sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\n// COLOR PALETTE\r\n\r\nlet mainColor = new THREE.Color(Math.random(), Math.random(), Math.random());\r\nmainColor = mainColor.getHSL(mainColor);\r\nmainColor = mainColor.setHSL(mainColor.h, 0.7, 0.5);\r\n\r\nlet prevColor = mainColor.clone();\r\nprevColor = prevColor.getHSL(prevColor);\r\n\r\nlet colorNeedsUpdate = 0;\r\n\r\n// THREE COMPONENTS\r\n\r\nlet scene = new THREE.Scene();\r\n{\r\n    let color = '#000000';\r\n    let density = 0.01;\r\n    scene.fog = new THREE.FogExp2(color, density);\r\n}\r\nscene.background = new THREE.Color('#000000');\r\n\r\nlet triggerStarFall = 0;\r\n\r\n// function to generate and update the visualizer\r\nfunction generateWorld(color, width, depth) {\r\n\r\n    let geometry = new THREE.BufferGeometry();\r\n    let numPoints = width * depth;\r\n    let positions = new Float32Array(numPoints * 3);\r\n    let colors = new Float32Array(numPoints * 3);\r\n\r\n    let k = 0;\r\n    \r\n    // for each point in the geometry, determine position and color\r\n    for (let i = 0; i < width; i++) {\r\n        for (let j = 0; j < depth; j++) {\r\n            let u = i / width;\r\n            let v = j / depth;\r\n\r\n            let x = v - 0.5;\r\n            let z = u - 0.5;\r\n            let y = 0;\r\n\r\n            positions[3 * k] = x;\r\n            positions[3 * k + 1] = y;\r\n            positions[3 * k + 2] = z;\r\n\r\n            let intensity = (y + 0.001) * 10;\r\n            colors[3 * k] = color.r * intensity;\r\n            colors[3 * k + 1] = color.g * intensity;\r\n            colors[3 * k + 2] = color.b * intensity;\r\n\r\n            k++;\r\n        }\r\n    }\r\n\r\n    geometry.setAttribute(\r\n        'position',\r\n        new THREE.BufferAttribute(positions, 3).setUsage(THREE.DynamicDrawUsage)\r\n    );\r\n    geometry.setAttribute(\r\n        'color',\r\n        new THREE.BufferAttribute(colors, 3).setUsage(THREE.DynamicDrawUsage)\r\n    );\r\n    geometry.computeBoundingBox();\r\n\r\n    let material = new THREE.PointsMaterial({\r\n        size: 0.01,\r\n        vertexColors: true,\r\n        transparent: true,\r\n    });\r\n\r\n    // return the visualizer\r\n    return new THREE.Line(geometry, material);\r\n}\r\n\r\nfunction updateWorld(world, color, width, depth, data) {\r\n    let numPoints = width * depth;\r\n    let positions = world.geometry.attributes.position.array;\r\n    let colors = world.geometry.attributes.color.array;\r\n\r\n    let k = numPoints;\r\n\r\n    // determine the position and color of all the points by the previous row value\r\n    for (let i = width; i > 1; i--) {\r\n        for (let j = depth; j > 0; j--) {\r\n            let y = positions[3 * (k - depth) + 1];\r\n            positions[3 * k + 1] = y;\r\n\r\n            let intensity = (y + 0.001) * 6;\r\n            colors[3 * k] = color.r * intensity;\r\n            colors[3 * k + 1] = color.g * intensity;\r\n            colors[3 * k + 2] = color.b * intensity;\r\n\r\n            k--;\r\n        }\r\n    }\r\n\r\n    // determine the postion and color of the first row by the value analized\r\n    for (let m = 0; m < depth; m++) {\r\n        let num = data[m] / 255;\r\n\r\n        positions[3 * m + 1] = num / 3.5;\r\n        let y = positions[3 * m + 1];\r\n\r\n        let intensity = (y + 0.001) * 6;\r\n        colors[3 * m] = color.r * intensity;\r\n        colors[3 * m + 1] = color.g * intensity;\r\n        colors[3 * m + 2] = color.b * intensity;\r\n    }\r\n}\r\n\r\n// functions to generate and update the starfield\r\nfunction generateStarField(num, radius) {\r\n    let geom = new THREE.BufferGeometry();\r\n\r\n    let pos = new Float32Array(3 * num);\r\n    let col = new Float32Array(3 * num);\r\n\r\n    let color = mainColor.clone();\r\n    \r\n    // for each point, determine position and color\r\n    for (let i = 0; i < num; i++) {\r\n        let x = 2 * (Math.random() - 0.5) * radius;\r\n        let y = 2 * (Math.random() - 0.5) * radius;\r\n        let z = 2 * (Math.random() - 0.5) * radius;\r\n        let r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));\r\n\r\n        // stop when point is outside the smaller sphere\r\n        while (r > radius * 0.2) {\r\n            x = 2 * (Math.random() - 0.5) * radius;\r\n            y = 2 * (Math.random() - 0.5) * radius;\r\n            z = 2 * (Math.random() - 0.5) * radius;\r\n            r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));\r\n        }\r\n\r\n        pos[3 * i] = x;\r\n        pos[3 * i + 1] = y;\r\n        pos[3 * i + 2] = z;\r\n\r\n        // random color palette generator\r\n        color = color.getHSL(color);\r\n        let hueOffset = (Math.random() - 0.5) * 0.01;\r\n        if (color.h + hueOffset < 0) {\r\n            hueOffset = -hueOffset;\r\n        } else if (color.h + hueOffset > 1) {\r\n            hueOffset = -hueOffset;\r\n        }\r\n        color = color.offsetHSL(hueOffset, (Math.random() - 0.5) * 0.1, 0);\r\n        color = color.getHSL(color);\r\n        color = color.setHSL(color.h, color.s, 0.5 + Math.random() * 0.3);\r\n\r\n        col[3 * i] = color.r;\r\n        col[3 * i + 1] = color.g;\r\n        col[3 * i + 2] = color.b;\r\n    }\r\n\r\n    geom.setAttribute(\r\n        'position',\r\n        new THREE.BufferAttribute(pos, 3).setUsage(THREE.DynamicDrawUsage)\r\n    );\r\n    geom.setAttribute(\r\n        'color',\r\n        new THREE.BufferAttribute(col, 3).setUsage(THREE.DynamicDrawUsage)\r\n    );\r\n    geom.computeBoundingBox();\r\n\r\n    let starFieldMaterial = new THREE.PointsMaterial({\r\n        size: 0.2,\r\n        vertexColors: true,\r\n    });\r\n\r\n    // return the starfield\r\n    return new THREE.Points(geom, starFieldMaterial);\r\n}\r\n\r\nfunction updateStarField(num, radius, field) {\r\n    let pos = field.geometry.attributes.position.array;\r\n    let col = field.geometry.attributes.color.array;\r\n\r\n    let color = mainColor.clone();\r\n\r\n    // for each point, determine position and color\r\n    for (let i = 0; i < num; i++) {\r\n        let x = (Math.random() - 0.5) * radius;\r\n        let y = (Math.random() - 0.5) * radius;\r\n        let z = (Math.random() - 0.5) * radius;\r\n        let r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));\r\n\r\n        // stop when point is outside the smaller sphere\r\n        while (radius - r < 200) {\r\n            x = (Math.random() - 0.5) * radius;\r\n            y = (Math.random() - 0.5) * radius;\r\n            z = (Math.random() - 0.5) * radius;\r\n            r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));\r\n        }\r\n\r\n        pos[3 * i] = x;\r\n        pos[3 * i + 1] = y;\r\n        pos[3 * i + 2] = z;\r\n\r\n        // random color palette generator\r\n        color = color.getHSL(color);\r\n        let hueOffset = (Math.random() - 0.5) * 0.05;\r\n        if (color.h + hueOffset < 0) {\r\n            hueOffset = -hueOffset;\r\n        } else if (color.h + hueOffset > 1) {\r\n            hueOffset = -hueOffset;\r\n        }\r\n        color = color.offsetHSL(hueOffset, (Math.random() - 0.5) * 0.1, 0);\r\n        color = color.getHSL(color);\r\n        color = color.setHSL(color.h, color.s, 0.5 + Math.random() * 0.3);\r\n\r\n        col[3 * i] = color.r;\r\n        col[3 * i + 1] = color.g;\r\n        col[3 * i + 2] = color.b;\r\n    }\r\n}\r\n\r\n// functions to generate, update and reset the falling stars\r\nfunction generateStar(radius) {\r\n    let timer = new THREE.Clock({ autoStart: false });\r\n\r\n    let geom = new THREE.BufferGeometry();\r\n\r\n    let position = new Float32Array(6);\r\n    let velocity = new Float32Array(6);\r\n\r\n    // random starting position\r\n    // line start\r\n    position[0] = radius * 2 * (Math.random() - 0.5);\r\n    position[1] = radius * Math.random();\r\n    position[2] = radius * 2 * (Math.random() - 0.5);\r\n    // line end\r\n    position[3] = position[0];\r\n    position[4] = position[1];\r\n    position[5] = position[2];\r\n\r\n    // velocity start\r\n    velocity[0] = 0;\r\n    velocity[1] = 0;\r\n    velocity[2] = 0;\r\n    // velocity end\r\n    velocity[3] = 0;\r\n    velocity[4] = 0;\r\n    velocity[5] = 0;\r\n\r\n    geom.setAttribute(\r\n        'position',\r\n        new THREE.BufferAttribute(position, 3).setUsage(THREE.DynamicDrawUsage)\r\n    );\r\n    geom.setAttribute(\r\n        'velocity',\r\n        new THREE.BufferAttribute(velocity, 3).setUsage(THREE.DynamicDrawUsage)\r\n    );\r\n    geom.computeBoundingBox();\r\n\r\n    let material = new THREE.LineBasicMaterial({ color: mainColor });\r\n\r\n    // return the star\r\n    return [new THREE.Line(geom, material), timer];\r\n}\r\n\r\nfunction resetStar(star, timer, radius) {\r\n    let position = star.geometry.attributes.position.array;\r\n    let velocity = star.geometry.attributes.velocity.array;\r\n\r\n    // random starting position\r\n    // line start\r\n    position[0] = radius * 4 * (Math.random() - 0.5);\r\n    position[1] = 20 + (Math.random() - 0.5) * 5;\r\n    position[2] = -radius * Math.random();\r\n    // line end\r\n    position[3] = position[0];\r\n    position[4] = position[1];\r\n    position[5] = position[2];\r\n\r\n    // fixed target with random offset to determine trajectory and velocity\r\n    let targetX = (Math.random() - 0.5) * 250;\r\n    let targetY = (Math.random() + 0.5) * 10;\r\n    let targetZ = (Math.random() + 0.5) * 100;\r\n\r\n    let directionX = targetX - position[0];\r\n    let directionY = targetY - position[1];\r\n    let directionZ = targetZ - position[2];\r\n\r\n    // velocity start\r\n    velocity[0] = directionX * 0.015;\r\n    velocity[1] = directionY * 0.015;\r\n    velocity[2] = directionZ * 0.015;\r\n    // velocity end\r\n    velocity[3] = directionX * 0.01;\r\n    velocity[4] = directionY * 0.01;\r\n    velocity[5] = directionZ * 0.01;\r\n\r\n    star.material.color = new THREE.Color(mainColor);\r\n\r\n    timer.start();\r\n}\r\n\r\nfunction updateStar(star, timer, radius) {\r\n    let positions = star.geometry.attributes.position.array;\r\n    let velocity = star.geometry.attributes.velocity.array;\r\n\r\n    let life = timer.getElapsedTime();\r\n    let resetTime = 2;\r\n    let progress = life / resetTime;\r\n\r\n    // tail disappears\r\n    if (progress < 0.75) {\r\n        // line start\r\n        positions[0] += velocity[0];\r\n        positions[1] += velocity[1];\r\n        positions[2] += velocity[2];\r\n    }\r\n\r\n    // color ramp to death color\r\n    let color = mainColor.clone();\r\n    let deathColor = mainColor.clone();\r\n    deathColor = deathColor.getHSL(deathColor);\r\n    deathColor = deathColor.setHSL(deathColor.h, 1, 0);\r\n    color = color.lerp(deathColor, progress);\r\n    star.material.color = color;\r\n\r\n    // line end\r\n    positions[3] += velocity[3];\r\n    positions[4] += velocity[4];\r\n    positions[5] += velocity[5];\r\n\r\n    // reset call\r\n    if (progress > 1) {\r\n        resetStar(star, timer, radius);\r\n    }\r\n}\r\n\r\n// REACTIVE AUDIO\r\n\r\nlet sound = require('./Sound.js');\r\nlet audioCtx = sound.context;\r\n\r\nlet analyserLeft = audioCtx.createAnalyser();\r\nlet analyserRight = audioCtx.createAnalyser();\r\n\r\nanalyserLeft.fftSize = 256;\r\nanalyserLeft.smoothingTimeConstant = 0.7;\r\nanalyserLeft.minDecibels = -150;\r\nanalyserLeft.maxDecibels = -10;\r\n\r\nanalyserRight.fftSize = 256;\r\nanalyserRight.smoothingTimeConstant = 0.7;\r\nanalyserRight.minDecibels = -150;\r\nanalyserRight.maxDecibels = -10;\r\n\r\nlet bufferLength = analyserLeft.frequencyBinCount;\r\n\r\nTone.connect(sound.busLeft, analyserLeft);\r\nTone.connect(sound.busRight, analyserRight);\r\n\r\n// AUDIO VISUALIZER UPDATE\r\n\r\nfunction updateSpectrum(world, width, depth) {\r\n    let spectrumLeft = new Uint8Array(bufferLength);\r\n    let spectrumRight = new Uint8Array(bufferLength);\r\n    let spectrum = new Uint8Array(bufferLength * 2);\r\n\r\n    analyserLeft.getByteFrequencyData(spectrumLeft);\r\n    analyserRight.getByteFrequencyData(spectrumRight);\r\n\r\n    spectrum.set(spectrumRight.reverse());\r\n    spectrum.set(spectrumLeft, spectrumRight.length);\r\n\r\n    updateWorld(world, mainColor, width, depth, spectrum);\r\n}\r\n\r\nconst Background = (props) => {\r\n    let mount = useRef(null);\r\n\r\n    // INITIALIZATION\r\n    useEffect(() => {\r\n        // THREE RENDERER\r\n\r\n        let winWidth = mount.current.clientWidth;\r\n        let winHeight = mount.current.clientHeight;\r\n\r\n        let camera = new THREE.PerspectiveCamera(\r\n            100,\r\n            winWidth / winHeight,\r\n            1,\r\n            20000\r\n        );\r\n        camera.position.set(0, 5, -5);\r\n        let target = new THREE.Vector3(0, 0, 30);\r\n        camera.lookAt(target);\r\n\r\n        let renderer = new THREE.WebGLRenderer({ alpha: true });\r\n        renderer.setSize(winWidth, winHeight);\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n        let handleResize = () => {\r\n            winWidth = mount.current.clientWidth;\r\n            winHeight = mount.current.clientHeight;\r\n            renderer.setSize(winWidth, winHeight);\r\n            camera.aspect = winWidth / winHeight;\r\n            camera.updateProjectionMatrix();\r\n        };\r\n\r\n        //CONTROLS\r\n\r\n        let mouseX = 0;\r\n        let mouseY = 0;\r\n\r\n        let windowHalfX = winWidth / 2;\r\n        let windowHalfY = winHeight / 2;\r\n\r\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\r\n        function onDocumentMouseMove(event) {\r\n            mouseX = ((event.clientX - windowHalfX) / winWidth) * 2; //-1 to 1\r\n            mouseY = ((event.clientY - windowHalfY) / winHeight) * 2; //-1 to 1\r\n        }\r\n\r\n        // WORLD\r\n\r\n        let worldWidth = 50;\r\n        let worldDepth = bufferLength * 2;\r\n\r\n        let world = generateWorld(mainColor, worldWidth, worldDepth);\r\n        world.scale.set(200, 40, 200);\r\n        world.position.set(0, -10, 100);\r\n\r\n        scene.add(world);\r\n\r\n        // STAR FIELD\r\n\r\n        let numField = 1500;\r\n        let starFieldRadius = 300;\r\n\r\n        let starField = generateStarField(numField, starFieldRadius);\r\n        scene.add(starField);\r\n\r\n        // FALLING STARS\r\n\r\n        let starFallRadius = 10;\r\n\r\n        let starFall1 = generateStar(starFallRadius);\r\n        let star1 = starFall1[0];\r\n        let timer1 = starFall1[1];\r\n\r\n        let starFall2 = generateStar(starFallRadius);\r\n        let star2 = starFall2[0];\r\n        let timer2 = starFall2[1];\r\n\r\n        let starFall3 = generateStar(starFallRadius);\r\n        let star3 = starFall3[0];\r\n        let timer3 = starFall3[1];\r\n\r\n        let starFall4 = generateStar(starFallRadius);\r\n        let star4 = starFall4[0];\r\n        let timer4 = starFall4[1];\r\n\r\n        let starFall5 = generateStar(starFallRadius);\r\n        let star5 = starFall5[0];\r\n        let timer5 = starFall5[1];\r\n\r\n        // FLOOR\r\n\r\n        let floorGeom = new THREE.PlaneBufferGeometry(2000, 2000, 8, 8);\r\n        let floorMat = new THREE.MeshBasicMaterial({\r\n            //! floor color\r\n            color: 0x000000,\r\n            side: THREE.DoubleSide,\r\n        });\r\n        let floor = new THREE.Mesh(floorGeom, floorMat);\r\n        floor.rotateX(-Math.PI / 2);\r\n        floor.position.set(0, -8, 0);\r\n\r\n        scene.add(floor);\r\n\r\n        // ANIMATE\r\n\r\n        mount.current.appendChild(renderer.domElement);\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        function animate() {\r\n            audioCtx.resume();\r\n            camera.lookAt(target);\r\n\r\n            updateSpectrum(world, worldWidth, worldDepth);\r\n\r\n            // star fall handler\r\n            if (triggerStarFall == 1) {\r\n                async function startStarFall() {\r\n                    timer1.start();\r\n                    scene.add(star1);\r\n                    await sleep(500);\r\n                    timer2.start();\r\n                    scene.add(star2);\r\n                    await sleep(500);\r\n                    timer3.start();\r\n                    scene.add(star3);\r\n                    await sleep(500);\r\n                    timer4.start();\r\n                    scene.add(star4);\r\n                    await sleep(500);\r\n                    timer5.start();\r\n                    scene.add(star5);\r\n                }\r\n                startStarFall();\r\n                triggerStarFall = 0;\r\n            } else if (triggerStarFall == -1) {\r\n                async function endStarFall() {\r\n                    await sleep(2600);\r\n                    scene.remove(star1);\r\n                    scene.remove(star2);\r\n                    scene.remove(star3);\r\n                    scene.remove(star4);\r\n                    scene.remove(star5);\r\n                    resetStar(star1, timer1, starFallRadius);\r\n                    resetStar(star2, timer2, starFallRadius);\r\n                    resetStar(star3, timer3, starFallRadius);\r\n                    resetStar(star4, timer4, starFallRadius);\r\n                    resetStar(star5, timer5, starFallRadius);\r\n                }\r\n                endStarFall();\r\n\r\n                timer1.stop();\r\n                timer2.stop();\r\n                timer3.stop();\r\n                timer4.stop();\r\n                timer5.stop();\r\n                triggerStarFall = 0;\r\n            } else {\r\n                updateStar(star1, timer1, starFallRadius);\r\n                updateStar(star2, timer2, starFallRadius);\r\n                updateStar(star3, timer3, starFallRadius);\r\n                updateStar(star4, timer4, starFallRadius);\r\n                updateStar(star5, timer5, starFallRadius);\r\n            }\r\n\r\n            // color update handler\r\n            if (colorNeedsUpdate == 1) {\r\n                updateStarField(numField, starFieldRadius, starField);\r\n                colorNeedsUpdate = 0;\r\n            }\r\n\r\n            // controls\r\n            if (mouseY > 0) {\r\n                starField.rotation.x =\r\n                    starField.rotation.x - mouseY * 0.0002 + 0.0001;\r\n            } else {\r\n                starField.rotation.x =\r\n                    starField.rotation.x - mouseY * 0.0002 - 0.0001;\r\n            }\r\n            if (mouseX > 0) {\r\n                starField.rotation.y =\r\n                    starField.rotation.y + mouseX * 0.0002 + 0.0001;\r\n                starField.rotation.z =\r\n                    starField.rotation.z + mouseX * 0.0002 + 0.0001;\r\n            } else {\r\n                starField.rotation.y =\r\n                    starField.rotation.y + mouseX * 0.0002 - 0.0001;\r\n                starField.rotation.z =\r\n                    starField.rotation.z + mouseX * 0.0002 - 0.0001;\r\n            }\r\n\r\n            world.geometry.attributes.position.needsUpdate = true;\r\n            world.geometry.attributes.color.needsUpdate = true;\r\n\r\n            starField.geometry.attributes.position.needsUpdate = true;\r\n            starField.geometry.attributes.color.needsUpdate = true;\r\n\r\n            star1.geometry.attributes.position.needsUpdate = true;\r\n            star1.geometry.attributes.velocity.needsUpdate = true;\r\n            star1.material.color.needsUpdate = true;\r\n\r\n            star2.geometry.attributes.position.needsUpdate = true;\r\n            star2.geometry.attributes.velocity.needsUpdate = true;\r\n            star2.material.color.needsUpdate = true;\r\n\r\n            star3.geometry.attributes.position.needsUpdate = true;\r\n            star3.geometry.attributes.velocity.needsUpdate = true;\r\n            star3.material.color.needsUpdate = true;\r\n\r\n            star4.geometry.attributes.position.needsUpdate = true;\r\n            star4.geometry.attributes.velocity.needsUpdate = true;\r\n            star4.material.color.needsUpdate = true;\r\n\r\n            star5.geometry.attributes.position.needsUpdate = true;\r\n            star5.geometry.attributes.velocity.needsUpdate = true;\r\n            star5.material.color.needsUpdate = true;\r\n\r\n            requestAnimationFrame(animate);\r\n            renderer.render(scene, camera);\r\n        }\r\n        animate();\r\n    }, []); // never update, executed one time only\r\n\r\n    // COLOR PALETTE MANAGEMENT\r\n    useEffect(() => {\r\n        mainColor = mainColor.getHSL(mainColor);\r\n        mainColor = mainColor.setHSL((props.color + 0.1) / 360, 0.7, 0.5);\r\n        colorNeedsUpdate = 1;\r\n    }, [props.color]); // update when prop changes\r\n\r\n    // TRIGGER STAR FALL\r\n    useEffect(() => {\r\n        if (props.isPlaying == 0) {\r\n            triggerStarFall = -1;\r\n        } else if (props.isPlaying == 1) {\r\n            triggerStarFall = 1;\r\n        }\r\n    }, [props.isPlaying]); // update when prop changes\r\n\r\n    return <StyledBackground className={props.className} ref={mount} />;\r\n};\r\n\r\nexport default Background;\r\n","const themes = {\r\n    dark: {\r\n        background: 'rgb(200, 100, 30)',\r\n        panelColor: 'rgba(255, 255, 255, 0.4)',\r\n        buttonColor: 'rgba(255, 255, 255, 0.6)',\r\n        border: '2px solid rgba(220, 220, 220, 0.2)',\r\n    },\r\n\r\n    orange: {\r\n        background: 'rgb(200, 100, 30)',\r\n        panelColor: 'rgba(255, 255, 255, 0.4)',\r\n        buttonColor: 'rgba(255, 255, 255, 0.6)',\r\n        border: '2px solid rgba(220, 220, 220, 0.2)',\r\n    },\r\n};\r\n\r\nexport default themes;\r\n","const map = function(){\r\n    return {\r\n        pieceDuration: Number, //Total piece duration\r\n        segmentDuration: Number, //Total segment duration\r\n        pausePresence: Number, //Pause probability (0.00 - 1.00)\r\n        staticScaleAssociation: Boolean, //Classic (true) or jazzy (false) modes\r\n        segments: [\r\n            {\r\n                directionality: String,\r\n                transform: {\r\n                    method: Object,\r\n                    vars: Object\r\n                },\r\n                chord: {\r\n                    tonic: String,\r\n                    color: String,\r\n                    notes: Array,\r\n                },\r\n                diatonicScale: {\r\n                    name: String,\r\n                    tonality: Number,\r\n                    cromaticOffset: Number,\r\n                    notes: Array,\r\n                },\r\n                //Musical Object\r\n                objects: [\r\n                    {\r\n                        type: String,\r\n                        onsetTime: Number,\r\n                        duration: Number,\r\n                        pitch: Number\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nexport function piece(){\r\n    let piece = map()\r\n    piece.segments = []\r\n    return piece\r\n}\r\n\r\nexport function segment(){\r\n    let segment = map().segments[0]\r\n    segment.objects = []\r\n    return segment\r\n}\r\n\r\n\r\nexport function object(){\r\n    return map().segments[0].objects[0]\r\n}\r\n\r\nexport function chord(){\r\n    let chord = map().segments[0].chord\r\n    chord.notes = []\r\n    return chord\r\n}\r\n\r\nexport function diatonicScale(){\r\n    let scale = map().segments[0].diatonicScale\r\n    scale.notes = []\r\n    return scale\r\n}","import * as pieceProto from '../piece.prototype.js';\r\n\r\n/*Segmentation class. \r\nThis class manages the subdivision of the piece in N temoporal windows\r\n*/\r\nexport class Segmentation {\r\n    constructor(piece, chords) {\r\n        this.chords = chords;\r\n        this.piece = piece;\r\n    }\r\n    \r\n    //Compute piece total duration and temporal windows durations. \r\n    //Generate segment prototype from total number of segments.\r\n    generate() {\r\n        this.piece.pieceDuration = this.calcPieceDuration();\r\n        this.piece.segmentDuration = this.calcSegmentDuration();\r\n\r\n        let segmentQty = this.piece.pieceDuration / this.piece.segmentDuration;\r\n\r\n        for (let i = 0; i < segmentQty; i++) {\r\n            //Getting segment prototype and push into the piece object for each segment\r\n            this.piece.segments.push(pieceProto.segment());\r\n        }\r\n\r\n        return this.piece;\r\n    }\r\n\r\n    //Compute piece total duration\r\n    calcPieceDuration() {\r\n        let sum = 0.0;\r\n        for (let i = 0; i < this.chords.length; i++) {\r\n            sum = sum + this.chords[i].duration;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    //Compute temporal windows durations. \r\n    calcSegmentDuration() {\r\n        let calcgcd = function (a, b) {\r\n            if (!b) return a;\r\n            return calcgcd(b, a % b);\r\n        };\r\n\r\n        let gcd = this.chords[0].duration;\r\n\r\n        if (this.chords.length > 1) {\r\n            for (let i = 1; i < this.chords.length; i++) {\r\n                gcd = calcgcd(gcd, this.chords[i].duration);\r\n            }\r\n        }\r\n\r\n        let factors = [];\r\n        for (let i = 1; i <= gcd; i++) {\r\n            if (gcd % i === 0) {\r\n                factors.push(i);\r\n            }\r\n        }\r\n\r\n        let rand = Math.random() * factors.length;\r\n        rand = Math.floor(rand);\r\n\r\n        return factors[rand];\r\n    }\r\n}\r\n","import * as Utils from '../utils.js';\r\n\r\n/*This class computes a sign (+,-,0) assiciated to each window with some probabilities. \r\nA sign describes the melodic contour of each window. For a positive sign, a pitch greater than \r\na moving average is allowed (for negative, vice versa). For a neutral sign, a pitch has to\r\nbe within a range of +2/-2 diatonic steps.\r\n*/\r\nexport class Directionality {\r\n    constructor(piece) {\r\n        this.piece = piece;\r\n    }\r\n\r\n    //Sign of the segments\r\n    generate() {\r\n        let history = 2;\r\n        let queue = [];\r\n\r\n        for (let i = 0; i < this.piece.segments.length; i++) {\r\n            //Reset queue every 3 iterations\r\n            if (i % 3 === 0) {\r\n                queue = [];\r\n            }\r\n\r\n            let directions = ['+', '-', '0'];\r\n\r\n            //Get difference between directions and queue\r\n            let availableChoices = directions.filter((x) => !queue.includes(x));\r\n\r\n            let choice = null;\r\n\r\n            while (!availableChoices.includes(choice)) {\r\n                //If first window\r\n                if (i === 0) {\r\n                    choice = Utils.pickState([\r\n                        ['+', 60],\r\n                        ['-', 20],\r\n                        ['0', 20],\r\n                    ]);\r\n                } else {\r\n                    choice = Utils.pickState([\r\n                        ['+', (1 / 3) * 100],\r\n                        ['-', (1 / 3) * 100],\r\n                        ['0', (1 / 3) * 100],\r\n                    ]);\r\n                }\r\n            }\r\n\r\n            if (queue.length === history) {\r\n                queue.shift();\r\n            }\r\n\r\n            queue.push(choice);\r\n            this.piece.segments[i].directionality = choice;\r\n        }\r\n\r\n        return this.piece;\r\n    }\r\n}\r\n","//Constants and mappings used for melody generation\r\n\r\nexport const colorToScale = {\r\n    'Major': ['ionian', 'lydian', 'mixolydian'],\r\n    'minor': ['dorian', 'phrygian', 'aeolian'],\r\n    'Maj7': ['ionian', 'lydian'],\r\n    'minor7': ['dorian', 'phrygian', 'aeolian'],\r\n    '7': ['mixolydian'],\r\n    'm7b5': ['locrian'],\r\n}\r\n\r\nexport const colorToStaticScale = {\r\n    'Major': ['ionian'],\r\n    'minor': ['aeolian'],\r\n    'Maj7': ['ionian'],\r\n    'minor7': ['aeolian'],\r\n    '7': ['mixolydian'],\r\n    'm7b5': ['locrian'],\r\n}\r\n\r\n\r\nexport const scaleNumber = {\r\n    ionian:     0,\r\n    dorian:     1,\r\n    phrygian:   2,\r\n    lydian:     3,\r\n    mixolydian: 4,\r\n    aeolian:    5,\r\n    locrian:    6\r\n}\r\n\r\nexport const scalePattern = {\r\n    ionian:     [2, 2, 1, 2, 2, 2, 1],\r\n    dorian:     [2, 1, 2, 2, 2, 1, 2],\r\n    phrygian:   [1, 2, 2, 2, 1, 2, 2],\r\n    lydian:     [2, 2, 2, 1, 2, 2, 1],\r\n    mixolydian: [2, 2, 1, 2, 2, 1, 2],\r\n    aeolian:    [2, 1, 2, 2, 1, 2, 2],\r\n    locrian:    [1, 2, 2, 1, 2, 2, 2]\r\n}\r\n\r\nexport const cromaticToDiatonic = {\r\n    0: 0,\r\n    1: 0,\r\n    2: 1,\r\n    3: 1,\r\n    4: 2,\r\n    5: 3,\r\n    6: 3,\r\n    7: 4,\r\n    8: 4,\r\n    9: 5,\r\n    10: 5,\r\n    11: 6\r\n}\r\n\r\nexport const diatonicToCromaticOffset = function(diatonicNote, cromaticNote){\r\n    let map = {\r\n        0: {0: 1, 1: 2},\r\n        1: {2: 1, 3: 2},\r\n        2: {4: 1},\r\n        3: {5:1, 6:2},\r\n        4: {7: 1, 8: 2},\r\n        5: {9: 1, 10: 2},\r\n        6: {11: 1}\r\n    }\r\n    return map[diatonicNote][cromaticNote]\r\n}\r\n\r\nexport const diatonicToCromaticNote = function(diatonicNote, offset){\r\n    let map = {\r\n        1:{\r\n            0: 0,\r\n            1: 2,\r\n            2: 4,\r\n            3: 5,\r\n            4: 7,\r\n            5: 9,\r\n            6: 11\r\n        },\r\n        2:{\r\n            0: 1,\r\n            1: 3,\r\n            2: 4,\r\n            3: 6,\r\n            4: 8,\r\n            5: 10,\r\n            6: 11,\r\n        }\r\n    }\r\n    return map[offset][diatonicNote]\r\n}","import * as Utils from '../utils.js';\r\nimport * as pieceProto from '../piece.prototype.js';\r\nimport * as Const from './Pitch/pitch.constants.js';\r\n\r\n//Module calc feature\r\nNumber.prototype.mod = function (n) {\r\n    return ((this % n) + n) % n;\r\n};\r\n\r\n/*\r\nCompute for each temporal window (also called \"segment\") the undelying chord and \r\nthe associated diatonic modal scale. This is carried out by mode detection (we pick \r\nthe scale associated to the closest tonality with respect to the previous one). \r\nFinally generate an array with subsampled MIDI numbers, only those within the picked modal scale.\r\nThis array (called \"Diatonic array\") will be used to pick the pitches to be generated.\r\n*/\r\nexport class ChordScaleTonality {\r\n    constructor(piece, chords) {\r\n        this.piece = piece;\r\n        this.chords = chords;\r\n    }\r\n\r\n    generate() {\r\n        let segmentChordData = this.calcSegmentChordData(this.piece.staticScaleAssociation);\r\n        for (let i = 0; i < this.piece.segments.length; i++) {\r\n            this.piece.segments[i].chord = segmentChordData[i].chord;\r\n            this.piece.segments[i].diatonicScale =\r\n                segmentChordData[i].diatonicScale;\r\n        }\r\n        return this.piece;\r\n    }\r\n\r\n    calcDiatonicScale(chord, previousScale, scalesAssociated) {\r\n        let diatonicScale = pieceProto.diatonicScale();\r\n\r\n        let note = Utils.convert(Utils.chordNotes(chord))[0];\r\n\r\n        let firstCromaticNote = note % 12;\r\n        let diatonicNote = Const.cromaticToDiatonic[firstCromaticNote];\r\n        diatonicScale.cromaticOffset = Const.diatonicToCromaticOffset(\r\n            diatonicNote,\r\n            firstCromaticNote\r\n        );\r\n\r\n        if (previousScale == null) {\r\n            //FIRST CHORD: If scalesAssociated has 'ionian' we will pick ionian\r\n            if (scalesAssociated.includes('ionian')) {\r\n                diatonicScale.name = 'ionian';\r\n            } else {\r\n                diatonicScale.name = Utils.randItem(scalesAssociated);\r\n            }\r\n\r\n            //Calc tonality\r\n            let scaleIndex = Const.scaleNumber[diatonicScale.name];\r\n            diatonicScale.tonality = (diatonicNote - scaleIndex).mod(7);\r\n        } else {\r\n            //OTHER CHORDS:\r\n            //convert previous tonality to cromatic\r\n            let previousTonality = Const.diatonicToCromaticNote(\r\n                previousScale.tonality,\r\n                previousScale.cromaticOffset\r\n            );\r\n\r\n            let scales = [];\r\n            let fifthCircle = [0, 7, 2, 9, 4, 11, 6, 1, 8, 3, 10, 5];\r\n\r\n            for (let i = 0; i < scalesAssociated.length; i++) {\r\n                //Calc tonalities of associated scales\r\n                let scaleIndex = Const.scaleNumber[scalesAssociated[i]];\r\n                scales.push({\r\n                    name: scalesAssociated[i],\r\n                    tonality: (diatonicNote - scaleIndex).mod(7),\r\n                    index: null,\r\n                });\r\n            }\r\n\r\n            let previousTonalityIndex = null;\r\n\r\n            //Get indexes of previousTonality and current tonalities\r\n            for (let i = 0; i < fifthCircle.length; i++) {\r\n                if (fifthCircle[i] === previousTonality) {\r\n                    previousTonalityIndex = i;\r\n                }\r\n\r\n                for (let j = 0; j < scales.length; j++) {\r\n                    let cromaticTonality = Const.diatonicToCromaticNote(\r\n                        scales[j].tonality,\r\n                        diatonicScale.cromaticOffset\r\n                    );\r\n                    if (fifthCircle[i] === cromaticTonality) {\r\n                        scales[j].index = i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Calc minimun distance of indexes\r\n            let minDistance = null;\r\n            let minScale = null;\r\n            for (let i = 0; i < scales.length; i++) {\r\n                let distance = Math.min(\r\n                    (previousTonalityIndex - scales[i].index).mod(12),\r\n                    (scales[i].index - previousTonalityIndex).mod(12)\r\n                );\r\n                if (minDistance == null || distance < minDistance) {\r\n                    minDistance = distance;\r\n                    minScale = scales[i];\r\n                }\r\n            }\r\n\r\n            diatonicScale.name = minScale.name;\r\n            diatonicScale.tonality = minScale.tonality;\r\n        }\r\n\r\n        diatonicScale.notes = this.calcDiatonicArray(\r\n            firstCromaticNote,\r\n            Const.scalePattern[diatonicScale.name],\r\n            7\r\n        );\r\n\r\n        return diatonicScale;\r\n    }\r\n\r\n    //Chord-segment association\r\n    calcSegmentChordData(staticScaleAssociation = false) {\r\n        let segmentChords = [];\r\n        for (let i = 0; i < this.chords.length; i++) {\r\n            let chordSegs =\r\n                this.chords[i].duration / this.piece.segmentDuration;\r\n            let previousScale = null;\r\n            if (segmentChords.length > 0) {\r\n                previousScale =\r\n                    segmentChords[segmentChords.length - 1].diatonicScale;\r\n            }\r\n\r\n            let diatonicScaleObj = null;\r\n\r\n            \r\n            if(staticScaleAssociation){\r\n                //Classic mode: static table look-up\r\n                diatonicScaleObj = this.calcDiatonicScale(\r\n                    this.chords[i],\r\n                    null,\r\n                    Const.colorToStaticScale[this.chords[i].color]\r\n                );\r\n            }else{\r\n                //Pro jazz mode: mode detection\r\n                diatonicScaleObj = this.calcDiatonicScale(\r\n                    this.chords[i],\r\n                    previousScale,\r\n                    Const.colorToScale[this.chords[i].color]\r\n                );\r\n            }\r\n\r\n            \r\n            //Assigns each segments to its own chord\r\n            for (let j = 0; j < chordSegs; j++) {\r\n                let chordObj = pieceProto.chord();\r\n                chordObj.tonic = this.chords[i].tonic;\r\n                chordObj.color = this.chords[i].color;\r\n                chordObj.notes = Utils.convert(\r\n                    Utils.chordNotes(this.chords[i])\r\n                );\r\n                segmentChords.push({\r\n                    chord: chordObj,\r\n                    diatonicScale: diatonicScaleObj,\r\n                });\r\n            }\r\n        }\r\n\r\n        return segmentChords;\r\n    }\r\n\r\n    calcDiatonicArray(note, pattern, octaves = 1) {\r\n        let scale = [note];\r\n        for (let j = 0; j < octaves; j++) {\r\n            for (let i = 0; i < pattern.length; i++) {\r\n                note += pattern[i];\r\n                scale.push(note);\r\n            }\r\n        }\r\n        return scale;\r\n    }\r\n}\r\n","//Repetition of same segment\r\nexport default class Repetition{\r\n    constructor(piece, segmentIndex, motif){\r\n        this.motif = motif\r\n        this.piece = piece\r\n        this.segment = piece.segments[segmentIndex]\r\n        this.previousSegment = (segmentIndex > 0) ? piece.segments[segmentIndex-1] : null\r\n        this.segmentIndex = segmentIndex\r\n        \r\n        this.generateTiming()\r\n        this.generatePitch()\r\n        return this.segment\r\n    }\r\n\r\n    //Generation of durations\r\n    generateTiming(){\r\n        \r\n        for(let i in this.motif.objects){\r\n            this.segment.objects.push(\r\n                this.motif.objects[i]\r\n            )\r\n        }\r\n    }\r\n    \r\n    //Generation of pitches\r\n    generatePitch(){\r\n       return\r\n    }\r\n}","//Computation of pitches and rhythms in reverse\r\nexport default class Retrogradation{\r\n    constructor(piece, segmentIndex, motif){\r\n        this.piece = piece\r\n        this.motif = motif\r\n        this.segment = piece.segments[segmentIndex]\r\n        this.previousSegment = (segmentIndex > 0) ? piece.segments[segmentIndex-1] : null\r\n        this.segmentIndex = segmentIndex\r\n        \r\n        this.generateTiming()\r\n        this.generatePitch()\r\n        return this.segment\r\n    }\r\n\r\n    //Generation of durations\r\n    generateTiming(){\r\n        for(let i=0; i<this.motif.objects.length; i++){\r\n            this.segment.objects.push(\r\n                this.motif.objects[(this.motif.objects.length-1) - i]\r\n            )\r\n        }\r\n    }\r\n    \r\n    //Generation of pitches\r\n    generatePitch(){\r\n       return\r\n    }\r\n}","import * as Utils from '../../utils.js';\r\n\r\n/*\r\nPitch filters are defined in this section. \r\n*/\r\n\r\n//Filter 4th octave (computing the 1st note)\r\nexport function startingOctave(diatonicArray) {\r\n    let output = [];\r\n\r\n    for (let i = 0; i < diatonicArray.length; i++) {\r\n        if (diatonicArray[i] >= 60 && diatonicArray[i] < 72) {\r\n            output.push(diatonicArray[i]);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\n//Filter notes in specifiedNotes (all octaves included)\r\nexport function specifiedNotes(diatonicArray, specifiedNotes) {\r\n    let output = [];\r\n\r\n    for (let i = 0; i < diatonicArray.length; i++) {\r\n        for (let n = 0; n < specifiedNotes.length; n++) {\r\n            let note1 = specifiedNotes[n] % 12;\r\n            let note2 = diatonicArray[i] % 12;\r\n\r\n            //console.log(note1 + \" \" + note2)\r\n            if (note1 === note2) {\r\n                output.push(diatonicArray[i]);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\n//Computing the Average of <precNotes> and then filter the <diatonicArray>\r\nexport function melodicCountour(diatonicArray, precNotes, direction) {\r\n    let sum = 0;\r\n    for (let i = 0; i < precNotes.length; i++) {\r\n        sum += precNotes[i];\r\n    }\r\n    let avg = sum / precNotes.length;\r\n\r\n    let output = [];\r\n    //Get nearest note of diatonicArray\r\n    let nearestNote = Utils.nearestNote(\r\n        diatonicArray,\r\n        precNotes[precNotes.length - 1]\r\n    );\r\n\r\n    if (direction === '0') {\r\n        //Search for last note of <precNotes> and pick next 2 notes or prev 2 notes\r\n        for (let i = 0; i < diatonicArray.length; i++) {\r\n            if (diatonicArray[i] === nearestNote) {\r\n                if (i - 2 >= 0) {\r\n                    output.push(diatonicArray[i - 2]);\r\n                    output.push(diatonicArray[i - 1]);\r\n                }\r\n\r\n                output.push(diatonicArray[i]);\r\n\r\n                if (i + 2 < diatonicArray.length) {\r\n                    output.push(diatonicArray[i + 1]);\r\n                    output.push(diatonicArray[i + 2]);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 0; i < diatonicArray.length; i++) {\r\n            if (direction === '+')\r\n                if (diatonicArray[i] >= avg) output.push(diatonicArray[i]);\r\n            if (direction === '-')\r\n                if (diatonicArray[i] <= avg) output.push(diatonicArray[i]);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\n//Max local range filter\r\nexport function localRange(diatonicArray, note, direction) {\r\n    let output = [];\r\n    let steps = 4;\r\n\r\n    for (let i = 0; i < diatonicArray.length; i++) {\r\n        if (direction === '+' && diatonicArray[i] === note) {\r\n            for (let j = 0; j < steps + 1; j++) {\r\n                if (i + j < diatonicArray.length) {\r\n                    output.push(diatonicArray[i + j]);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n\r\n        if (direction === '-' && diatonicArray[i] === note) {\r\n            for (let f = i - steps; f <= i; f++) {\r\n                if (f >= 0) {\r\n                    output.push(diatonicArray[f]);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (output.length === 0) {\r\n        return [Utils.nearestNote(diatonicArray, note)];\r\n    } else {\r\n        return output;\r\n    }\r\n}\r\n\r\n//Max global range filter\r\nexport function globalRange(diatonicArray, min, max, offset = 16) {\r\n    let output = [];\r\n    for (let i = 0; i < diatonicArray.length; i++) {\r\n        if (\r\n            diatonicArray[i] <= min + offset &&\r\n            diatonicArray[i] >= max - offset\r\n        ) {\r\n            output.push(diatonicArray[i]);\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\n//Set NaN where diatonicArray are not notesToKeep notes\r\nexport function NaNclean(diatonicArray, notesToKeep) {\r\n    let output = [];\r\n\r\n    for (let i = 0; i < diatonicArray.length; i++) {\r\n        if (notesToKeep.includes(diatonicArray[i])) {\r\n            output.push(diatonicArray[i]);\r\n        } else {\r\n            output.push(NaN);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import * as Utils from '../../utils.js';\r\nimport * as Filters from './pitch.filters.js';\r\nimport * as Const from './pitch.constants.js';\r\n\r\n\r\n/* Picks and applies pitch filters in order to obtain pitches elegible for melody generation\r\nFilters are declared in pitch.filter.js\r\n*/\r\n\r\nexport class Pitch {\r\n    constructor(segment) {\r\n        this.segment = segment;\r\n    }\r\n    generate(startingNote = null) {\r\n        let debug = {};\r\n        let diatonicPitches = [];\r\n        let minPitch = null;\r\n        let maxPitch = null;\r\n        let localRangeDirection = null;\r\n\r\n        for (let i in this.segment.objects) {\r\n            if (this.segment.objects[i].type === 'pause') {\r\n                delete this.segment.objects[i].pitch;\r\n                continue;\r\n            }\r\n\r\n            let filteredNotes = [];\r\n            for (let j = 0; j < this.segment.diatonicScale.notes.length; j++) {\r\n                filteredNotes.push(this.segment.diatonicScale.notes[j]);\r\n            }\r\n\r\n            // Filter chord notes on beat (all octaves)\r\n            if (i % 8 === 0) {\r\n                if (diatonicPitches.length === 0) {\r\n                    debug.topFilteredNotes = filteredNotes;\r\n                    debug.chordNotes = this.segment.chord.notes;\r\n                }\r\n\r\n                //Convert chord notes\r\n                let diatonicChordNotes = [];\r\n                for (let n = 0; n < this.segment.chord.notes.length; n++) {\r\n                    let note = this.segment.chord.notes[n];\r\n                    diatonicChordNotes.push(Const.cromaticToDiatonic[note]);\r\n                }\r\n\r\n                filteredNotes = Filters.specifiedNotes(\r\n                    filteredNotes,\r\n                    diatonicChordNotes\r\n                );\r\n\r\n                if (diatonicPitches.length === 0) {\r\n                    debug.secondFilteredNotes = diatonicChordNotes;\r\n                }\r\n            }\r\n\r\n            // Filter melodic contour\r\n            if (diatonicPitches.length > 0) {\r\n                filteredNotes = Filters.melodicCountour(\r\n                    filteredNotes,\r\n                    diatonicPitches,\r\n                    this.segment.directionality\r\n                );\r\n\r\n                debug.melodicContour = Filters.NaNclean(\r\n                    this.segment.diatonicScale.notes,\r\n                    filteredNotes\r\n                );\r\n            }\r\n\r\n            // Filter local range\r\n            if (diatonicPitches.length > 0) {\r\n                //CONSTR: For first note sign of localRange = segment.direction\r\n                if (\r\n                    diatonicPitches.length === 1 &&\r\n                    this.segment.directionality !== '0'\r\n                ) {\r\n                    localRangeDirection = this.segment.directionality;\r\n                } else {\r\n                    localRangeDirection = Utils.randItem(['+', '-']);\r\n                }\r\n\r\n                debug.localRangeDirection = localRangeDirection;\r\n\r\n                filteredNotes = Filters.localRange(\r\n                    filteredNotes,\r\n                    diatonicPitches[diatonicPitches.length - 1],\r\n                    localRangeDirection\r\n                );\r\n\r\n                debug.localRange = Filters.NaNclean(\r\n                    this.segment.diatonicScale.notes,\r\n                    filteredNotes\r\n                );\r\n            }\r\n\r\n            // Filter global range\r\n            if (diatonicPitches.length > 0) {\r\n                filteredNotes = Filters.globalRange(\r\n                    filteredNotes,\r\n                    minPitch,\r\n                    maxPitch\r\n                );\r\n\r\n                debug.globalRange = Filters.NaNclean(\r\n                    this.segment.diatonicScale.notes,\r\n                    filteredNotes\r\n                );\r\n            }\r\n\r\n            let NOTE = null;\r\n\r\n            if (diatonicPitches.length === 0) {\r\n                debug.firstFilteredNotes = filteredNotes;\r\n\r\n                if (startingNote == null) {\r\n                    filteredNotes = Filters.startingOctave(filteredNotes);\r\n                } else {\r\n                    let diatonicStartingPitch = startingNote % 12;\r\n                    let diatonicStartingOctave =\r\n                        Math.floor(startingNote / 12) * 7;\r\n                    let diatonicStartingNote =\r\n                        diatonicStartingPitch + diatonicStartingOctave + 28;\r\n\r\n                    filteredNotes = [\r\n                        Utils.nearestNote(filteredNotes, diatonicStartingNote),\r\n                    ];\r\n                }\r\n\r\n                NOTE = Utils.randItem(filteredNotes);\r\n                minPitch = NOTE;\r\n                maxPitch = NOTE;\r\n                debug.firstNote = NOTE;\r\n            } else if (filteredNotes.length === 1) {\r\n                NOTE = filteredNotes[0];\r\n                if (NOTE < minPitch) minPitch = NOTE;\r\n                if (NOTE > maxPitch) maxPitch = NOTE;\r\n            } else {\r\n                let lastnote = diatonicPitches[diatonicPitches.length - 1];\r\n                let lastNotePosition = null;\r\n                let cleanedDiatonic = Filters.NaNclean(\r\n                    this.segment.diatonicScale.notes,\r\n                    filteredNotes\r\n                );\r\n                for (let n = 0; n < cleanedDiatonic.length; n++) {\r\n                    if (cleanedDiatonic[n] === lastnote) {\r\n                        lastNotePosition = n;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //Final noteset\r\n                let noteSet = [];\r\n                if (localRangeDirection === '+') {\r\n                    for (let r = 0; r < 5; r++) {\r\n                        noteSet.push(cleanedDiatonic[lastNotePosition + r]);\r\n                    }\r\n                } else if (localRangeDirection === '-') {\r\n                    for (let j = 0; j < 5; j++) {\r\n                        noteSet.push(cleanedDiatonic[lastNotePosition - j]);\r\n                    }\r\n                }\r\n\r\n                //Pick note\r\n                let probsProto = [\r\n                    [noteSet[0], 10],\r\n                    [noteSet[1], 60],\r\n                    [noteSet[2], 15],\r\n                    [noteSet[3], 10],\r\n                    [noteSet[4], 5],\r\n                ];\r\n\r\n                let probs = [];\r\n                let sumprobs = 0;\r\n\r\n                //exclude nans\r\n                for (let n = 0; n < probsProto.length; n++) {\r\n                    if (!Number.isNaN(probsProto[n][0])) {\r\n                        if (probsProto[n][0] != null) {\r\n                            probs.push(probsProto[n]);\r\n                            sumprobs += probsProto[n][1];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //Adjust probs\r\n                for (let p = 0; p < probs.length; p++) {\r\n                    probs[p][1] = (probs[p][1] / sumprobs) * 100;\r\n                }\r\n\r\n                debug.probs = probs;\r\n\r\n                NOTE = Utils.pickState(probs);\r\n\r\n                if (NOTE < minPitch) minPitch = NOTE;\r\n                if (NOTE > maxPitch) maxPitch = NOTE;\r\n            }\r\n\r\n            diatonicPitches.push(NOTE);\r\n            debug.diatonicPitches = diatonicPitches;\r\n\r\n            this.segment.objects[i].pitch = NOTE\r\n        }\r\n\r\n        //BUG WORKAROUND PATCH: prevent NaN pitches\r\n        for (let w = 0; w < this.segment.objects.length; w++) {\r\n            if (this.segment.objects[w].type === 'pause') continue;\r\n\r\n            if (Number.isNaN(this.segment.objects[w].pitch)) {\r\n                console.warn('NaN fixed');\r\n                delete this.segment.objects[w].pitch;\r\n                this.segment.objects[w].type = 'pause';\r\n            }\r\n\r\n            if (this.segment.objects[w].pitch == null) {\r\n                console.log(this.segment.objects[w]);\r\n                console.warn('Null fixed');\r\n                delete this.segment.objects[w].pitch;\r\n                this.segment.objects[w].type = 'pause';\r\n            }\r\n        }\r\n\r\n        return this.segment;\r\n    }\r\n}\r\n","import { Pitch } from '../Pitch/Pitch.js';\r\nimport * as pieceProto from '../../piece.prototype.js';\r\n\r\n//Pitch variation transformation. Same temporal features, new generated pitches\r\nexport default class PitchVariation {\r\n    constructor(piece, segmentIndex, motif) {\r\n        this.piece = piece;\r\n        this.motif = motif;\r\n        this.segment = piece.segments[segmentIndex];\r\n        this.previousSegment =\r\n            segmentIndex > 0 ? piece.segments[segmentIndex - 1] : null;\r\n        this.segmentIndex = segmentIndex;\r\n\r\n        this.generateTiming();\r\n        this.generatePitch();\r\n        return this.segment;\r\n    }\r\n\r\n    //Generation of durations\r\n    generateTiming() {\r\n        for (let i = 0; i < this.motif.objects.length; i++) {\r\n            let obj = pieceProto.object();\r\n            obj.type = this.motif.objects[i].type;\r\n            obj.duration = this.motif.objects[i].duration;\r\n            this.segment.objects.push(obj);\r\n        }\r\n    }\r\n\r\n    //Generation of pitches\r\n    generatePitch() {\r\n        if (this.previousSegment == null) {\r\n            this.segment = new Pitch(this.segment).generate();\r\n        } else {\r\n            let lastPitch = null;\r\n            for (let i = 0; i < this.previousSegment.objects; i++) {\r\n                if (this.previousSegment.objects[i].type === 'pause') continue;\r\n                lastPitch = this.previousSegment.objects[i].pitch;\r\n            }\r\n            this.segment = new Pitch(this.segment).generate(lastPitch);\r\n        }\r\n    }\r\n}\r\n","import * as pieceProto from '../../piece.prototype.js';\r\n\r\n//Shuffles temporal features, keeps the same pitches.\r\nexport default class TemporalVariation {\r\n    constructor(piece, segmentIndex, motif) {\r\n        this.piece = piece;\r\n        this.motif = motif;\r\n        this.segment = piece.segments[segmentIndex];\r\n        this.previousSegment =\r\n            segmentIndex > 0 ? piece.segments[segmentIndex - 1] : null;\r\n        this.segmentIndex = segmentIndex;\r\n\r\n        this.generateTiming();\r\n        this.generatePitch();\r\n        return this.segment;\r\n    }\r\n\r\n    //Generation of Durations\r\n    generateTiming() {\r\n        let durations = [];\r\n\r\n        for (let i = 0; i < this.motif.objects.length; i++) {\r\n            durations.push(this.motif.objects[i].duration);\r\n        }\r\n\r\n        //Shuffle duration in-place using Durstenfeld shuffle algorithm \r\n        for (var i = durations.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = durations[i];\r\n            durations[i] = durations[j];\r\n            durations[j] = temp;\r\n        }\r\n\r\n        for (let i = 0; i < this.motif.objects.length; i++) {\r\n            let obj = pieceProto.object();\r\n            obj.type = this.motif.objects[i].type;\r\n            obj.duration = durations[i];\r\n            this.segment.objects.push(obj);\r\n        }\r\n    }\r\n\r\n    //Generation of pitches\r\n    generatePitch() {\r\n        for (let i = 0; i < this.motif.objects.length; i++) {\r\n            if (this.segment.objects[i].type === 'pause') {\r\n                delete this.segment.objects[i].pitch;\r\n            } else {\r\n                this.segment.objects[i].pitch = this.motif.objects[i].pitch;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as pieceProto from '../../piece.prototype.js';\r\nimport * as Utils from '../../utils.js';\r\nimport { Pitch } from '../Pitch/Pitch.js';\r\n\r\n/*Contrast transformation\r\nGenerate completely new random notes with respect to the previous ones\r\n*/\r\nexport default class Contrast {\r\n    constructor(piece, segmentIndex) {\r\n        this.piece = piece;\r\n        this.segment = piece.segments[segmentIndex];\r\n        this.previousSegment =\r\n            segmentIndex > 0 ? piece.segments[segmentIndex - 1] : null;\r\n        this.segmentIndex = segmentIndex;\r\n        this.generateTiming();\r\n        this.generatePitch();\r\n        return this.segment;\r\n    }\r\n\r\n    //Generation of duration\r\n    generateTiming() {\r\n        const cells = this.piece.segmentDuration * 8;\r\n        const granularity = 0.125;\r\n\r\n        //Set probabilities with respect to segment duration\r\n        let probs = [];\r\n        if (this.piece.segmentDuration >= 3) probs = [20, 50, 20, 10];\r\n        if (this.piece.segmentDuration === 2) probs = [10, 40, 30, 20];\r\n        if (this.piece.segmentDuration === 1) probs = [0, 40, 50, 10];\r\n\r\n        let filledCells = 0.0;\r\n\r\n        //Evaluating and filling cells with respect to available durations\r\n        for (let c = 0; c < cells; c++) {\r\n            let freeCells = cells - filledCells;\r\n\r\n            if (c < filledCells) continue;\r\n\r\n            let objDuration = 0.0;\r\n\r\n            if (freeCells >= 8) {\r\n                objDuration = Utils.pickState([\r\n                    [granularity * 8, probs[0]],\r\n                    [granularity * 4, probs[1]],\r\n                    [granularity * 2, probs[2]],\r\n                    [granularity, probs[3]],\r\n                ]);\r\n                filledCells += objDuration / granularity;\r\n            } else if (freeCells >= 4) {\r\n                let adjust = probs[1] + probs[2] + probs[3];\r\n\r\n                objDuration = Utils.pickState([\r\n                    [granularity * 4, (probs[1] / adjust) * 100],\r\n                    [granularity * 2, (probs[2] / adjust) * 100],\r\n                    [granularity, (probs[3] / adjust) * 100],\r\n                ]);\r\n                filledCells += objDuration / granularity;\r\n            } else if (freeCells >= 2) {\r\n                let adjust = probs[2] + probs[3];\r\n\r\n                objDuration = Utils.pickState([\r\n                    [granularity * 2, (probs[2] / adjust) * 100],\r\n                    [granularity, (probs[3] / adjust) * 100],\r\n                ]);\r\n\r\n                filledCells += objDuration / granularity;\r\n\r\n            } else if (freeCells === 1) {\r\n                objDuration = granularity;\r\n                filledCells += objDuration / granularity;\r\n            }\r\n\r\n            let objType = Utils.pickState([\r\n                ['note', 100 - (this.piece.pausePresence * 100)],\r\n                ['pause', this.piece.pausePresence * 100],\r\n            ]);\r\n\r\n            let obj = pieceProto.object();\r\n            obj.type = objType;\r\n            obj.duration = objDuration;\r\n\r\n            this.segment.objects.push(obj);\r\n        }\r\n    }\r\n\r\n    //Generation of pitches\r\n    generatePitch() {\r\n        if (this.previousSegment == null) {\r\n            this.segment = new Pitch(this.segment).generate();\r\n        } else {\r\n            let lastPitch = null;\r\n            for (let i = 0; i < this.previousSegment.objects.length; i++) {\r\n                if (this.previousSegment.objects[i].type === 'pause') continue;\r\n                lastPitch = this.previousSegment.objects[i].pitch;\r\n            }\r\n\r\n            this.segment = new Pitch(this.segment).generate(lastPitch);\r\n        }\r\n    }\r\n}\r\n","import * as Utils from '../../utils.js';\r\nimport Repetition from './transform.repetition.js';\r\nimport Retrogradation from './transform.retrogradation.js';\r\nimport PitchVariation from './transform.pitchvariation.js';\r\nimport TemporalVariation from './transform.temporalvariation.js';\r\nimport Contrast from './transform.contrast.js';\r\nimport * as Filters from '../Pitch/pitch.filters.js';\r\n\r\n/* Pick musical transformation and apply transformation\r\n*/\r\n\r\nexport class Transform {\r\n    constructor(piece) {\r\n        this.piece = piece;\r\n    }\r\n    //Applies transformation to segment\r\n    applyTransformations() {\r\n        let motif = null;\r\n        for (let i = 0; i < this.piece.segments.length; i++) {\r\n            if (i === 0) {\r\n                this.piece.segments[i] = new this.piece.segments[\r\n                    i\r\n                ].transform.method(this.piece, i);\r\n                motif = this.piece.segments[i];\r\n            } else {\r\n                this.piece.segments[i] = new this.piece.segments[\r\n                    i\r\n                ].transform.method(this.piece, i, motif);\r\n\r\n                let prevChord =\r\n                    this.piece.segments[i - 1].chord.tonic +\r\n                    this.piece.segments[i - 1].chord.color;\r\n                let currChord =\r\n                    this.piece.segments[i].chord.tonic +\r\n                    this.piece.segments[i].chord.color;\r\n                if (prevChord !== currChord) {\r\n                    motif = this.piece.segments[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        //this.lastNoteAdjust()\r\n\r\n        return this.piece;\r\n    }\r\n\r\n    lastNoteAdjust() {\r\n        //Force last note to be a chord note\r\n        let lastSegmentIndex = this.piece.segments.length - 1;\r\n        let lastObjectIndex = null;\r\n\r\n        for (\r\n            let i = 0;\r\n            i < this.piece.segments[lastSegmentIndex].objects.length;\r\n            i++\r\n        ) {\r\n            let obj = this.piece.segments[lastSegmentIndex].objects[i];\r\n            if (obj.type === 'note') {\r\n                lastObjectIndex = i;\r\n            }\r\n        }\r\n\r\n        //Chord notes\r\n        let chordNotes = this.piece.segments[lastSegmentIndex].chord.notes;\r\n\r\n        let diatonicChordNotes = [];\r\n        for (let n = 0; n < chordNotes.length; n++) {\r\n            let note = chordNotes[n];\r\n            diatonicChordNotes.push(note);\r\n        }\r\n\r\n        let scale = this.piece.segments[lastSegmentIndex].diatonicScale.notes;\r\n        let filteredNotes = Filters.specifiedNotes(scale, chordNotes);\r\n        let lastObj =\r\n            this.piece.segments[lastSegmentIndex].objects[lastObjectIndex];\r\n        if (!lastObj) {\r\n            console.warn('LastObj not found');\r\n            return;\r\n        }\r\n\r\n        this.piece.segments[lastSegmentIndex].objects[lastObjectIndex].pitch =\r\n            Utils.nearestNote(filteredNotes, lastObj.pitch);\r\n    }\r\n\r\n    //Assigns one transformation to each segment (with respect to constraints)\r\n    pickTransformations() {\r\n        let motif = null;\r\n        for (let i = 0; i < this.piece.segments.length; i++) {\r\n            //1st segment: Motif\r\n            if (i === 0) {\r\n                this.piece.segments[i].transform.method = Contrast;\r\n                motif = this.piece.segments[i];\r\n                continue;\r\n            }\r\n\r\n            //1st segment of a New chord\r\n            if (\r\n                this.piece.segments[i - 1].chord.tonic +\r\n                    this.piece.segments[i - 1].chord.color !==\r\n                this.piece.segments[i].chord.tonic +\r\n                    this.piece.segments[i].chord.color\r\n            ) {\r\n                this.piece.segments[i].transform.method = Utils.randItem([\r\n                    Contrast,\r\n                    PitchVariation,\r\n                ]);\r\n                motif = this.piece.segments[i];\r\n                continue;\r\n            }\r\n\r\n            let choices = [];\r\n\r\n            //Repetiton\r\n            if (\r\n                this.piece.segments[i].directionality ===\r\n                    motif.directionality &&\r\n                this.piece.segments[i].chord.tonic +\r\n                    this.piece.segments[i].chord.color ===\r\n                    motif.chord.tonic + motif.chord.color &&\r\n                this.piece.segments[i - 1].transform.method !== Repetition\r\n                //&& this.piece.segments[i-1].transform.method != Contrast\r\n            )\r\n                choices.push(Repetition);\r\n\r\n            //Retrogradation\r\n            if (\r\n                !['0', motif.directionality].includes(\r\n                    this.piece.segments[i].directionality\r\n                )\r\n            )\r\n                choices.push(Retrogradation);\r\n\r\n            //PitchVariation\r\n            if (['+', '-', '0'].includes(this.piece.segments[i].directionality))\r\n                choices.push(PitchVariation);\r\n\r\n            //TemporalVariation\r\n            if (\r\n                [motif.directionality].includes(\r\n                    this.piece.segments[i].directionality\r\n                )\r\n            )\r\n                choices.push(TemporalVariation);\r\n\r\n            //Contrast\r\n            if (['+', '-', '0'].includes(this.piece.segments[i].directionality))\r\n                choices.push(Contrast);\r\n\r\n            this.piece.segments[i].transform.method = Utils.randItem(choices);\r\n            if (this.piece.segments[i].transform.method === Contrast)\r\n                motif = this.piece.segments[i];\r\n        }\r\n\r\n        return this.piece;\r\n    }\r\n}\r\n","/*\r\n*/\r\nexport class OnsetTime {\r\n    constructor(piece) {\r\n        this.piece = JSON.parse(JSON.stringify(piece));\r\n    }\r\n\r\n    \r\n    generate() {\r\n        let onsetTime = 0.00\r\n\r\n        for (let i = 0; i < this.piece.segments.length; i++) {\r\n            for(let j=0; j<this.piece.segments[i].objects.length; j++){\r\n                this.piece.segments[i].objects[j].onsetTime = onsetTime\r\n                onsetTime += this.piece.segments[i].objects[j].duration\r\n            }\r\n        }\r\n\r\n        return this.piece;\r\n    }\r\n}\r\n","import * as pieceProto from './piece.prototype.js'\r\nimport {Segmentation} from './generators/Segmentation.js'\r\nimport {Directionality} from './generators/Directionality.js'\r\nimport {ChordScaleTonality} from './generators/ChordScaleTonality.js'\r\nimport {Transform} from './generators/Transform/Transform.js'\r\nimport {OnsetTime} from './generators/OnsetTime.js'\r\n\r\n//The melody generation is managed entirely by this class\r\nexport class MelodyGen{\r\n    \r\n    //This method is used to generate the melody, given chords, pauses probability and music mode as arguments\r\n    //passed by GUI (the last two arguments are optional)\r\n    generate(chords, pausePresence = 0.2, classicMode = false){\r\n        /**\r\n          chords = [\r\n               {\r\n                    tonic: \"C\",\r\n                    color: \"Major\",\r\n                    duration: 4\r\n                }\r\n            ]\r\n\r\n            pausePresence = <0.00 - 1.00>\r\n            classicMode = <true/false>\r\n         */\r\n\r\n        //Create piece empty prototype scheme to be elaborated. Our goal will be filling this prototype up.\r\n        let piece = pieceProto.piece()\r\n\r\n        piece.pausePresence = pausePresence\r\n        piece.staticScaleAssociation = classicMode\r\n\r\n        //Piece segments generation\r\n        piece = new Segmentation(piece, chords).generate()\r\n        piece = new Directionality(piece).generate()\r\n        piece = new ChordScaleTonality(piece, chords).generate()\r\n        piece = new Transform(piece).pickTransformations()\r\n        piece = new Transform(piece).applyTransformations()\r\n        piece = new OnsetTime(piece).generate()\r\n        \r\n        //Prints piece object\r\n        console.log(piece)\r\n\r\n        //Render final object to be used by GUI\r\n        return this.export(piece)       \r\n    }\r\n\r\n\r\n    //Final output object rendering\r\n    export(piece){\r\n        let out = []\r\n        for(let i=0; i<piece.segments.length; i++){\r\n            for(let j=0; j<piece.segments[i].objects.length; j++){\r\n                let obj = piece.segments[i].objects[j]\r\n                out.push(obj)\r\n            }\r\n        }\r\n        return out\r\n    }\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    // apiKey: 'AIzaSyCHt07QmrCgXY_U17O23jQVpAxUmXD_W0E',\r\n    // authDomain: 'falling-notes.firebaseapp.com',\r\n    // projectId: 'falling-notes',\r\n    // storageBucket: 'falling-notes.appspot.com',\r\n    // messagingSenderId: '207181998221',\r\n    // appId: '1:207181998221:web:20bb5a0f9075f527c45ac4',\r\n    // measurementId: 'G-FKWRFZHM6B',\r\n\r\n    apiKey: 'AIzaSyA_oN8KNoH7IRTTDTbTCV_HdjX7kCCUdCE',\r\n    authDomain: 'fa-no-92f77.firebaseapp.com',\r\n    projectId: 'fa-no-92f77',\r\n    storageBucket: 'fa-no-92f77.appspot.com',\r\n    messagingSenderId: '126141384109',\r\n    appId: '1:126141384109:web:37d1f53610cb8522cc0d24',\r\n    measurementId: 'G-T50C9WGFYZ',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledRadioButton = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 90px;\r\n    width: fit-content;\r\n    background: ${(props) => props.theme.panelColor};\r\n    box-shadow: 0 8px 32px 0 rgba(75, 75, 75, 0.37);\r\n    margin: 20px;\r\n    font-size: 1.1em;\r\n    border-radius: 15px;\r\n    border: ${(props) => props.theme.border};\r\n    padding: 5px;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: 0.2s;\r\n    min-width: 100px;\r\n    height: 55px;\r\n    border: ${(props) => props.theme.border};\r\n    border-radius: 15px;\r\n    font-size: 1.1em;\r\n    background: ${(props) => props.theme.buttonColor};\r\n\r\n    margin: 5px;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    transition: 0.5s;\r\n    &:hover {\r\n        background: rgba(255, 255, 255, 0.9);\r\n    }\r\n`;\r\n\r\nconst RadioButton = (props) => {\r\n    return (\r\n        <StyledRadioButton className={props.className}>\r\n            {props.title}\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                {props.buttons.map((button, id) => (\r\n                    <StyledButton\r\n                        key={id}\r\n                        onClick={() => {\r\n                            props.buttonPressed(button);\r\n                        }}\r\n                        style={{\r\n                            background:\r\n                                props.mode === button ? props.color.hex : null,\r\n                        }}\r\n                    >\r\n                        {button}\r\n                    </StyledButton>\r\n                ))}\r\n            </div>\r\n        </StyledRadioButton>\r\n    );\r\n};\r\n\r\nexport default RadioButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BlurredPage from '../shared_components/BlurredPage';\r\nimport HeaderMenu from '../shared_components/HeaderMenu';\r\nimport ModalMenu from '../shared_components/ModalMenu';\r\nimport { HuePicker } from 'react-color';\r\nimport RadioButton from '../shared_components/RadioButton';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst StyledColorPicker = styled(HuePicker)`\r\n    display: flex;\r\n\r\n    align-self: center;\r\n    margin: 25px;\r\n\r\n    cursor: pointer;\r\n`;\r\n\r\nconst StyledPointer = styled.div`\r\n    width: 25px;\r\n    height: 25px;\r\n    transform: translate(-50%, -7px);\r\n    border-radius: 50%;\r\n    background: ${(props) => props.theme.buttonColor};\r\n`;\r\n\r\nconst StyleMenu = (props) => {\r\n    const toggleMenu = () => {\r\n        props.toggleMenu(2);\r\n        props.updateServer();\r\n    };\r\n\r\n    return props.showMenu ? (\r\n        <div className=\"Container\">\r\n            <BlurredPage onClick={toggleMenu} />\r\n            <ModalMenu className=\"StyleMenu\">\r\n                <HeaderMenu titleMenu={'Style Lab'} toggleMenu={toggleMenu} />\r\n                <p>🎨 Select the accent color of the application</p>\r\n                <Container>\r\n                    <StyledColorPicker\r\n                        height={10}\r\n                        pointer={StyledPointer}\r\n                        color={props.color}\r\n                        onChangeComplete={(color) => {\r\n                            props.setColor(color);\r\n                        }}\r\n                    ></StyledColorPicker>\r\n                </Container>\r\n                <p>\r\n                    🎹 Select the sound of the chord instrument and the melodic\r\n                    instrument\r\n                </p>\r\n\r\n                <Container>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'center',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <RadioButton\r\n                            title={'Chords'}\r\n                            color={props.color}\r\n                            mode={props.parameters.chordSound}\r\n                            buttons={props.chordSounds}\r\n                            buttonPressed={(button) => {\r\n                                props.changeChordSound(button);\r\n                            }}\r\n                        ></RadioButton>\r\n\r\n                        <RadioButton\r\n                            title={'Melody'}\r\n                            color={props.color}\r\n                            mode={props.parameters.melodySound}\r\n                            buttons={props.melodySounds}\r\n                            buttonPressed={(button) => {\r\n                                props.changeMelodySound(button);\r\n                            }}\r\n                        ></RadioButton>\r\n                    </div>\r\n                </Container>\r\n            </ModalMenu>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default StyleMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    width: fit-content;\r\n    height: fit-content;\r\n\r\n    margin-top: 10px;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n    display: flex;\r\n    align-self: flex-end;\r\n    align-items: center;\r\n    transition: 0.2s;\r\n    height: 30px;\r\n    width: fit-content;\r\n    border: ${(props) => props.theme.border};\r\n    border-radius: 15px;\r\n    font-size: 1em;\r\n    background: rgba(100, 255, 100, 0.9); /*${(props) =>\r\n        props.theme.buttonColor};*/\r\n\r\n    padding: 6px;\r\n\r\n    margin-left: 10px;\r\n\r\n    cursor: pointer;\r\n\r\n    transition: 0.5s;\r\n    &:hover {\r\n        background: rgba(100, 255, 100, 0.9);\r\n    }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n    display: flex;\r\n    align-self: flex-end;\r\n    align-items: center;\r\n    transition: 0.2s;\r\n    height: 30px;\r\n    width: fit-content;\r\n    border: ${(props) => props.theme.border};\r\n    border-radius: 15px;\r\n    font-size: 1em;\r\n    background: ${(props) => props.theme.buttonColor};\r\n\r\n    padding: 6px;\r\n\r\n    margin-left: 10px;\r\n\r\n    cursor: pointer;\r\n\r\n    transition: 0.5s;\r\n`;\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <StyledForm id=\"test\" onSubmit={props.onSubmit}>\r\n            <input\r\n                name=\"song\"\r\n                type=\"text\"\r\n                placeholder=\"nice title...\"\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            <SubmitButton type=\"submit\">Select</SubmitButton>\r\n            <DeleteButton\r\n                type=\"submit\"\r\n                onSubmit={props.onSubmit}\r\n                onClick={props.onDelete}\r\n                style={{\r\n                    color:\r\n                        props.allSongs.indexOf(props.value) < 0\r\n                            ? 'rgb(100, 100, 100)'\r\n                            : 'rgb(0, 0, 0)',\r\n                    background:\r\n                        props.allSongs.indexOf(props.value) < 0\r\n                            ? 'rgb(150, 150, 150)'\r\n                            : 'rgb(255, 100, 100, 0.8)',\r\n                    pointerEvents:\r\n                        props.allSongs.indexOf(props.value) < 0 ? 'none' : null,\r\n                }}\r\n            >\r\n                Delete\r\n            </DeleteButton>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport BlurredPage from '../shared_components/BlurredPage';\r\nimport Form from '../shared_components/Form';\r\nimport HeaderMenu from '../shared_components/HeaderMenu';\r\nimport ModalMenu from '../shared_components/ModalMenu';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledSongSection = styled.div`\r\n    display: flex;\r\n    width: fit-content;\r\n    flex-wrap: wrap;\r\n    align-content: flex-start;\r\n    overflow: auto;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst StyledSongName = styled.div`\r\n    display: flex;\r\n    width: fit-content;\r\n    height: fit-content;\r\n    flex-wrap: wrap;\r\n\r\n    background: ${(props) => props.theme.buttonColor};\r\n\r\n    border-radius: 10px;\r\n\r\n    border: ${(props) => props.theme.border};\r\n\r\n    margin-right: 10px;\r\n    margin-bottom: 5px;\r\n    margin-top: 5px;\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    &:hover {\r\n        background: rgba(255, 255, 255, 0.9);\r\n    }\r\n`;\r\n\r\nconst SongTitleMenu = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const toggleMenu = () => {\r\n        props.toggleMenu(0);\r\n        setValue('');\r\n    };\r\n\r\n    return props.showMenu ? (\r\n        <div className=\"Container\">\r\n            <BlurredPage onClick={toggleMenu} />\r\n            <ModalMenu className=\"SongTitleMenu\">\r\n                <HeaderMenu\r\n                    titleMenu={'Song Selection'}\r\n                    toggleMenu={toggleMenu}\r\n                />\r\n                <p>\r\n                    ✍🏼 Enter the name of the song you want to modify or create a\r\n                    new one\r\n                </p>\r\n                <Container>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'center',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Form\r\n                            onSubmit={props.onSubmit}\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                            allSongs={props.allSongs}\r\n                            onDelete={() => {\r\n                                props.onDelete(value);\r\n                                setValue('');\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Container>\r\n                <p>🧾 List of all the available songs</p>\r\n                <Container>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'center',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <StyledSongSection>\r\n                            {props.allSongs\r\n                                .filter((song) => song !== 'default')\r\n                                .map((song, index) => (\r\n                                    <StyledSongName\r\n                                        key={index}\r\n                                        onClick={(e) => {\r\n                                            setValue(e.target.innerText);\r\n                                        }}\r\n                                        style={{\r\n                                            background:\r\n                                                props.songName === song\r\n                                                    ? props.color.hex\r\n                                                    : null,\r\n                                            borderColor:\r\n                                                value === song\r\n                                                    ? props.color.hex\r\n                                                    : null,\r\n                                        }}\r\n                                    >\r\n                                        {song}\r\n                                    </StyledSongName>\r\n                                ))}\r\n                        </StyledSongSection>\r\n                    </div>\r\n                </Container>\r\n            </ModalMenu>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default SongTitleMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSliderSection = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: fit-content;\r\n    width: fit-content;\r\n    background: ${(props) => props.theme.panelColor};\r\n    box-shadow: 0 8px 32px 0 rgba(75, 75, 75, 0.37);\r\n    margin: 25px;\r\n\r\n    border-radius: 15px;\r\n    border: ${(props) => props.theme.border};\r\n    padding: 5px;\r\n`;\r\n\r\nconst StyledSlider = styled.input`\r\n    -webkit-appearance: none;\r\n    width: 300px;\r\n    height: 20px;\r\n\r\n    background: ${(props) => props.theme.panelColor};\r\n    border: ${(props) => props.theme.border};\r\n    -webkit-transition: 0.2s;\r\n    transition: opacity 0.2s;\r\n    margin: 5px;\r\n\r\n    &::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n        appearance: none;\r\n        width: 25px;\r\n        height: 25px;\r\n        border-radius: 50%;\r\n        background: rgb(100, 100, 100);\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Slider = (props) => {\r\n    return (\r\n        <StyledSliderSection className={props.className}>\r\n            <p>{props.title}</p>\r\n            <StyledSlider\r\n                type=\"range\"\r\n                min={props.min}\r\n                max={props.max}\r\n                step={props.step}\r\n                value={props.value}\r\n                onChange={(e) => {\r\n                    props.onSlide(e.target.value);\r\n                }}\r\n            />\r\n            <p>{props.value}</p>\r\n            {/* <input\r\n                type=\"number\"\r\n                min={props.min}\r\n                max={props.max}\r\n                value={props.value}\r\n                onSubmit={(e) => {\r\n                    if (\r\n                        e.target.value > props.min &&\r\n                        e.target.value < props.max\r\n                    )\r\n                        props.onSlide(e.target.value);\r\n                }}\r\n            /> */}\r\n        </StyledSliderSection>\r\n    );\r\n};\r\n\r\nexport default Slider;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BlurredPage from '../shared_components/BlurredPage';\r\nimport HeaderMenu from '../shared_components/HeaderMenu';\r\nimport ModalMenu from '../shared_components/ModalMenu';\r\nimport RadioButton from '../shared_components/RadioButton';\r\nimport Slider from '../shared_components/Slider';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n`;\r\n\r\nconst Select = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: 0.2s;\r\n\r\n    height: 80px;\r\n    border: ${(props) => props.theme.border};\r\n    border-radius: 15px;\r\n    font-size: 1.2em;\r\n    background: ${(props) => props.theme.buttonColor};\r\n    padding: 5px;\r\n    margin-top: 20px;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    transition: 0.5s;\r\n    &:hover {\r\n        background: rgba(255, 255, 255, 0.9);\r\n    }\r\n`;\r\n\r\nconst ParametersMenu = (props) => {\r\n    const toggleMenu = () => {\r\n        props.toggleMenu(3);\r\n        props.updateServer();\r\n    };\r\n\r\n    //var Toggle = require('react-toggle');\r\n    return props.showMenu ? (\r\n        <div className=\"Container\">\r\n            <BlurredPage onClick={toggleMenu} />\r\n            <ModalMenu className=\"MelodyMenu\">\r\n                <HeaderMenu\r\n                    titleMenu={'Parameters Lab'}\r\n                    toggleMenu={toggleMenu}\r\n                />\r\n                <p>⏲ Select the BPM of the generated melody</p>\r\n                <Container>\r\n                    <Slider\r\n                        color={props.color}\r\n                        title={'BPM'}\r\n                        min={40}\r\n                        max={200}\r\n                        value={props.parameters.tempo}\r\n                        onSlide={(value) => {\r\n                            props.changeTempo(value);\r\n                        }}\r\n                    ></Slider>\r\n                </Container>\r\n                <p>\r\n                    🎼 Select the balance between notes and pauses \r\n                </p>\r\n                <Container>\r\n                    <Slider\r\n                        color={props.color}\r\n                        title={'Pauses ↔ Notes'}\r\n                        min={0}\r\n                        max={1}\r\n                        step={0.01}\r\n                        value={props.parameters.notePause}\r\n                        onSlide={(value) => {\r\n                            props.changeNotePause(value);\r\n                        }}\r\n                    ></Slider>\r\n                </Container>\r\n                <p>\r\n                    🤯 Select the level of complexity\r\n                </p>\r\n                <Container>\r\n                    <RadioButton\r\n                        color={props.color}\r\n                        mode={props.parameters.complexityMode}\r\n                        buttons={props.complexityModes}\r\n                        buttonPressed={(button) => {\r\n                            props.changeComplexity(button);\r\n                        }}\r\n                    ></RadioButton>\r\n                </Container>\r\n            </ModalMenu>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default ParametersMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledHelperSection = styled.div`\r\n    font-size: 1.3em;\r\n    color: white;\r\n`;\r\n\r\nconst StyledMenuNumber = styled.div`\r\n    display: flex;\r\n\r\n    align-items: center;\r\n\r\n    font-size: 1.5em;\r\n    width: 50px;\r\n    height: 50px;\r\n    color: white;\r\n`;\r\n\r\nconst HelpMenu = (props) => {\r\n    const toggleMenu = () => {\r\n        props.toggleMenu(4);\r\n    };\r\n\r\n    return props.showMenu ? (\r\n        <div className=\"Container\" onClick={toggleMenu}>\r\n            <StyledHelperSection>\r\n                <h1 style={{ marginBottom: '10px' }}>\r\n                    Hello traveller, welcome to Falling Notes! 🌠\r\n                </h1>\r\n                <p>&nbsp;&nbsp;</p>\r\n                <h4>INSTRUCTIONS:</h4>\r\n                <p>\r\n                    1. Open the \"Song Selection\" menu to create a song or to\r\n                    select it from the existing list{' '}\r\n                </p>\r\n                <p>\r\n                    2. Open the \"Chord Lab\" menu to write the chord progression\r\n                    of your song\r\n                </p>\r\n                <p>\r\n                    3. Click on the dice to generate a random melody. Every time\r\n                    you press this button, the old melody will be overwritten!\r\n                </p>\r\n                <p>4. Press the Play button and enjoy your creation! </p>\r\n                <p>&nbsp;&nbsp;</p>\r\n                <h4>CUSTOMIZATION:</h4>\r\n                <p>\r\n                    The \"Style Lab\" menu allows you to choose the color accent\r\n                    and the instruments of your song\r\n                </p>\r\n                <p>\r\n                    The \"Parameters Lab\" menu allows you to choose the tempo of\r\n                    the song and tune the melody generator parameters\r\n                </p>\r\n                <p>&nbsp;&nbsp;</p>\r\n                <h4>REMEMBER:</h4>\r\n                <p>\r\n                    If you really like the melody, you can download the MIDI\r\n                    file using the Download button!\r\n                </p>\r\n                <p>&nbsp;&nbsp;</p>\r\n                <h4>EXTRA:</h4>\r\n                <p>\r\n                    For more infos, please take a look at the&nbsp;\r\n                    <a\r\n                        style={{ color: '#ffbf00' }}\r\n                        href=\"https://github.com/FredReeva/falling-notes\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        Github Repository\r\n                    </a>\r\n                    .\r\n                </p>\r\n                <p>&nbsp;&nbsp;</p>\r\n                <p className=\"pulsate\">Click anywhere to continue...</p>\r\n            </StyledHelperSection>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default HelpMenu;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles } from './components/GlobalStyles';\r\nimport MainMenu from './components/MainMenu';\r\nimport ChordsMenu from './components/menu_chords/ChordsMenu';\r\nimport World from './components/Background';\r\nimport themes from './Themes';\r\nimport { MelodyGen } from './libraries/melodygen/main.js';\r\nimport firebase from './components/firebase';\r\nimport StyleMenu from './components/menu_styles/StyleMenu';\r\nimport SongTitleMenu from './components/menu_songs/SongTitleMenu';\r\nimport ParametersMenu from './components/menu_parameters/ParametersMenu';\r\nimport HelpMenu from './components/help page/HelpMenu';\r\nimport { IoInformationCircle } from 'react-icons/io5';\r\n\r\nimport * as Tone from 'tone';\r\nimport Sound from './components/Sound';\r\n\r\nfunction App() {\r\n    // states of the app, passed to the components\r\n    const [showMenu, setShowMenu] = useState([\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        true,\r\n    ]);\r\n    const [songName, updateSongName] = useState('default');\r\n    const [allSongs, updateAllSongs] = useState([]);\r\n    const [chords, updateChords] = useState([]);\r\n    const [melody, updateMelody] = useState([]);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const complexityModes = ['Classical', 'Pro Jazz'];\r\n    const melodySounds = ['Bells', 'Synth'];\r\n    const chordSounds = ['Pad', 'Piano'];\r\n    const [parameters, updateParameters] = useState({\r\n        tempo: 120,\r\n        notePause: 0.5,\r\n        complexityMode: complexityModes[0],\r\n        melodySound: melodySounds[0],\r\n        chordSound: chordSounds[0],\r\n        color: {\r\n            hsl: {\r\n                h: 0,\r\n                s: 1,\r\n                l: 0.5,\r\n                a: 1,\r\n            },\r\n            hex: '#FF0000',\r\n        },\r\n    });\r\n\r\n    // Get songs from DB\r\n    useEffect(() => {\r\n        getAllSongs();\r\n        getSong('default');\r\n        //computeMelody();\r\n    }, []); // execute only at start\r\n\r\n    // Visual and menu functions\r\n\r\n    // Toogle Menu when pressed\r\n    const toggleMenu = (i) => {\r\n        let newMenuState = [false, false, false, false, false];\r\n        let changeMenu = !showMenu[i];\r\n        newMenuState[i] = changeMenu;\r\n        setShowMenu(newMenuState);\r\n    };\r\n\r\n    //* DB management functions\r\n\r\n    const debugDb = true;\r\n\r\n    // reference to the DB on firebase\r\n    const refSongs = firebase.firestore().collection('songs');\r\n    const refParams = firebase.firestore().collection('parameters');\r\n\r\n    // Given the name of the song, get it from the DB or create a new one\r\n    const getSong = (docName) => {\r\n        if (debugDb) console.log('Aceess to db get song');\r\n\r\n        // get the song\r\n        refSongs\r\n            .doc(docName)\r\n            .get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    const items = doc.data();\r\n                    if (items) {\r\n                        let loadSong = [];\r\n                        for (const key in items) {\r\n                            loadSong = [...loadSong, items[key]];\r\n                        }\r\n                        updateChords(loadSong);\r\n                        updateMelody([]);\r\n                    }\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    updateChords([]);\r\n                    updateMelody([]);\r\n                    updateServer(docName);\r\n                    const newAllSongs = [...allSongs, docName];\r\n                    updateAllSongs(newAllSongs);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error getting document:', error);\r\n            });\r\n\r\n        // get the parameters\r\n        refParams\r\n            .doc(docName)\r\n            .get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    const items = doc.data();\r\n                    if (items) {\r\n                        // here save parameters in state\r\n                        updateParameters({\r\n                            tempo: items.tempo,\r\n                            notePause: items.notePause,\r\n                            complexityMode: items.complexityMode,\r\n                            melodySound: items.melodySound,\r\n                            chordSound: items.chordSound,\r\n                            color: items.color,\r\n                        });\r\n                    }\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    // here initialize parameters to default\r\n                    updateParameters({\r\n                        tempo: 120,\r\n                        notePause: 0.5,\r\n                        complexityMode: complexityModes[0],\r\n                        melodySound: melodySounds[0],\r\n                        chordSound: chordSounds[0],\r\n                        color: {\r\n                            hsl: {\r\n                                h: 0,\r\n                                s: 1,\r\n                                l: 0.5,\r\n                                a: 1,\r\n                            },\r\n                            hex: '#FF0000',\r\n                        },\r\n                    });\r\n                    updateServer(docName);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error getting document:', error);\r\n            });\r\n    };\r\n\r\n    // update the currently selected song\r\n    const updateServer = (docName = songName) => {\r\n        if (debugDb) console.log('Aceess to db update');\r\n        const newChordState = { ...chords };\r\n        refSongs.doc(docName).delete();\r\n        refSongs.doc(docName).set(newChordState);\r\n\r\n        const newParamsState = { ...parameters };\r\n\r\n        refParams.doc(docName).delete();\r\n        refParams.doc(docName).set(newParamsState);\r\n    };\r\n\r\n    // delete the provided song from the DB\r\n    const deleteSong = (docName) => {\r\n        if (debugDb) console.log('Aceess to db delete');\r\n\r\n        const newAllSongs = allSongs.filter((song) => song !== docName);\r\n        updateAllSongs(newAllSongs);\r\n\r\n        refSongs.doc(docName).delete();\r\n        refParams.doc(docName).delete();\r\n    };\r\n\r\n    // query the DB to obtain the list of available songs\r\n    const getAllSongs = async () => {\r\n        if (debugDb) console.log('Aceess to db get all');\r\n        const snapshot = await firebase.firestore().collection('songs').get();\r\n        const updatedSongs = snapshot.docs.map((doc) => doc.id);\r\n\r\n        updateAllSongs(updatedSongs);\r\n    };\r\n\r\n    // get the selected song from the Form in the title menu\r\n    const submitSongName = (event) => {\r\n        //console.log(event.target.elements.song.value);\r\n        event.preventDefault();\r\n        var text =\r\n            event.target.elements.song.value !== ''\r\n                ? event.target.elements.song.value\r\n                : 'default';\r\n        updateSongName(text);\r\n\r\n        getSong(text);\r\n    };\r\n\r\n    // Sound-related functions\r\n\r\n    // start/stop the transport\r\n    const startStopContext = async () => {\r\n        await Tone.start();\r\n\r\n        if (isPlaying) {\r\n            // Turn of our player if music is currently playing\r\n            //console.log('...stop');\r\n            setIsPlaying(false);\r\n            await Tone.Transport.stop();\r\n\r\n            return;\r\n        }\r\n\r\n        console.log('play...');\r\n        setIsPlaying(true);\r\n        await Tone.Transport.start();\r\n    };\r\n\r\n    // start/stop the transport\r\n    const stopContext = async () => {\r\n        if (isPlaying) {\r\n            // Turn of our player if music is currently playing\r\n            //console.log('...stop');\r\n            setIsPlaying(false);\r\n            await Tone.Transport.stop();\r\n\r\n            return;\r\n        }\r\n        return;\r\n    };\r\n\r\n    // melody computation functions\r\n\r\n    // given a list of chords, generate the melody\r\n\r\n    const computeMelody = () => {\r\n        // convert values\r\n        var chordList = [];\r\n        chords.forEach((element) => {\r\n            const tonic = element['tonic'];\r\n            const color = element['quality'];\r\n            const duration = parseInt(element['duration']);\r\n            var readChord = { tonic, color, duration };\r\n\r\n            chordList = [...chordList, readChord];\r\n        });\r\n        var classic = false;\r\n        var balance = Math.abs(1 - parameters.notePause);\r\n\r\n        if (parameters.complexityMode === 'Classical') classic = true;\r\n\r\n        // if there are chords, generate the melody\r\n        if (chordList.length > 0) {\r\n            let generator = new MelodyGen();\r\n            let generatedMelody = generator.generate(\r\n                chordList,\r\n                balance,\r\n                classic\r\n            );\r\n            updateMelody(generatedMelody);\r\n        }\r\n    };\r\n\r\n    // app structure\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <ThemeProvider theme={themes.dark}>\r\n                <GlobalStyles />\r\n                <Sound\r\n                    chords={chords}\r\n                    melody={melody}\r\n                    isPlaying={isPlaying}\r\n                    parameters={parameters}\r\n                />\r\n\r\n                <World\r\n                    melody={melody}\r\n                    chords={chords}\r\n                    color={parameters.color.hsl.h}\r\n                    isPlaying={isPlaying}\r\n                />\r\n\r\n                <p\r\n                    className=\"Info\"\r\n                    style={{\r\n                        color: 'white',\r\n                        position: 'fixed',\r\n                        bottom: '25px',\r\n                        right: '25px',\r\n                        zIndex: '100',\r\n                    }}\r\n                >\r\n                    Song: {songName}\r\n                </p>\r\n\r\n                <MainMenu\r\n                    toggleMenu={toggleMenu}\r\n                    melody={melody}\r\n                    chords={chords}\r\n                    tempo={parameters.tempo}\r\n                    songName={songName}\r\n                    isPlaying={isPlaying}\r\n                    startStopContext={startStopContext}\r\n                    stopContext={stopContext}\r\n                    computeMelody={computeMelody}\r\n                />\r\n                <HelpMenu toggleMenu={toggleMenu} showMenu={showMenu[4]} />\r\n                <IoInformationCircle\r\n                    style={{\r\n                        color: 'white',\r\n                        fontSize: '2.5em',\r\n                        position: 'fixed',\r\n                        top: '15px',\r\n                        right: '15px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                    onClick={() => toggleMenu(4)}\r\n                ></IoInformationCircle>\r\n                <SongTitleMenu\r\n                    songName={songName}\r\n                    color={parameters.color}\r\n                    showMenu={showMenu[0]}\r\n                    toggleMenu={toggleMenu}\r\n                    onSubmit={(e) => {\r\n                        submitSongName(e);\r\n                        //computeMelody();\r\n                    }}\r\n                    onDelete={deleteSong}\r\n                    allSongs={allSongs}\r\n                    stopContext={stopContext}\r\n                />\r\n                <ChordsMenu\r\n                    showMenu={showMenu[1]}\r\n                    toggleMenu={toggleMenu}\r\n                    chords={chords}\r\n                    updateChords={updateChords}\r\n                    updateServer={updateServer}\r\n                    stopContext={stopContext}\r\n                />\r\n                <StyleMenu\r\n                    showMenu={showMenu[2]}\r\n                    toggleMenu={toggleMenu}\r\n                    color={parameters.color}\r\n                    setColor={(e) => {\r\n                        updateParameters({\r\n                            ...parameters,\r\n                            color: {\r\n                                hsl: e.hsl,\r\n                                hex: e.hex,\r\n                            },\r\n                        });\r\n                    }}\r\n                    parameters={parameters}\r\n                    changeChordSound={(e) =>\r\n                        updateParameters({ ...parameters, chordSound: e })\r\n                    }\r\n                    changeMelodySound={(e) =>\r\n                        updateParameters({ ...parameters, melodySound: e })\r\n                    }\r\n                    melodySounds={melodySounds}\r\n                    chordSounds={chordSounds}\r\n                    updateServer={updateServer}\r\n                    stopContext={stopContext}\r\n                />\r\n                <ParametersMenu\r\n                    showMenu={showMenu[3]}\r\n                    toggleMenu={toggleMenu}\r\n                    parameters={parameters}\r\n                    color={parameters.color}\r\n                    changeTempo={(e) =>\r\n                        updateParameters({ ...parameters, tempo: e })\r\n                    }\r\n                    changeNotePause={(e) =>\r\n                        updateParameters({ ...parameters, notePause: e })\r\n                    }\r\n                    changeComplexity={(e) =>\r\n                        updateParameters({ ...parameters, complexityMode: e })\r\n                    }\r\n                    complexityModes={complexityModes}\r\n                    updateServer={updateServer}\r\n                    stopContext={stopContext}\r\n                />\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}